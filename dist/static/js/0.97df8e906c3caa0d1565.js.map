{"version":3,"sources":["webpack:///static/js/0.97df8e906c3caa0d1565.js","webpack:///./src/views/product_management/ProductDetail.vue","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/element-ui/lib/message-box.js","webpack:///./~/element-ui/lib/theme-default/message-box.css?16dc","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/element-ui/lib/theme-default/message-box.css?0d7a","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./src/common/crossers.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./src/common/mixin.js","webpack:///AssetDialog.vue","webpack:///ProductDialog.vue","webpack:///./src/components/AssetDialog.vue?0055","webpack:///./src/components/ProductDialog.vue?8c5e","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/model/series.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./src/components/AssetDialog.vue?02a3","webpack:///./src/components/ProductDialog.vue?cbeb","webpack:///./src/components/AssetDialog.vue?ed29","webpack:///./src/components/ProductDialog.vue?055b","webpack:///./src/components/AssetDialog.vue?b1d9","webpack:///./src/components/ProductDialog.vue?5ee2","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///LineEchart.vue","webpack:///NoteCard.vue","webpack:///./src/components/LineEchart.vue?a28f","webpack:///./src/components/NoteCard.vue?7c49","webpack:///./~/echarts/lib/chart/bar.js","webpack:///./~/echarts/lib/chart/bar/BarSeries.js","webpack:///./~/echarts/lib/chart/bar/BarView.js","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/echarts/lib/chart/bar/helper.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/echarts/lib/layout/barGrid.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./src/components/LineEchart.vue?edf6","webpack:///./src/components/NoteCard.vue?e67e","webpack:///./src/components/LineEchart.vue","webpack:///./src/components/NoteCard.vue","webpack:///./src/components/LineEchart.vue?910a","webpack:///./src/components/NoteCard.vue?25e9","webpack:///ProductDetail.vue","webpack:///./src/views/product_management/ProductDetail.vue?0a19","webpack:///./src/views/product_management/ProductDetail.vue?07cb","webpack:///./src/assets/images/cruxDate.png","webpack:///./src/assets/images/cruxDate2.png","webpack:///./src/views/product_management/ProductDetail.vue?e7d4"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","HASH_MAP_PREFIX","get","set","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","STATUS_PENDING","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Transformable","BoundingRect","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","rotation","elMap1","oldEl","newProp","_trim","str","quantityExponent","val","LN10","RADIAN_EPSILON","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","parseDate","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","detect","ua","os","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","navigator","userAgent","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","modules","moduleId","installedModules","loaded","c","p","0","3","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","existing","beforeCreate","9","56","60","61","120","135","140","167","202","_interopRequireDefault","__esModule","_main","_main2","203","MessageBox","undefined","_typeof","Symbol","iterator","_vue","_vue2","_merge","_merge2","_vdom","title","showInput","showClose","modalFade","lockScroll","closeOnClickModal","closeOnPressEscape","inputValue","inputPlaceholder","inputPattern","inputValidator","inputErrorMessage","showConfirmButton","showCancelButton","confirmButtonPosition","confirmButtonHighlight","cancelButtonHighlight","confirmButtonText","cancelButtonText","confirmButtonClass","cancelButtonClass","customClass","beforeClose","MessageBoxConstructor","currentMsg","instance","msgQueue","defaultCallback","callback","resolve","$type","reject","initInstance","showNextMsg","visible","closeTimer","oldCb","isVNode","$slots","body","appendChild","$el","nextTick","$isServer","Promise","setDefaults","alert","confirm","prompt","204","205","_popup","_popup2","_locale","_locale2","_input","_input2","_button","_button2","_locale3","typeMap","success","info","warning","error","mixins","modal","Boolean","components","ElInput","ElButton","computed","typeClass","confirmButtonClasses","cancelButtonClasses","methods","getSafeClose","_this","currentId","$nextTick","doClose","_this2","_closing","onClose","setTimeout","bodyOverflow","overflow","paddingRight","bodyPaddingRight","opened","transition","doAfterClose","handleWrapperClick","handleAction","validate","editorErrorMessage","addClass","$refs","input","querySelector","validateResult","removeClass","watch","immediate","_this3","_","_this4","focus","confirmButtonLoading","cancelButtonLoading","confirmButtonDisabled","206","_vm","_h","$createElement","_c","_self","attrs","directives","rawName","expression","staticClass","click","$event","currentTarget","class","_v","_s","_e","margin-left","_t","ref","nativeOn","keyup","_k","keyCode","$$v","visibility","loading","207","content","locals","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","sources","mappings","file","sourcesContent","sourceRoot","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_vue__","updateCrumbs","excludes","includes","propName","classUtil","getColorFromPalette","scope","colorIdx","colorNameMap","colorPalette","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","symbolType","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","dimensions","getDimensionsInfo","completeDimensions","defaultNames","categoryIndex","nameList","createNameList","categories","dimValueGetter","dimName","hasItemOption","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","getDimension","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","dimCount","value0","retrieveValue","extraPrefix","guessOrdinal","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","formattedValue","colorEl","animationEnabled","getAxisTooltipData","getTooltipPosition","point","dataToPoint","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","fixExtent","safeLimit","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","guid","Animatable","clipPath","drift","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","labelRotate","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelStr","textEl","targetType","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","axisRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","axisTrigger","link","tooltipOption","highDownKey","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","updateHandleTransform","axisExtent","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","shadow","bandWidth","getBandWidth","getItemStyle","xAxis","yAxis","fixExtentWithBands","nTick","normalizedExtent","onBand","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","statuColors","待提交","待确认","待发布","待执行","已发布","销售完成","已确认确认书","amountColors","已执行","未执行","审批中","filters","filterColor","filterAmountColor","defineProperty","__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css__","__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css__","__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form__","__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form___default","__WEBPACK_IMPORTED_MODULE_3_lodash__","static","ElForm","showDialog","boole","disabled","dialogData","goEaa","closeDialog","productName","assetType","company","accounts","Surplus","stated","chartInstance","echartsAPIList","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","valueDim","onEmphasis","ratio","onNormal","fadeOut","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","padding","borderColor","borderWidth","handle","icon","AxisPonterView","disopse","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","handlers","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisIndex","axisId","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","positionGroup","getBoxLayoutParams","addBackground","LegendModel","selected","_updateData","legendData","_data","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","adjustAxes","axesList","isHorizontal","gridRect","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","otherAxis","grids","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","fontWeight","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","componentProto","encodeColor","colorAccessPath","_f","slot","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","dir","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","TOUCH_CLICK_DELAY","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","cp0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","polyHelper","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_1_lodash__","__WEBPACK_IMPORTED_MODULE_2_vue__","echart","mounted","lineEchart","legend","ticket","splitLine","chartOption","__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css__","__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box__","__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box___default","__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css__","__WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css__","__WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message__","__WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default","__WEBPACK_IMPORTED_MODULE_5_lodash__","passedNotes","addNote","notes","newNote","editActive","textEdit","createdAt","addNoteFocus","saveNote","note","moreNote","noteVisibleCount","noteMoreStep","editNote","resetNote","deleteNote","then","showNotes","barLayoutGrid","brushSelector","createRect","rectShape","animateProperty","animateTarget","removeRect","getRectItemLayout","fixedLineWidth","getLineWidth","signX","signY","updateStyle","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","_renderOnCartesian","oldData","newIndex","oldIndex","getMarkerPosition","pt","legendHoverLink","barMinHeight","labelText","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","sign","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","dimList","output","axisX","axisY","dataToPoints","containLabel","getSeriesStackId","getAxisKey","calBarWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","samplers","average","nearest","indexSampler","sampler","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","rows","create_at","__WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue__","__WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue___default","__WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue__","__WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue___default","__WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue__","__WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue___default","__WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue__","__WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue___default","__WEBPACK_IMPORTED_MODULE_9__common_mixin_js__","__WEBPACK_IMPORTED_MODULE_10_lodash__","__WEBPACK_IMPORTED_MODULE_11__common_crossers_js__","KtLineChart","KtNoteCard","KtProductDialog","KtAssetDialog","demo","shortName","$route","$emit","goRegPro","$router","goClient","extractDialog","extractVisible","historyDialog","historyVisible","productDialog","assetDialog","editAsset","deleteAsset","rateChartOpt","remindActive","attachments","products","amount","todayEarning","totalEarning","historyDeals","dealAt","opType","costLists","charge","costtype","profitType","billingMode","billingDates","costbase","payfrequency","startDate","already","currentLists","accountLists","accountType","accountName","account","openAccount","historyDatas","assetsName","cztype","change","extractDatas","extract","wait","producttype1","producttype2","gutter","file-list","passed-notes","be","_m","property","scopedSlots","_u","row","costList","currentList","accountList","rowspan"],"mappings":"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jMo0nCQ44G,UiMn0nCR,OjMo0nCQ1uH,KiMn0nCR,EjMo0nCQ68G,QiMn0nCR,GjMo0nCQ2S,gBACA5S,QACEj5G,GiMn0nCV,EjMo0nCUm5G,YiMn0nCV,EjMo0nCU2S,ciMn0nCV,EjMo0nCU1S,SiMn0nCV,iBjMo0nCU1sF,KiMn0nCV,iBjMo0nCU2sF,UAAW,GiMn0nCrB7lG,QjMq0nCUxT,GiMn0nCV,EjMo0nCUm5G,YiMn0nCV,EjMo0nCU2S,ciMn0nCV,EjMo0nCU1S,SiMn0nCV,YjMo0nCU1sF,KiMn0nCV,YjMo0nCU2sF,UAAW,GiMn0nCrB7lG,QjMq0nCUxT,GiMn0nCV,EjMo0nCUm5G,YiMn0nCV,EjMo0nCU2S,ciMn0nCV,EjMo0nCU1S,SiMn0nCV,qBjMo0nCU1sF,KiMn0nCV,qBjMo0nCU2sF,UAAW,GiMn0nCrB7lG,QjMq0nCUxT,GiMn0nCV,EjMo0nCUm5G,YiMn0nCV,EjMo0nCU2S,ciMn0nCV,EjMo0nCU1S,SiMn0nCV,sBjMo0nCU1sF,KiMn0nCV,sBjMo0nCU2sF,UAAW,GiMl0nCrB7lG,QjMo0nCQu4G,cACE55G,KiMn0nCV,SjMq0nCUA,KiMl0nCV,UjMo0nCQ65G,WACE75G,KiMn0nCV,ajMo0nCU6P,MiMn0nCV,IjMo0nCUiqG,OiMn0nCV,OjMo0nCU3vC,MiMn0nCV,IjMo0nCU4vC,aiMn0nCV,IjMo0nCUC,aiMn0nCV,OjMq0nCUh6G,KiMn0nCV,ajMo0nCU6P,MiMn0nCV,IjMo0nCUiqG,OiMn0nCV,OjMo0nCU3vC,MiMn0nCV,IjMo0nCU4vC,aiMn0nCV,KjMo0nCUC,aiMl0nCV,QjMo0nCQC,eACEC,OAAQ,GiMn0nClB74G,MjMo0nCUrB,KiMn0nCV,ajMo0nCUm6G,OiMn0nCV,KjMo0nCUL,OiMn0nCV,WjMq0nCUI,OAAQ,GiMn0nClB74G,MjMo0nCUrB,KiMn0nCV,ajMo0nCUm6G,OiMn0nCV,KjMo0nCUL,OiMj0nCV,YjMo0nCMM,YACEC,OiMn0nCR,OjMo0nCQC,SiMn0nCR,MjMo0nCQC,WiMn0nCR,KjMo0nCQC,YiMn0nCR,OjMo0nCQpxD,KiMn0nCR,OjMo0nCQqxD,aiMn0nCR,MjMo0nCQC,SiMn0nCR,OjMo0nCQC,aiMn0nCR,KjMo0nCQC,UiMn0nCR,WjMo0nCQC,QiMn0nCR,kBjMq0nCQR,OiMn0nCR,OjMo0nCQC,SiMn0nCR,UjMo0nCQC,WiMn0nCR,KjMo0nCQC,YiMn0nCR,QjMo0nCQpxD,KiMn0nCR,IjMo0nCQqxD,aiMn0nCR,IjMo0nCQC,SiMn0nCR,IjMo0nCQC,aiMn0nCR,KjMo0nCQC,UiMn0nCR,WjMo0nCQC,QiMl0nCR,oBjMo0nCMC,eACET,OiMn0nCR,OjMo0nCQC,SiMn0nCR,MjMo0nCQC,WiMn0nCR,KjMo0nCQC,YiMn0nCR,OjMo0nCQpxD,KiMn0nCR,OjMo0nCQqxD,aiMn0nCR,MjMo0nCQC,SiMn0nCR,OjMo0nCQC,aiMn0nCR,KjMo0nCQC,UiMn0nCR,6BjMo0nCQC,QiMn0nCR,gBjMq0nCQR,OiMn0nCR,OjMo0nCQC,SiMn0nCR,UjMo0nCQC,WiMn0nCR,KjMo0nCQC,YiMn0nCR,QjMo0nCQpxD,KiMn0nCR,IjMo0nCQqxD,aiMn0nCR,IjMo0nCQC,SiMn0nCR,IjMo0nCQC,aiMn0nCR,KjMo0nCQC,UiMn0nCR,2BjMo0nCQC,QiMl0nCR,cjMo0nCME,eACEC,YiMn0nCR,OjMo0nCQC,YiMn0nCR,mBjMo0nCQC,QiMn0nCR,qBjMo0nCQC,YiMn0nCR,sBjMq0nCQH,YiMn0nCR,OjMo0nCQC,YiMn0nCR,iBjMo0nCQC,QiMn0nCR,qBjMo0nCQC,YiMl0nCR,sBjMo0nCMC,eACEl1D,KiMn0nCR,cjMo0nCQm1D,WiMn0nCR,iBjMo0nCQC,OiMn0nCR,KjMo0nCQC,OiMn0nCR,gBjMq0nCQr1D,KiMn0nCR,cjMo0nCQm1D,WiMn0nCR,iBjMo0nCQC,OiMn0nCR,KjMo0nCQC,OiMl0nCR,iBjMo0nCMC,eACEt1D,KiMn0nCR,ajMo0nCQm0D,OiMn0nCR,OjMo0nCQoB,QiMn0nCR,ejMo0nCQC,KiMn0nCR,iBjMq0nCQx1D,KiMn0nCR,cjMo0nCQm0D,OiMn0nCR,OjMo0nCQoB,QiMn0nCR,gBjMo0nCQC,KiMl0nCR,iBjMo0n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","file":"static/js/0.97df8e906c3caa0d1565.js","sourcesContent":["webpackJsonp([0,22],Array(392).concat([\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(709)\n\nvar Component = __webpack_require__(253)(\n  /* script */\n  __webpack_require__(636),\n  /* template */\n  __webpack_require__(749),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(404);\n\n    var GlobalModel = __webpack_require__(496);\n    var ExtensionAPI = __webpack_require__(474);\n    var CoordinateSystemManager = __webpack_require__(434);\n    var OptionManager = __webpack_require__(497);\n\n    var ComponentModel = __webpack_require__(408);\n    var SeriesModel = __webpack_require__(439);\n\n    var ComponentView = __webpack_require__(510);\n    var ChartView = __webpack_require__(445);\n    var graphic = __webpack_require__(398);\n    var modelUtil = __webpack_require__(400);\n    var throttle = __webpack_require__(444);\n\n    var zrender = __webpack_require__(558);\n    var zrUtil = __webpack_require__(396);\n    var colorTool = __webpack_require__(419);\n    var Eventful = __webpack_require__(418);\n    var timsort = __webpack_require__(430);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.4',\n        dependencies: {\n            zrender: '3.4.4'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(511));\n    echarts.registerPreprocessor(__webpack_require__(505));\n    echarts.registerLoading('default', __webpack_require__(495));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(437);\n    echarts.Model = __webpack_require__(405);\n\n    echarts.Axis = __webpack_require__(465);\n\n    echarts.graphic = __webpack_require__(398);\n    echarts.number = __webpack_require__(399);\n    echarts.format = __webpack_require__(403);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(414);\n    echarts.vector = __webpack_require__(401);\n    echarts.color = __webpack_require__(419);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(494);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var pathTool = __webpack_require__(556);\n    var round = Math.round;\n    var Path = __webpack_require__(402);\n    var colorTool = __webpack_require__(419);\n    var matrix = __webpack_require__(414);\n    var vector = __webpack_require__(401);\n    var Transformable = __webpack_require__(457);\n    var BoundingRect = __webpack_require__(407);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(423);\n\n    graphic.Image = __webpack_require__(453);\n\n    graphic.Text = __webpack_require__(540);\n\n    graphic.Circle = __webpack_require__(547);\n\n    graphic.Sector = __webpack_require__(553);\n\n    graphic.Ring = __webpack_require__(552);\n\n    graphic.Polygon = __webpack_require__(549);\n\n    graphic.Polyline = __webpack_require__(550);\n\n    graphic.Rect = __webpack_require__(551);\n\n    graphic.Line = __webpack_require__(548);\n\n    graphic.BezierCurve = __webpack_require__(546);\n\n    graphic.Arc = __webpack_require__(545);\n\n    graphic.CompoundPath = __webpack_require__(537);\n\n    graphic.LinearGradient = __webpack_require__(538);\n\n    graphic.RadialGradient = __webpack_require__(539);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(403);\n    var nubmerUtil = __webpack_require__(399);\n    var Model = __webpack_require__(405);\n    var zrUtil = __webpack_require__(396);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(431);\n    var zrUtil = __webpack_require__(396);\n    var PathProxy = __webpack_require__(424);\n    var pathContain = __webpack_require__(531);\n\n    var Pattern = __webpack_require__(454);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var numberUtil = __webpack_require__(399);\n    var textContain = __webpack_require__(410);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(396);\n    var clazzUtil = __webpack_require__(406);\n    var env = __webpack_require__(404);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(502));\n    mixin(Model, __webpack_require__(499));\n    mixin(Model, __webpack_require__(503));\n    mixin(Model, __webpack_require__(501));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(401);\n    var matrix = __webpack_require__(414);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(405);\n    var zrUtil = __webpack_require__(396);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(429);\n    var clazzUtil = __webpack_require__(406);\n    var layout = __webpack_require__(409);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(500));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(396);\n    var BoundingRect = __webpack_require__(407);\n    var numberUtil = __webpack_require__(399);\n    var formatUtil = __webpack_require__(403);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(396);\n    var BoundingRect = __webpack_require__(407);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(202);\n\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports) {\n\n\t/* globals __VUE_SSR_CONTEXT__ */\n\n\t// this module is a runtime utility for cleaner component module output and will\n\t// be included in the final webpack user bundle\n\n\tmodule.exports = function normalizeComponent (\n\t  rawScriptExports,\n\t  compiledTemplate,\n\t  injectStyles,\n\t  scopeId,\n\t  moduleIdentifier /* server only */\n\t) {\n\t  var esModule\n\t  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n\t  // ES6 modules interop\n\t  var type = typeof rawScriptExports.default\n\t  if (type === 'object' || type === 'function') {\n\t    esModule = rawScriptExports\n\t    scriptExports = rawScriptExports.default\n\t  }\n\n\t  // Vue.extend constructor export interop\n\t  var options = typeof scriptExports === 'function'\n\t    ? scriptExports.options\n\t    : scriptExports\n\n\t  // render functions\n\t  if (compiledTemplate) {\n\t    options.render = compiledTemplate.render\n\t    options.staticRenderFns = compiledTemplate.staticRenderFns\n\t  }\n\n\t  // scopedId\n\t  if (scopeId) {\n\t    options._scopeId = scopeId\n\t  }\n\n\t  var hook\n\t  if (moduleIdentifier) { // server build\n\t    hook = function (context) {\n\t      // 2.3 injection\n\t      context = context || (this.$vnode && this.$vnode.ssrContext)\n\t      // 2.2 with runInNewContext: true\n\t      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n\t        context = __VUE_SSR_CONTEXT__\n\t      }\n\t      // inject component styles\n\t      if (injectStyles) {\n\t        injectStyles.call(this, context)\n\t      }\n\t      // register component module identifier for async chunk inferrence\n\t      if (context && context._registeredComponents) {\n\t        context._registeredComponents.add(moduleIdentifier)\n\t      }\n\t    }\n\t    // used by ssr in case component is cached and beforeCreate\n\t    // never gets called\n\t    options._ssrRegister = hook\n\t  } else if (injectStyles) {\n\t    hook = injectStyles\n\t  }\n\n\t  if (hook) {\n\t    // inject component registration as beforeCreate hook\n\t    var existing = options.beforeCreate\n\t    options.beforeCreate = existing\n\t      ? [].concat(existing, hook)\n\t      : [hook]\n\t  }\n\n\t  return {\n\t    esModule: esModule,\n\t    exports: scriptExports,\n\t    options: options\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(26);\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(15);\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(66);\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(9);\n\n/***/ },\n\n/***/ 135:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(25);\n\n/***/ },\n\n/***/ 140:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(67);\n\n/***/ },\n\n/***/ 167:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(41);\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _main = __webpack_require__(203);\n\n\tvar _main2 = _interopRequireDefault(_main);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _main2.default;\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.MessageBox = undefined;\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _vue = __webpack_require__(56);\n\n\tvar _vue2 = _interopRequireDefault(_vue);\n\n\tvar _main = __webpack_require__(204);\n\n\tvar _main2 = _interopRequireDefault(_main);\n\n\tvar _merge = __webpack_require__(167);\n\n\tvar _merge2 = _interopRequireDefault(_merge);\n\n\tvar _vdom = __webpack_require__(207);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar defaults = {\n\t  title: undefined,\n\t  message: '',\n\t  type: '',\n\t  showInput: false,\n\t  showClose: true,\n\t  modalFade: true,\n\t  lockScroll: true,\n\t  closeOnClickModal: true,\n\t  closeOnPressEscape: true,\n\t  inputValue: null,\n\t  inputPlaceholder: '',\n\t  inputPattern: null,\n\t  inputValidator: null,\n\t  inputErrorMessage: '',\n\t  showConfirmButton: true,\n\t  showCancelButton: false,\n\t  confirmButtonPosition: 'right',\n\t  confirmButtonHighlight: false,\n\t  cancelButtonHighlight: false,\n\t  confirmButtonText: '',\n\t  cancelButtonText: '',\n\t  confirmButtonClass: '',\n\t  cancelButtonClass: '',\n\t  customClass: '',\n\t  beforeClose: null\n\t};\n\n\tvar MessageBoxConstructor = _vue2.default.extend(_main2.default);\n\n\tvar currentMsg = void 0,\n\t    instance = void 0;\n\tvar msgQueue = [];\n\n\tvar defaultCallback = function defaultCallback(action) {\n\t  if (currentMsg) {\n\t    var callback = currentMsg.callback;\n\t    if (typeof callback === 'function') {\n\t      if (instance.showInput) {\n\t        callback(instance.inputValue, action);\n\t      } else {\n\t        callback(action);\n\t      }\n\t    }\n\t    if (currentMsg.resolve) {\n\t      var $type = currentMsg.options.$type;\n\t      if ($type === 'confirm' || $type === 'prompt') {\n\t        if (action === 'confirm') {\n\t          if (instance.showInput) {\n\t            currentMsg.resolve({ value: instance.inputValue, action: action });\n\t          } else {\n\t            currentMsg.resolve(action);\n\t          }\n\t        } else if (action === 'cancel' && currentMsg.reject) {\n\t          currentMsg.reject(action);\n\t        }\n\t      } else {\n\t        currentMsg.resolve(action);\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar initInstance = function initInstance() {\n\t  instance = new MessageBoxConstructor({\n\t    el: document.createElement('div')\n\t  });\n\n\t  instance.callback = defaultCallback;\n\t};\n\n\tvar showNextMsg = function showNextMsg() {\n\t  if (!instance) {\n\t    initInstance();\n\t  }\n\t  instance.action = '';\n\n\t  if (!instance.visible || instance.closeTimer) {\n\t    if (msgQueue.length > 0) {\n\t      (function () {\n\t        currentMsg = msgQueue.shift();\n\n\t        var options = currentMsg.options;\n\t        for (var prop in options) {\n\t          if (options.hasOwnProperty(prop)) {\n\t            instance[prop] = options[prop];\n\t          }\n\t        }\n\t        if (options.callback === undefined) {\n\t          instance.callback = defaultCallback;\n\t        }\n\n\t        var oldCb = instance.callback;\n\t        instance.callback = function (action, instance) {\n\t          oldCb(action, instance);\n\t          showNextMsg();\n\t        };\n\t        if ((0, _vdom.isVNode)(instance.message)) {\n\t          instance.$slots.default = [instance.message];\n\t          instance.message = null;\n\t        }\n\t        ['modal', 'showClose', 'closeOnClickModal', 'closeOnPressEscape'].forEach(function (prop) {\n\t          if (instance[prop] === undefined) {\n\t            instance[prop] = true;\n\t          }\n\t        });\n\t        document.body.appendChild(instance.$el);\n\n\t        _vue2.default.nextTick(function () {\n\t          instance.visible = true;\n\t        });\n\t      })();\n\t    }\n\t  }\n\t};\n\n\tvar MessageBox = function MessageBox(options, callback) {\n\t  if (_vue2.default.prototype.$isServer) return;\n\t  if (typeof options === 'string') {\n\t    options = {\n\t      message: options\n\t    };\n\t    if (arguments[1]) {\n\t      options.title = arguments[1];\n\t    }\n\t    if (arguments[2]) {\n\t      options.type = arguments[2];\n\t    }\n\t  } else if (options.callback && !callback) {\n\t    callback = options.callback;\n\t  }\n\n\t  if (typeof Promise !== 'undefined') {\n\t    return new Promise(function (resolve, reject) {\n\t      // eslint-disable-line\n\t      msgQueue.push({\n\t        options: (0, _merge2.default)({}, defaults, MessageBox.defaults, options),\n\t        callback: callback,\n\t        resolve: resolve,\n\t        reject: reject\n\t      });\n\n\t      showNextMsg();\n\t    });\n\t  } else {\n\t    msgQueue.push({\n\t      options: (0, _merge2.default)({}, defaults, MessageBox.defaults, options),\n\t      callback: callback\n\t    });\n\n\t    showNextMsg();\n\t  }\n\t};\n\n\tMessageBox.setDefaults = function (defaults) {\n\t  MessageBox.defaults = defaults;\n\t};\n\n\tMessageBox.alert = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    $type: 'alert',\n\t    closeOnPressEscape: false,\n\t    closeOnClickModal: false\n\t  }, options));\n\t};\n\n\tMessageBox.confirm = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    $type: 'confirm',\n\t    showCancelButton: true\n\t  }, options));\n\t};\n\n\tMessageBox.prompt = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    showCancelButton: true,\n\t    showInput: true,\n\t    $type: 'prompt'\n\t  }, options));\n\t};\n\n\tMessageBox.close = function () {\n\t  instance.visible = false;\n\t  msgQueue = [];\n\t  currentMsg = null;\n\t};\n\n\texports.default = MessageBox;\n\texports.MessageBox = MessageBox;\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Component = __webpack_require__(3)(\n\t  /* script */\n\t  __webpack_require__(205),\n\t  /* template */\n\t  __webpack_require__(206),\n\t  /* styles */\n\t  null,\n\t  /* scopeId */\n\t  null,\n\t  /* moduleIdentifier (server only) */\n\t  null\n\t)\n\n\tmodule.exports = Component.exports\n\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _popup = __webpack_require__(135);\n\n\tvar _popup2 = _interopRequireDefault(_popup);\n\n\tvar _locale = __webpack_require__(60);\n\n\tvar _locale2 = _interopRequireDefault(_locale);\n\n\tvar _input = __webpack_require__(9);\n\n\tvar _input2 = _interopRequireDefault(_input);\n\n\tvar _button = __webpack_require__(140);\n\n\tvar _button2 = _interopRequireDefault(_button);\n\n\tvar _dom = __webpack_require__(120);\n\n\tvar _locale3 = __webpack_require__(61);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\n\tvar typeMap = {\n\t  success: 'circle-check',\n\t  info: 'information',\n\t  warning: 'warning',\n\t  error: 'circle-cross'\n\t};\n\n\texports.default = {\n\t  mixins: [_popup2.default, _locale2.default],\n\n\t  props: {\n\t    modal: {\n\t      default: true\n\t    },\n\t    lockScroll: {\n\t      default: true\n\t    },\n\t    showClose: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    closeOnClickModal: {\n\t      default: true\n\t    },\n\t    closeOnPressEscape: {\n\t      default: true\n\t    }\n\t  },\n\n\t  components: {\n\t    ElInput: _input2.default,\n\t    ElButton: _button2.default\n\t  },\n\n\t  computed: {\n\t    typeClass: function typeClass() {\n\t      return this.type && typeMap[this.type] ? 'el-icon-' + typeMap[this.type] : '';\n\t    },\n\t    confirmButtonClasses: function confirmButtonClasses() {\n\t      return 'el-button--primary ' + this.confirmButtonClass;\n\t    },\n\t    cancelButtonClasses: function cancelButtonClasses() {\n\t      return '' + this.cancelButtonClass;\n\t    }\n\t  },\n\n\t  methods: {\n\t    getSafeClose: function getSafeClose() {\n\t      var _this = this;\n\n\t      var currentId = this.uid;\n\t      return function () {\n\t        _this.$nextTick(function () {\n\t          if (currentId === _this.uid) _this.doClose();\n\t        });\n\t      };\n\t    },\n\t    doClose: function doClose() {\n\t      var _this2 = this;\n\n\t      if (!this.visible) return;\n\t      this.visible = false;\n\t      this._closing = true;\n\n\t      this.onClose && this.onClose();\n\n\t      if (this.lockScroll) {\n\t        setTimeout(function () {\n\t          if (_this2.modal && _this2.bodyOverflow !== 'hidden') {\n\t            document.body.style.overflow = _this2.bodyOverflow;\n\t            document.body.style.paddingRight = _this2.bodyPaddingRight;\n\t          }\n\t          _this2.bodyOverflow = null;\n\t          _this2.bodyPaddingRight = null;\n\t        }, 200);\n\t      }\n\t      this.opened = false;\n\n\t      if (!this.transition) {\n\t        this.doAfterClose();\n\t      }\n\t      if (this.action) this.callback(this.action, this);\n\t    },\n\t    handleWrapperClick: function handleWrapperClick() {\n\t      if (this.closeOnClickModal) {\n\t        this.action = '';\n\t        this.doClose();\n\t      }\n\t    },\n\t    handleAction: function handleAction(action) {\n\t      if (this.$type === 'prompt' && action === 'confirm' && !this.validate()) {\n\t        return;\n\t      }\n\t      this.action = action;\n\t      if (typeof this.beforeClose === 'function') {\n\t        this.close = this.getSafeClose();\n\t        this.beforeClose(action, this, this.close);\n\t      } else {\n\t        this.doClose();\n\t      }\n\t    },\n\t    validate: function validate() {\n\t      if (this.$type === 'prompt') {\n\t        var inputPattern = this.inputPattern;\n\t        if (inputPattern && !inputPattern.test(this.inputValue || '')) {\n\t          this.editorErrorMessage = this.inputErrorMessage || (0, _locale3.t)('el.messagebox.error');\n\t          (0, _dom.addClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t          return false;\n\t        }\n\t        var inputValidator = this.inputValidator;\n\t        if (typeof inputValidator === 'function') {\n\t          var validateResult = inputValidator(this.inputValue);\n\t          if (validateResult === false) {\n\t            this.editorErrorMessage = this.inputErrorMessage || (0, _locale3.t)('el.messagebox.error');\n\t            (0, _dom.addClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t            return false;\n\t          }\n\t          if (typeof validateResult === 'string') {\n\t            this.editorErrorMessage = validateResult;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      this.editorErrorMessage = '';\n\t      (0, _dom.removeClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t      return true;\n\t    }\n\t  },\n\n\t  watch: {\n\t    inputValue: {\n\t      immediate: true,\n\t      handler: function handler(val) {\n\t        var _this3 = this;\n\n\t        this.$nextTick(function (_) {\n\t          if (_this3.$type === 'prompt' && val !== null) {\n\t            _this3.validate();\n\t          }\n\t        });\n\t      }\n\t    },\n\n\t    visible: function visible(val) {\n\t      var _this4 = this;\n\n\t      if (val) this.uid++;\n\t      if (this.$type === 'alert' || this.$type === 'confirm') {\n\t        this.$nextTick(function () {\n\t          _this4.$refs.confirm.$el.focus();\n\t        });\n\t      }\n\t      if (this.$type !== 'prompt') return;\n\t      if (val) {\n\t        setTimeout(function () {\n\t          if (_this4.$refs.input && _this4.$refs.input.$el) {\n\t            _this4.$refs.input.$el.querySelector('input').focus();\n\t          }\n\t        }, 500);\n\t      } else {\n\t        this.editorErrorMessage = '';\n\t        (0, _dom.removeClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t      }\n\t    }\n\t  },\n\n\t  data: function data() {\n\t    return {\n\t      uid: 1,\n\t      title: undefined,\n\t      message: '',\n\t      type: '',\n\t      customClass: '',\n\t      showInput: false,\n\t      inputValue: null,\n\t      inputPlaceholder: '',\n\t      inputPattern: null,\n\t      inputValidator: null,\n\t      inputErrorMessage: '',\n\t      showConfirmButton: true,\n\t      showCancelButton: false,\n\t      action: '',\n\t      confirmButtonText: '',\n\t      cancelButtonText: '',\n\t      confirmButtonLoading: false,\n\t      cancelButtonLoading: false,\n\t      confirmButtonClass: '',\n\t      confirmButtonDisabled: false,\n\t      cancelButtonClass: '',\n\t      editorErrorMessage: null,\n\t      callback: null\n\t    };\n\t  }\n\t};\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('transition', {\n\t    attrs: {\n\t      \"name\": \"msgbox-fade\"\n\t    }\n\t  }, [_c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.visible),\n\t      expression: \"visible\"\n\t    }],\n\t    staticClass: \"el-message-box__wrapper\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        if ($event.target !== $event.currentTarget) { return null; }\n\t        _vm.handleWrapperClick($event)\n\t      }\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box\",\n\t    class: _vm.customClass\n\t  }, [(_vm.title !== undefined) ? _c('div', {\n\t    staticClass: \"el-message-box__header\"\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box__title\"\n\t  }, [_vm._v(_vm._s(_vm.title || _vm.t('el.messagebox.title')))]), (_vm.showClose) ? _c('i', {\n\t    staticClass: \"el-message-box__close el-icon-close\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('cancel')\n\t      }\n\t    }\n\t  }) : _vm._e()]) : _vm._e(), (_vm.message !== '') ? _c('div', {\n\t    staticClass: \"el-message-box__content\"\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box__status\",\n\t    class: [_vm.typeClass]\n\t  }), _c('div', {\n\t    staticClass: \"el-message-box__message\",\n\t    style: ({\n\t      'margin-left': _vm.typeClass ? '50px' : '0'\n\t    })\n\t  }, [_vm._t(\"default\", [_c('p', [_vm._v(_vm._s(_vm.message))])])], 2), _c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInput),\n\t      expression: \"showInput\"\n\t    }],\n\t    staticClass: \"el-message-box__input\"\n\t  }, [_c('el-input', {\n\t    ref: \"input\",\n\t    attrs: {\n\t      \"placeholder\": _vm.inputPlaceholder\n\t    },\n\t    nativeOn: {\n\t      \"keyup\": function($event) {\n\t        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n\t        _vm.handleAction('confirm')\n\t      }\n\t    },\n\t    model: {\n\t      value: (_vm.inputValue),\n\t      callback: function($$v) {\n\t        _vm.inputValue = $$v\n\t      },\n\t      expression: \"inputValue\"\n\t    }\n\t  }), _c('div', {\n\t    staticClass: \"el-message-box__errormsg\",\n\t    style: ({\n\t      visibility: !!_vm.editorErrorMessage ? 'visible' : 'hidden'\n\t    })\n\t  }, [_vm._v(_vm._s(_vm.editorErrorMessage))])], 1)]) : _vm._e(), _c('div', {\n\t    staticClass: \"el-message-box__btns\"\n\t  }, [_c('el-button', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showCancelButton),\n\t      expression: \"showCancelButton\"\n\t    }],\n\t    class: [_vm.cancelButtonClasses],\n\t    attrs: {\n\t      \"loading\": _vm.cancelButtonLoading\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('cancel')\n\t      }\n\t    }\n\t  }, [_vm._v(\"\\n          \" + _vm._s(_vm.cancelButtonText || _vm.t('el.messagebox.cancel')) + \"\\n        \")]), _c('el-button', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showConfirmButton),\n\t      expression: \"showConfirmButton\"\n\t    }],\n\t    ref: \"confirm\",\n\t    class: [_vm.confirmButtonClasses],\n\t    attrs: {\n\t      \"loading\": _vm.confirmButtonLoading\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('confirm')\n\t      }\n\t    }\n\t  }, [_vm._v(\"\\n          \" + _vm._s(_vm.confirmButtonText || _vm.t('el.messagebox.confirm')) + \"\\n        \")])], 1)])])])\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports) {\n\n\tmodule.exports = __webpack_require__(256);\n\n/***/ }\n\n/******/ });\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(416);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"11089622\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../css-loader/index.js??ref--5-2!./message-box.css\", function() {\n     var newContent = require(\"!!../../../css-loader/index.js??ref--5-2!./message-box.css\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(401);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(508);\n    var IntervalScale = __webpack_require__(428);\n    __webpack_require__(509);\n    __webpack_require__(507);\n    var Scale = __webpack_require__(421);\n\n    var numberUtil = __webpack_require__(399);\n    var zrUtil = __webpack_require__(396);\n    var textContain = __webpack_require__(410);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".el-button,.el-input__inner{-webkit-appearance:none;line-height:1;outline:0}.el-button-group:after,.el-button-group:before{display:table;content:\\\"\\\"}.el-button,.el-button-group,.el-input{display:inline-block}.el-button-group:after{clear:both}.v-modal-enter{animation:v-modal-in .2s ease}.v-modal-leave{animation:v-modal-out .2s ease forwards}@keyframes v-modal-in{0%{opacity:0}}@keyframes v-modal-out{to{opacity:0}}.v-modal{position:fixed;left:0;top:0;width:100%;height:100%;opacity:.5;background:#000}.el-button{white-space:nowrap;cursor:pointer;background:#fff;border:1px solid #bfcbd9;color:#1f2d3d;text-align:center;box-sizing:border-box;margin:0;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;padding:10px 15px;font-size:14px;border-radius:4px}.el-button+.el-button{margin-left:10px}.el-button:focus,.el-button:hover{color:#20a0ff;border-color:#20a0ff}.el-button:active{color:#1d90e6;border-color:#1d90e6;outline:0}.el-button::-moz-focus-inner{border:0}.el-button [class*=el-icon-]+span{margin-left:5px}.el-button.is-loading{position:relative;pointer-events:none}.el-button.is-loading:before{pointer-events:none;content:\\\"\\\";position:absolute;left:-1px;top:-1px;right:-1px;bottom:-1px;border-radius:inherit;background-color:hsla(0,0%,100%,.35)}.el-button.is-disabled,.el-button.is-disabled:focus,.el-button.is-disabled:hover{color:#bfcbd9;cursor:not-allowed;background-image:none;background-color:#eef1f6;border-color:#d1dbe5}.el-button.is-disabled.el-button--text{background-color:transparent}.el-button.is-disabled.is-plain,.el-button.is-disabled.is-plain:focus,.el-button.is-disabled.is-plain:hover{background-color:#fff;border-color:#d1dbe5;color:#bfcbd9}.el-button.is-active{color:#1d90e6;border-color:#1d90e6}.el-button.is-plain:focus,.el-button.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--primary{color:#fff;background-color:#20a0ff;border-color:#20a0ff}.el-button--primary:focus,.el-button--primary:hover{background:#4db3ff;border-color:#4db3ff;color:#fff}.el-button--primary.is-active,.el-button--primary:active{background:#1d90e6;border-color:#1d90e6;color:#fff}.el-button--primary:active{outline:0}.el-button--primary.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--primary.is-plain:focus,.el-button--primary.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button--primary.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--success{color:#fff;background-color:#13ce66;border-color:#13ce66}.el-button--success:focus,.el-button--success:hover{background:#42d885;border-color:#42d885;color:#fff}.el-button--success.is-active,.el-button--success:active{background:#11b95c;border-color:#11b95c;color:#fff}.el-button--success:active{outline:0}.el-button--success.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--success.is-plain:focus,.el-button--success.is-plain:hover{background:#fff;border-color:#13ce66;color:#13ce66}.el-button--success.is-plain:active{background:#fff;border-color:#11b95c;color:#11b95c;outline:0}.el-button--warning{color:#fff;background-color:#f7ba2a;border-color:#f7ba2a}.el-button--warning:focus,.el-button--warning:hover{background:#f9c855;border-color:#f9c855;color:#fff}.el-button--warning.is-active,.el-button--warning:active{background:#dea726;border-color:#dea726;color:#fff}.el-button--warning:active{outline:0}.el-button--warning.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--warning.is-plain:focus,.el-button--warning.is-plain:hover{background:#fff;border-color:#f7ba2a;color:#f7ba2a}.el-button--warning.is-plain:active{background:#fff;border-color:#dea726;color:#dea726;outline:0}.el-button--danger{color:#fff;background-color:#ff4949;border-color:#ff4949}.el-button--danger:focus,.el-button--danger:hover{background:#ff6d6d;border-color:#ff6d6d;color:#fff}.el-button--danger.is-active,.el-button--danger:active{background:#e64242;border-color:#e64242;color:#fff}.el-button--danger:active{outline:0}.el-button--danger.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--danger.is-plain:focus,.el-button--danger.is-plain:hover{background:#fff;border-color:#ff4949;color:#ff4949}.el-button--danger.is-plain:active{background:#fff;border-color:#e64242;color:#e64242;outline:0}.el-button--info{color:#fff;background-color:#50bfff;border-color:#50bfff}.el-button--info:focus,.el-button--info:hover{background:#73ccff;border-color:#73ccff;color:#fff}.el-button--info.is-active,.el-button--info:active{background:#48ace6;border-color:#48ace6;color:#fff}.el-button--info:active{outline:0}.el-button--info.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--info.is-plain:focus,.el-button--info.is-plain:hover{background:#fff;border-color:#50bfff;color:#50bfff}.el-button--info.is-plain:active{background:#fff;border-color:#48ace6;color:#48ace6;outline:0}.el-button--large{padding:11px 19px;font-size:16px;border-radius:4px}.el-button--small{padding:7px 9px;font-size:12px;border-radius:4px}.el-button--mini{padding:4px;font-size:12px;border-radius:4px}.el-button--text{border:none;color:#20a0ff;background:0 0;padding-left:0;padding-right:0}.el-input__inner,.el-textarea__inner{box-sizing:border-box;background-image:none}.el-button--text:focus,.el-button--text:hover{color:#4db3ff}.el-button--text:active{color:#1d90e6}.el-button-group{vertical-align:middle}.el-button-group .el-button--primary:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--primary:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--primary:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button{float:left;position:relative}.el-button-group .el-button+.el-button{margin-left:0}.el-button-group .el-button:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.el-button-group .el-button:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.el-button-group .el-button:not(:first-child):not(:last-child){border-radius:0}.el-button-group .el-button:not(:last-child){margin-right:-1px}.el-button-group .el-button.is-active,.el-button-group .el-button:active,.el-button-group .el-button:focus,.el-button-group .el-button:hover{z-index:1}.el-input{position:relative;font-size:14px;width:100%}.el-input-group__append .el-button,.el-input-group__append .el-input,.el-input-group__prepend .el-button,.el-input-group__prepend .el-input,.el-input__inner{font-size:inherit}.el-input.is-disabled .el-input__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-input.is-disabled .el-input__inner::-webkit-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::-moz-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner:-ms-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::placeholder{color:#bfcbd9}.el-input.is-active .el-input__inner{outline:0;border-color:#20a0ff}.el-input__inner{-moz-appearance:none;appearance:none;background-color:#fff;border-radius:4px;border:1px solid #bfcbd9;color:#1f2d3d;display:block;height:36px;padding:3px 10px;transition:border-color .2s cubic-bezier(.645,.045,.355,1);width:100%}.el-input__inner::-webkit-input-placeholder{color:#97a8be}.el-input__inner::-moz-placeholder{color:#97a8be}.el-input__inner:-ms-input-placeholder{color:#97a8be}.el-input__inner::placeholder{color:#97a8be}.el-input__inner:hover{border-color:#8391a5}.el-input__inner:focus{outline:0;border-color:#20a0ff}.el-input__icon{position:absolute;width:35px;height:100%;right:0;top:0;text-align:center;color:#bfcbd9;transition:all .3s}.el-input__icon:after{content:\\\"\\\";height:100%;width:0;display:inline-block;vertical-align:middle}.el-input__icon+.el-input__inner{padding-right:35px}.el-input__icon.is-clickable:hover{cursor:pointer;color:#8391a5}.el-input__icon.is-clickable:hover+.el-input__inner{border-color:#8391a5}.el-input--large{font-size:16px}.el-input--large .el-input__inner{height:42px}.el-input--small{font-size:13px}.el-input--small .el-input__inner{height:30px}.el-input--mini{font-size:12px}.el-input--mini .el-input__inner{height:22px}.el-input-group{line-height:normal;display:inline-table;width:100%;border-collapse:separate}.el-input-group>.el-input__inner{vertical-align:middle;display:table-cell}.el-input-group__append,.el-input-group__prepend{background-color:#fbfdff;color:#97a8be;vertical-align:middle;display:table-cell;position:relative;border:1px solid #bfcbd9;border-radius:4px;padding:0 10px;width:1%;white-space:nowrap}.el-input-group--prepend .el-input__inner,.el-input-group__append{border-top-left-radius:0;border-bottom-left-radius:0}.el-input-group--append .el-input__inner,.el-input-group__prepend{border-top-right-radius:0;border-bottom-right-radius:0}.el-input-group__append .el-button,.el-input-group__append .el-select,.el-input-group__prepend .el-button,.el-input-group__prepend .el-select{display:block;margin:-10px}.el-input-group__append button.el-button,.el-input-group__append div.el-select .el-input__inner,.el-input-group__append div.el-select:hover .el-input__inner,.el-input-group__prepend button.el-button,.el-input-group__prepend div.el-select .el-input__inner,.el-input-group__prepend div.el-select:hover .el-input__inner{border-color:transparent;background-color:transparent;color:inherit;border-top:0;border-bottom:0}.el-input-group__prepend{border-right:0}.el-input-group__append{border-left:0}.el-textarea{display:inline-block;width:100%;vertical-align:bottom}.el-textarea.is-disabled .el-textarea__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-textarea.is-disabled .el-textarea__inner::-webkit-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::-moz-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner:-ms-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::placeholder{color:#bfcbd9}.el-textarea__inner{display:block;resize:vertical;padding:5px 7px;line-height:1.5;width:100%;font-size:14px;color:#1f2d3d;background-color:#fff;border:1px solid #bfcbd9;border-radius:4px;transition:border-color .2s cubic-bezier(.645,.045,.355,1)}.el-textarea__inner::-webkit-input-placeholder{color:#97a8be}.el-textarea__inner::-moz-placeholder{color:#97a8be}.el-textarea__inner:-ms-input-placeholder{color:#97a8be}.el-textarea__inner::placeholder{color:#97a8be}.el-textarea__inner:hover{border-color:#8391a5}.el-textarea__inner:focus{outline:0;border-color:#20a0ff}.el-message-box{text-align:left;display:inline-block;vertical-align:middle;background-color:#fff;width:420px;border-radius:3px;font-size:16px;overflow:hidden;-webkit-backface-visibility:hidden;backface-visibility:hidden}.el-message-box__wrapper{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center}.el-message-box__wrapper:after{content:\\\"\\\";display:inline-block;height:100%;width:0;vertical-align:middle}.el-message-box__header{position:relative;padding:20px 20px 0}.el-message-box__content{padding:30px 20px;color:#48576a;font-size:14px;position:relative}.el-message-box__close{display:inline-block;position:absolute;top:19px;right:20px;color:#999;cursor:pointer;line-height:20px;text-align:center}.el-message-box__close:hover{color:#20a0ff}.el-message-box__input{padding-top:15px}.el-message-box__input input.invalid,.el-message-box__input input.invalid:focus{border-color:#ff4949}.el-message-box__errormsg{color:#ff4949;font-size:12px;min-height:18px;margin-top:2px}.el-message-box__title{padding-left:0;margin-bottom:0;font-size:16px;font-weight:700;height:18px;color:#333}.el-message-box__message{margin:0}.el-message-box__message p{margin:0;line-height:1.4}.el-message-box__btns{padding:10px 20px 15px;text-align:right}.el-message-box__btns button:nth-child(2){margin-left:10px}.el-message-box__btns-reverse{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.el-message-box__status{position:absolute;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);font-size:36px!important}.el-message-box__status.el-icon-circle-check{color:#13ce66}.el-message-box__status.el-icon-information{color:#50bfff}.el-message-box__status.el-icon-warning{color:#f7ba2a}.el-message-box__status.el-icon-circle-cross{color:#ff4949}.msgbox-fade-enter-active{animation:msgbox-fade-in .3s}.msgbox-fade-leave-active{animation:msgbox-fade-out .3s}@keyframes msgbox-fade-in{0%{transform:translate3d(0,-20px,0);opacity:0}to{transform:translateZ(0);opacity:1}}@keyframes msgbox-fade-out{0%{transform:translateZ(0);opacity:1}to{transform:translate3d(0,-20px,0);opacity:0}}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/node_modules/element-ui/lib/theme-default/message-box.css\"],\"names\":[],\"mappings\":\"AAAiB,4BAA4B,wBAAwB,cAAc,SAAS,CAAC,+CAA+C,cAAc,UAAU,CAAC,sCAAsC,oBAAoB,CAAC,uBAAuB,UAAU,CAAC,eAAe,6BAA6B,CAAC,eAAe,uCAAuC,CAAC,sBAAsB,GAAG,SAAS,CAAC,CAAC,uBAAuB,GAAK,SAAS,CAAC,CAAC,SAAS,eAAe,OAAO,MAAM,WAAW,YAAY,WAAW,eAAe,CAAC,WAAW,mBAAmB,eAAe,gBAAgB,yBAAyB,cAAc,kBAAkB,sBAAsB,SAAS,sBAAsB,yBAAyB,qBAAqB,kBAAkB,eAAe,iBAAiB,CAAC,sBAAsB,gBAAgB,CAAC,kCAAkC,cAAc,oBAAoB,CAAC,kBAAkB,cAAc,qBAAqB,SAAS,CAAC,6BAA6B,QAAQ,CAAC,kCAAkC,eAAe,CAAC,sBAAsB,kBAAkB,mBAAmB,CAAC,6BAA6B,oBAAoB,WAAW,kBAAkB,UAAU,SAAS,WAAW,YAAY,sBAAsB,oCAAsC,CAAC,iFAAiF,cAAc,mBAAmB,sBAAsB,yBAAyB,oBAAoB,CAAC,uCAAuC,4BAA4B,CAAC,4GAA4G,sBAAsB,qBAAqB,aAAa,CAAC,qBAAqB,cAAc,oBAAoB,CAAC,oDAAoD,gBAAgB,qBAAqB,aAAa,CAAC,2BAA2B,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,oBAAoB,WAAW,yBAAyB,oBAAoB,CAAC,oDAAoD,mBAAmB,qBAAqB,UAAU,CAAC,yDAAyD,mBAAmB,qBAAqB,UAAU,CAAC,2BAA2B,SAAS,CAAC,6BAA6B,gBAAgB,yBAAyB,aAAa,CAAC,sEAAsE,gBAAgB,qBAAqB,aAAa,CAAC,oCAAoC,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,oBAAoB,WAAW,yBAAyB,oBAAoB,CAAC,oDAAoD,mBAAmB,qBAAqB,UAAU,CAAC,yDAAyD,mBAAmB,qBAAqB,UAAU,CAAC,2BAA2B,SAAS,CAAC,6BAA6B,gBAAgB,yBAAyB,aAAa,CAAC,sEAAsE,gBAAgB,qBAAqB,aAAa,CAAC,oCAAoC,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,oBAAoB,WAAW,yBAAyB,oBAAoB,CAAC,oDAAoD,mBAAmB,qBAAqB,UAAU,CAAC,yDAAyD,mBAAmB,qBAAqB,UAAU,CAAC,2BAA2B,SAAS,CAAC,6BAA6B,gBAAgB,yBAAyB,aAAa,CAAC,sEAAsE,gBAAgB,qBAAqB,aAAa,CAAC,oCAAoC,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,mBAAmB,WAAW,yBAAyB,oBAAoB,CAAC,kDAAkD,mBAAmB,qBAAqB,UAAU,CAAC,uDAAuD,mBAAmB,qBAAqB,UAAU,CAAC,0BAA0B,SAAS,CAAC,4BAA4B,gBAAgB,yBAAyB,aAAa,CAAC,oEAAoE,gBAAgB,qBAAqB,aAAa,CAAC,mCAAmC,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,iBAAiB,WAAW,yBAAyB,oBAAoB,CAAC,8CAA8C,mBAAmB,qBAAqB,UAAU,CAAC,mDAAmD,mBAAmB,qBAAqB,UAAU,CAAC,wBAAwB,SAAS,CAAC,0BAA0B,gBAAgB,yBAAyB,aAAa,CAAC,gEAAgE,gBAAgB,qBAAqB,aAAa,CAAC,iCAAiC,gBAAgB,qBAAqB,cAAc,SAAS,CAAC,kBAAkB,kBAAkB,eAAe,iBAAiB,CAAC,kBAAkB,gBAAgB,eAAe,iBAAiB,CAAC,iBAAiB,YAAY,eAAe,iBAAiB,CAAC,iBAAiB,YAAY,cAAc,eAAe,eAAe,eAAe,CAAC,qCAAqC,sBAAsB,qBAAqB,CAAC,8CAA8C,aAAa,CAAC,wBAAwB,aAAa,CAAC,iBAAiB,qBAAqB,CAAC,iDAAiD,qCAAuC,CAAC,gDAAgD,oCAAsC,CAAC,wEAAwE,qCAAuC,qCAAuC,CAAC,iDAAiD,qCAAuC,CAAC,gDAAgD,oCAAsC,CAAC,wEAAwE,qCAAuC,qCAAuC,CAAC,iDAAiD,qCAAuC,CAAC,gDAAgD,oCAAsC,CAAC,wEAAwE,qCAAuC,qCAAuC,CAAC,gDAAgD,qCAAuC,CAAC,+CAA+C,oCAAsC,CAAC,uEAAuE,qCAAuC,qCAAuC,CAAC,8CAA8C,qCAAuC,CAAC,6CAA6C,oCAAsC,CAAC,qEAAqE,qCAAuC,qCAAuC,CAAC,4BAA4B,WAAW,iBAAiB,CAAC,uCAAuC,aAAa,CAAC,wCAAwC,0BAA0B,4BAA4B,CAAC,uCAAuC,yBAAyB,2BAA2B,CAAC,+DAA+D,eAAe,CAAC,6CAA6C,iBAAiB,CAAC,6IAA6I,SAAS,CAAC,UAAU,kBAAkB,eAAe,UAAU,CAAC,6JAA6J,iBAAiB,CAAC,uCAAuC,yBAAyB,qBAAqB,WAAW,kBAAkB,CAAC,kEAAkE,aAAa,CAAC,yDAAyD,aAAa,CAAC,6DAA6D,aAAa,CAAC,oDAAoD,aAAa,CAAC,qCAAqC,UAAU,oBAAoB,CAAC,iBAAiB,qBAAqB,gBAAgB,sBAAsB,kBAAkB,yBAAyB,cAAc,cAAc,YAAY,iBAAiB,2DAA2D,UAAU,CAAC,4CAA4C,aAAa,CAAC,mCAAmC,aAAa,CAAC,uCAAuC,aAAa,CAAC,8BAA8B,aAAa,CAAC,uBAAuB,oBAAoB,CAAC,uBAAuB,UAAU,oBAAoB,CAAC,gBAAgB,kBAAkB,WAAW,YAAY,QAAQ,MAAM,kBAAkB,cAAc,kBAAkB,CAAC,sBAAsB,WAAW,YAAY,QAAQ,qBAAqB,qBAAqB,CAAC,iCAAiC,kBAAkB,CAAC,mCAAmC,eAAe,aAAa,CAAC,oDAAoD,oBAAoB,CAAC,iBAAiB,cAAc,CAAC,kCAAkC,WAAW,CAAC,iBAAiB,cAAc,CAAC,kCAAkC,WAAW,CAAC,gBAAgB,cAAc,CAAC,iCAAiC,WAAW,CAAC,gBAAgB,mBAAmB,qBAAqB,WAAW,wBAAwB,CAAC,iCAAiC,sBAAsB,kBAAkB,CAAC,iDAAiD,yBAAyB,cAAc,sBAAsB,mBAAmB,kBAAkB,yBAAyB,kBAAkB,eAAe,SAAS,kBAAkB,CAAC,kEAAkE,yBAAyB,2BAA2B,CAAC,kEAAkE,0BAA0B,4BAA4B,CAAC,8IAA8I,cAAc,YAAY,CAAC,6TAA6T,yBAAyB,6BAA6B,cAAc,aAAa,eAAe,CAAC,yBAAyB,cAAc,CAAC,wBAAwB,aAAa,CAAC,aAAa,qBAAqB,WAAW,qBAAqB,CAAC,6CAA6C,yBAAyB,qBAAqB,WAAW,kBAAkB,CAAC,wEAAwE,aAAa,CAAC,+DAA+D,aAAa,CAAC,mEAAmE,aAAa,CAAC,0DAA0D,aAAa,CAAC,oBAAoB,cAAc,gBAAgB,gBAAgB,gBAAgB,WAAW,eAAe,cAAc,sBAAsB,yBAAyB,kBAAkB,0DAA0D,CAAC,+CAA+C,aAAa,CAAC,sCAAsC,aAAa,CAAC,0CAA0C,aAAa,CAAC,iCAAiC,aAAa,CAAC,0BAA0B,oBAAoB,CAAC,0BAA0B,UAAU,oBAAoB,CAAC,gBAAgB,gBAAgB,qBAAqB,sBAAsB,sBAAsB,YAAY,kBAAkB,eAAe,gBAAgB,mCAAmC,0BAA0B,CAAC,yBAAyB,eAAe,MAAM,SAAS,OAAO,QAAQ,iBAAiB,CAAC,+BAAgC,WAAW,qBAAqB,YAAY,QAAQ,qBAAqB,CAAC,wBAAwB,kBAAkB,mBAAmB,CAAC,yBAAyB,kBAAkB,cAAc,eAAe,iBAAiB,CAAC,uBAAuB,qBAAqB,kBAAkB,SAAS,WAAW,WAAW,eAAe,iBAAiB,iBAAiB,CAAC,6BAA6B,aAAa,CAAC,uBAAuB,gBAAgB,CAAC,gFAAgF,oBAAoB,CAAC,0BAA0B,cAAc,eAAe,gBAAgB,cAAc,CAAC,uBAAuB,eAAe,gBAAgB,eAAe,gBAAgB,YAAY,UAAU,CAAC,yBAAyB,QAAQ,CAAC,2BAA2B,SAAS,eAAe,CAAC,sBAAsB,uBAAuB,gBAAgB,CAAC,0CAA0C,gBAAgB,CAAC,8BAA8B,+BAA+B,0BAA0B,CAAC,wBAAwB,kBAAkB,QAAQ,+BAA+B,2BAA2B,wBAAwB,CAAC,6CAA6C,aAAa,CAAC,4CAA4C,aAAa,CAAC,wCAAwC,aAAa,CAAC,6CAA6C,aAAa,CAAC,0BAA0B,4BAA4B,CAAC,0BAA0B,6BAA6B,CAAC,0BAA0B,GAAG,iCAAiC,SAAS,CAAC,GAAK,wBAA6B,SAAS,CAAC,CAAC,2BAA2B,GAAG,wBAA6B,SAAS,CAAC,GAAK,iCAAiC,SAAS,CAAC,CAAC\",\"file\":\"message-box.css\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";.el-button,.el-input__inner{-webkit-appearance:none;line-height:1;outline:0}.el-button-group:after,.el-button-group:before{display:table;content:\\\"\\\"}.el-button,.el-button-group,.el-input{display:inline-block}.el-button-group:after{clear:both}.v-modal-enter{animation:v-modal-in .2s ease}.v-modal-leave{animation:v-modal-out .2s ease forwards}@keyframes v-modal-in{0%{opacity:0}}@keyframes v-modal-out{100%{opacity:0}}.v-modal{position:fixed;left:0;top:0;width:100%;height:100%;opacity:.5;background:#000}.el-button{white-space:nowrap;cursor:pointer;background:#fff;border:1px solid #bfcbd9;color:#1f2d3d;text-align:center;box-sizing:border-box;margin:0;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;padding:10px 15px;font-size:14px;border-radius:4px}.el-button+.el-button{margin-left:10px}.el-button:focus,.el-button:hover{color:#20a0ff;border-color:#20a0ff}.el-button:active{color:#1d90e6;border-color:#1d90e6;outline:0}.el-button::-moz-focus-inner{border:0}.el-button [class*=el-icon-]+span{margin-left:5px}.el-button.is-loading{position:relative;pointer-events:none}.el-button.is-loading:before{pointer-events:none;content:'';position:absolute;left:-1px;top:-1px;right:-1px;bottom:-1px;border-radius:inherit;background-color:rgba(255,255,255,.35)}.el-button.is-disabled,.el-button.is-disabled:focus,.el-button.is-disabled:hover{color:#bfcbd9;cursor:not-allowed;background-image:none;background-color:#eef1f6;border-color:#d1dbe5}.el-button.is-disabled.el-button--text{background-color:transparent}.el-button.is-disabled.is-plain,.el-button.is-disabled.is-plain:focus,.el-button.is-disabled.is-plain:hover{background-color:#fff;border-color:#d1dbe5;color:#bfcbd9}.el-button.is-active{color:#1d90e6;border-color:#1d90e6}.el-button.is-plain:focus,.el-button.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--primary{color:#fff;background-color:#20a0ff;border-color:#20a0ff}.el-button--primary:focus,.el-button--primary:hover{background:#4db3ff;border-color:#4db3ff;color:#fff}.el-button--primary.is-active,.el-button--primary:active{background:#1d90e6;border-color:#1d90e6;color:#fff}.el-button--primary:active{outline:0}.el-button--primary.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--primary.is-plain:focus,.el-button--primary.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button--primary.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--success{color:#fff;background-color:#13ce66;border-color:#13ce66}.el-button--success:focus,.el-button--success:hover{background:#42d885;border-color:#42d885;color:#fff}.el-button--success.is-active,.el-button--success:active{background:#11b95c;border-color:#11b95c;color:#fff}.el-button--success:active{outline:0}.el-button--success.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--success.is-plain:focus,.el-button--success.is-plain:hover{background:#fff;border-color:#13ce66;color:#13ce66}.el-button--success.is-plain:active{background:#fff;border-color:#11b95c;color:#11b95c;outline:0}.el-button--warning{color:#fff;background-color:#f7ba2a;border-color:#f7ba2a}.el-button--warning:focus,.el-button--warning:hover{background:#f9c855;border-color:#f9c855;color:#fff}.el-button--warning.is-active,.el-button--warning:active{background:#dea726;border-color:#dea726;color:#fff}.el-button--warning:active{outline:0}.el-button--warning.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--warning.is-plain:focus,.el-button--warning.is-plain:hover{background:#fff;border-color:#f7ba2a;color:#f7ba2a}.el-button--warning.is-plain:active{background:#fff;border-color:#dea726;color:#dea726;outline:0}.el-button--danger{color:#fff;background-color:#ff4949;border-color:#ff4949}.el-button--danger:focus,.el-button--danger:hover{background:#ff6d6d;border-color:#ff6d6d;color:#fff}.el-button--danger.is-active,.el-button--danger:active{background:#e64242;border-color:#e64242;color:#fff}.el-button--danger:active{outline:0}.el-button--danger.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--danger.is-plain:focus,.el-button--danger.is-plain:hover{background:#fff;border-color:#ff4949;color:#ff4949}.el-button--danger.is-plain:active{background:#fff;border-color:#e64242;color:#e64242;outline:0}.el-button--info{color:#fff;background-color:#50bfff;border-color:#50bfff}.el-button--info:focus,.el-button--info:hover{background:#73ccff;border-color:#73ccff;color:#fff}.el-button--info.is-active,.el-button--info:active{background:#48ace6;border-color:#48ace6;color:#fff}.el-button--info:active{outline:0}.el-button--info.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--info.is-plain:focus,.el-button--info.is-plain:hover{background:#fff;border-color:#50bfff;color:#50bfff}.el-button--info.is-plain:active{background:#fff;border-color:#48ace6;color:#48ace6;outline:0}.el-button--large{padding:11px 19px;font-size:16px;border-radius:4px}.el-button--small{padding:7px 9px;font-size:12px;border-radius:4px}.el-button--mini{padding:4px;font-size:12px;border-radius:4px}.el-button--text{border:none;color:#20a0ff;background:0 0;padding-left:0;padding-right:0}.el-input__inner,.el-textarea__inner{box-sizing:border-box;background-image:none}.el-button--text:focus,.el-button--text:hover{color:#4db3ff}.el-button--text:active{color:#1d90e6}.el-button-group{vertical-align:middle}.el-button-group .el-button--primary:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--primary:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--primary:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button{float:left;position:relative}.el-button-group .el-button+.el-button{margin-left:0}.el-button-group .el-button:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.el-button-group .el-button:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.el-button-group .el-button:not(:first-child):not(:last-child){border-radius:0}.el-button-group .el-button:not(:last-child){margin-right:-1px}.el-button-group .el-button.is-active,.el-button-group .el-button:active,.el-button-group .el-button:focus,.el-button-group .el-button:hover{z-index:1}.el-input{position:relative;font-size:14px;width:100%}.el-input-group__append .el-button,.el-input-group__append .el-input,.el-input-group__prepend .el-button,.el-input-group__prepend .el-input,.el-input__inner{font-size:inherit}.el-input.is-disabled .el-input__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-input.is-disabled .el-input__inner::-webkit-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::-moz-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner:-ms-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::placeholder{color:#bfcbd9}.el-input.is-active .el-input__inner{outline:0;border-color:#20a0ff}.el-input__inner{-moz-appearance:none;appearance:none;background-color:#fff;border-radius:4px;border:1px solid #bfcbd9;color:#1f2d3d;display:block;height:36px;padding:3px 10px;transition:border-color .2s cubic-bezier(.645,.045,.355,1);width:100%}.el-input__inner::-webkit-input-placeholder{color:#97a8be}.el-input__inner::-moz-placeholder{color:#97a8be}.el-input__inner:-ms-input-placeholder{color:#97a8be}.el-input__inner::placeholder{color:#97a8be}.el-input__inner:hover{border-color:#8391a5}.el-input__inner:focus{outline:0;border-color:#20a0ff}.el-input__icon{position:absolute;width:35px;height:100%;right:0;top:0;text-align:center;color:#bfcbd9;transition:all .3s}.el-input__icon:after{content:'';height:100%;width:0;display:inline-block;vertical-align:middle}.el-input__icon+.el-input__inner{padding-right:35px}.el-input__icon.is-clickable:hover{cursor:pointer;color:#8391a5}.el-input__icon.is-clickable:hover+.el-input__inner{border-color:#8391a5}.el-input--large{font-size:16px}.el-input--large .el-input__inner{height:42px}.el-input--small{font-size:13px}.el-input--small .el-input__inner{height:30px}.el-input--mini{font-size:12px}.el-input--mini .el-input__inner{height:22px}.el-input-group{line-height:normal;display:inline-table;width:100%;border-collapse:separate}.el-input-group>.el-input__inner{vertical-align:middle;display:table-cell}.el-input-group__append,.el-input-group__prepend{background-color:#fbfdff;color:#97a8be;vertical-align:middle;display:table-cell;position:relative;border:1px solid #bfcbd9;border-radius:4px;padding:0 10px;width:1%;white-space:nowrap}.el-input-group--prepend .el-input__inner,.el-input-group__append{border-top-left-radius:0;border-bottom-left-radius:0}.el-input-group--append .el-input__inner,.el-input-group__prepend{border-top-right-radius:0;border-bottom-right-radius:0}.el-input-group__append .el-button,.el-input-group__append .el-select,.el-input-group__prepend .el-button,.el-input-group__prepend .el-select{display:block;margin:-10px}.el-input-group__append button.el-button,.el-input-group__append div.el-select .el-input__inner,.el-input-group__append div.el-select:hover .el-input__inner,.el-input-group__prepend button.el-button,.el-input-group__prepend div.el-select .el-input__inner,.el-input-group__prepend div.el-select:hover .el-input__inner{border-color:transparent;background-color:transparent;color:inherit;border-top:0;border-bottom:0}.el-input-group__prepend{border-right:0}.el-input-group__append{border-left:0}.el-textarea{display:inline-block;width:100%;vertical-align:bottom}.el-textarea.is-disabled .el-textarea__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-textarea.is-disabled .el-textarea__inner::-webkit-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::-moz-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner:-ms-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::placeholder{color:#bfcbd9}.el-textarea__inner{display:block;resize:vertical;padding:5px 7px;line-height:1.5;width:100%;font-size:14px;color:#1f2d3d;background-color:#fff;border:1px solid #bfcbd9;border-radius:4px;transition:border-color .2s cubic-bezier(.645,.045,.355,1)}.el-textarea__inner::-webkit-input-placeholder{color:#97a8be}.el-textarea__inner::-moz-placeholder{color:#97a8be}.el-textarea__inner:-ms-input-placeholder{color:#97a8be}.el-textarea__inner::placeholder{color:#97a8be}.el-textarea__inner:hover{border-color:#8391a5}.el-textarea__inner:focus{outline:0;border-color:#20a0ff}.el-message-box{text-align:left;display:inline-block;vertical-align:middle;background-color:#fff;width:420px;border-radius:3px;font-size:16px;overflow:hidden;-webkit-backface-visibility:hidden;backface-visibility:hidden}.el-message-box__wrapper{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center}.el-message-box__wrapper::after{content:\\\"\\\";display:inline-block;height:100%;width:0;vertical-align:middle}.el-message-box__header{position:relative;padding:20px 20px 0}.el-message-box__content{padding:30px 20px;color:#48576a;font-size:14px;position:relative}.el-message-box__close{display:inline-block;position:absolute;top:19px;right:20px;color:#999;cursor:pointer;line-height:20px;text-align:center}.el-message-box__close:hover{color:#20a0ff}.el-message-box__input{padding-top:15px}.el-message-box__input input.invalid,.el-message-box__input input.invalid:focus{border-color:#ff4949}.el-message-box__errormsg{color:#ff4949;font-size:12px;min-height:18px;margin-top:2px}.el-message-box__title{padding-left:0;margin-bottom:0;font-size:16px;font-weight:700;height:18px;color:#333}.el-message-box__message{margin:0}.el-message-box__message p{margin:0;line-height:1.4}.el-message-box__btns{padding:10px 20px 15px;text-align:right}.el-message-box__btns button:nth-child(2){margin-left:10px}.el-message-box__btns-reverse{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.el-message-box__status{position:absolute;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);font-size:36px!important}.el-message-box__status.el-icon-circle-check{color:#13ce66}.el-message-box__status.el-icon-information{color:#50bfff}.el-message-box__status.el-icon-warning{color:#f7ba2a}.el-message-box__status.el-icon-circle-cross{color:#ff4949}.msgbox-fade-enter-active{animation:msgbox-fade-in .3s}.msgbox-fade-leave-active{animation:msgbox-fade-out .3s}@keyframes msgbox-fade-in{0%{transform:translate3d(0,-20px,0);opacity:0}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes msgbox-fade-out{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,-20px,0);opacity:0}}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(418);\n    var env = __webpack_require__(404);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(450);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var Model = __webpack_require__(405);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(406);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(396);\n    var Element = __webpack_require__(446);\n    var BoundingRect = __webpack_require__(407);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(413);\n    var vec2 = __webpack_require__(401);\n    var bbox = __webpack_require__(535);\n    var BoundingRect = __webpack_require__(407);\n    var dpr = __webpack_require__(422).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return updateCrumbs; });\n\nvar updateCrumbs = new __WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"]();\n\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(396);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(406);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(399);\n    var formatUtil = __webpack_require__(403);\n    var Scale = __webpack_require__(421);\n    var helper = __webpack_require__(443);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var clazz = __webpack_require__(406);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var Style = __webpack_require__(455);\n\n    var Element = __webpack_require__(446);\n    var RectText = __webpack_require__(544);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 433 */,\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(398);\n    var BoundingRect = __webpack_require__(407);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(437);\n    var completeDimensions = __webpack_require__(438);\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n    var CoordinateSystem = __webpack_require__(434);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(405);\n    var DataDiffer = __webpack_require__(493);\n\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(396);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var formatUtil = __webpack_require__(403);\n    var classUtil = __webpack_require__(406);\n    var modelUtil = __webpack_require__(400);\n    var ComponentModel = __webpack_require__(408);\n    var colorPaletteMixin = __webpack_require__(427);\n    var env = __webpack_require__(404);\n    var layout = __webpack_require__(409);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(404);\n    var zrUtil = __webpack_require__(396);\n    var get = __webpack_require__(400).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var graphic = __webpack_require__(398);\n    var textContain = __webpack_require__(410);\n    var formatUtil = __webpack_require__(403);\n    var matrix = __webpack_require__(414);\n    var axisHelper = __webpack_require__(415);\n    var AxisBuilder = __webpack_require__(459);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(399);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(423);\n    var componentUtil = __webpack_require__(429);\n    var clazzUtil = __webpack_require__(406);\n    var modelUtil = __webpack_require__(400);\n    var zrUtil = __webpack_require__(396);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(451);\n    var Eventful = __webpack_require__(418);\n    var Transformable = __webpack_require__(457);\n    var Animatable = __webpack_require__(554);\n    var zrUtil = __webpack_require__(396);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(526);\n    var color = __webpack_require__(419);\n    var util = __webpack_require__(396);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(422);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(431);\n    var BoundingRect = __webpack_require__(407);\n    var zrUtil = __webpack_require__(396);\n\n    var LRU = __webpack_require__(450);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(543);\n    var smoothBezier = __webpack_require__(542);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(414);\n    var vector = __webpack_require__(401);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 458 */,\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var formatUtil = __webpack_require__(403);\n    var graphic = __webpack_require__(398);\n    var Model = __webpack_require__(405);\n    var numberUtil = __webpack_require__(399);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(401);\n    var matrix = __webpack_require__(414);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(420);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(397).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(397);\n    var axisPointerModelHelper = __webpack_require__(420);\n    var axisTrigger = __webpack_require__(480);\n    var zrUtil = __webpack_require__(396);\n\n    __webpack_require__(477);\n    __webpack_require__(478);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(463);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(398);\n    var BaseAxisPointer = __webpack_require__(479);\n    var viewHelper = __webpack_require__(442);\n    var cartesianAxisHelper = __webpack_require__(461);\n    var AxisView = __webpack_require__(460);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(398);\n    var zrUtil = __webpack_require__(396);\n    var echarts = __webpack_require__(397);\n\n    __webpack_require__(492);\n\n    __webpack_require__(476);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(399);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(396);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var axisHelper = __webpack_require__(415);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\nvar statuColors = {\n  '待提交': 'waitC',\n  '待确认': 'waitC',\n  '待发布': 'waitC',\n  '待执行': 'waitC',\n  '已发布': 'ok1C',\n  '销售完成': 'ok2C',\n  '已确认确认书': 'ok2C'\n};\nvar amountColors = {\n  '已执行': 'yzx',\n  '未执行': 'wzx',\n  '审批中': 'spz'\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = {\n  filters: {\n    filterColor: function filterColor(value) {\n      return statuColors[value];\n    },\n    filterAmountColor: function filterAmountColor(value) {\n      return amountColors[value];\n    }\n  }\n};\n\n/***/ }),\n/* 468 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  props: {\n    static: false },\n\n  components: {\n    ElForm: __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form___default.a\n  },\n\n  methods: {\n    showDialog: function showDialog(data, boole, id) {\n      this.disabled = boole;\n      this.id = id;\n      this.dialogData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_lodash__[\"merge\"])({}, data);\n      this.visible = true;\n    },\n    goEaa: function goEaa() {\n      this.visible = false;\n    },\n    closeDialog: function closeDialog() {\n      this.visible = false;\n    }\n  },\n\n  data: function data() {\n    return {\n      visible: false,\n      id: '',\n      dialogData: {\n        productName: '丰银宝B',\n        assetType: '资产',\n        state: ['买入', '赎回'],\n        company: ['宝信国际ABS集合信托', '广发货币基金'],\n        accounts: [2343526536, 35434546],\n        Surplus: '',\n        stated: ['已执行', '待执行']\n      },\n      disabled: false\n    };\n  }\n};\n\n/***/ }),\n/* 469 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_form_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_theme_default_base_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  props: {\n    static: false },\n\n  components: {\n    ElForm: __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_form___default.a\n  },\n\n  methods: {\n    showDialog: function showDialog(data, boole) {\n      this.visible = true;\n      this.dialogData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_lodash__[\"merge\"])({}, data);\n      console.log(this.dialogData);\n      this.disabled = boole;\n    },\n    goEaa: function goEaa() {\n      this.visible = false;\n    },\n    closeDialog: function closeDialog() {\n      this.visible = false;\n    }\n  },\n\n  data: function data() {\n    return {\n      visible: false,\n      disabled: '',\n      dialogData: {\n        productName: '丰银宝A',\n        assetType: '资金',\n        state: ['已更新', '已更新'],\n        company: [],\n        accounts: [1235325236, 435346632],\n        Surplus: 799978640,\n        boole: true,\n        stated: ['审批中']\n      }\n    };\n  }\n};\n\n/***/ }),\n/* 470 */,\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".product-asset-dialog .el-dialog__header{height:50px;line-height:50px}.product-asset-dialog .el-dialog__body{padding:10px 20px}.product-asset-dialog .now-state{padding:20px 0}.product-asset-dialog .now-state h4 span{margin:0 5px;font-weight:400}.product-asset-dialog .now-state h4 i{color:#d8dadd;font-size:13px}.product-asset-dialog .mes-title{padding-bottom:10px}.product-asset-dialog .mes-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .mes-body{padding-bottom:20px;border-bottom:1px solid #e2e5e9}.product-asset-dialog .mes-body table{table-layout:fixed;width:100%}.product-asset-dialog .mes-body table td,.product-asset-dialog .mes-body table th{font-weight:400;padding:5px 0;color:#84888d}.product-asset-dialog .mes-body table .product-rate{color:#de3569}.product-asset-dialog .mes-body table .gColor{color:#82c5aa}.product-asset-dialog .mes-body table .redeem{color:#16a474}.product-asset-dialog .account-title{padding-bottom:10px}.product-asset-dialog .account-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .account-content{padding:0 40px;height:280px;position:relative}.product-asset-dialog .account-left{position:absolute;left:80px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.product-asset-dialog .account-left-bottom,.product-asset-dialog .account-left-top{padding:5px 0;color:#595f67;font-size:13px;font-weight:700}.product-asset-dialog .account-left-middle span{display:inline-block;width:1rem}.product-asset-dialog .account-left-middle i{margin-left:15px;display:inline-block;height:75px;width:2px;border-radius:2px;background:#badbeb;position:relative}.product-asset-dialog .account-left-middle i:before{content:\\\"\\\";position:absolute;bottom:2px;right:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.product-asset-dialog .account-left-middle i:after{content:\\\"\\\";position:absolute;bottom:2px;left:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.product-asset-dialog .account-right{margin-left:120px}.product-asset-dialog .account-right .account-right-bottom,.product-asset-dialog .account-right .account-right-top{padding:15px 25px;border:1px solid #e2e5e9;border-radius:5px;margin:10px 0}.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top th{font-weight:400;text-align:right}.product-asset-dialog .account-right .account-right-bottom td,.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top td,.product-asset-dialog .account-right .account-right-top th{padding:5px 0}.product-asset-dialog .account-right .account-right-bottom .account-color,.product-asset-dialog .account-right .account-right-top .account-color{color:#538cc0}.product-asset-dialog .el-dialog__footer .success{border:none;background:#9fbedb;color:#fff;font-weight:700}.product-asset-dialog .el-dialog__footer .error{border:none;background:#badbec;color:#fff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/AssetDialog.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAa,AACb,gBAAkB,CACnB,AACD,uCACE,iBAAmB,CACpB,AACD,iCACE,cAAgB,CACjB,AACD,yCACI,aAAc,AACd,eAAoB,CACvB,AACD,sCACI,cAAe,AACf,cAAgB,CACnB,AACD,iCACE,mBAAqB,CACtB,AACD,oCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,gCACE,oBAAqB,AACrB,+BAAiC,CAClC,AACD,sCACI,mBAAoB,AACpB,UAAY,CACf,AACD,kFAEM,gBAAoB,AACpB,cAAe,AACf,aAAe,CACpB,AACD,oDACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,qCACE,mBAAqB,CACtB,AACD,wCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,uCACE,eAAgB,AAChB,aAAc,AACd,iBAAmB,CACpB,AACD,oCACE,kBAAmB,AACnB,UAAW,AACX,QAAS,AACT,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,mFAEE,cAAe,AACf,cAAe,AACf,eAAgB,AAChB,eAAkB,CACnB,AACD,gDACE,qBAAsB,AACtB,UAAY,CACb,AACD,6CACE,iBAAkB,AAClB,qBAAsB,AACtB,YAAa,AACb,UAAW,AACX,kBAAmB,AACnB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,oDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,gCAAiC,AACzB,uBAAyB,CACpC,AACD,mDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,iCAAkC,AAC1B,wBAA0B,CACrC,AACD,qCACE,iBAAmB,CACpB,AACD,mHAEI,kBAAmB,AACnB,yBAA0B,AAC1B,kBAAmB,AACnB,aAAe,CAClB,AACD,yHAEM,gBAAoB,AACpB,gBAAkB,CACvB,AACD,kPAIM,aAAe,CACpB,AACD,iJAEM,aAAe,CACpB,AACD,kDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB,AACD,gDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB\",\"file\":\"AssetDialog.vue\",\"sourcesContent\":[\"\\n.product-asset-dialog .el-dialog__header {\\n  height: 50px;\\n  line-height: 50px;\\n}\\n.product-asset-dialog .el-dialog__body {\\n  padding: 10px 20px;\\n}\\n.product-asset-dialog .now-state {\\n  padding: 20px 0;\\n}\\n.product-asset-dialog .now-state h4 span {\\n    margin: 0 5px;\\n    font-weight: normal;\\n}\\n.product-asset-dialog .now-state h4 i {\\n    color: #d8dadd;\\n    font-size: 13px;\\n}\\n.product-asset-dialog .mes-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .mes-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .mes-body {\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #e2e5e9;\\n}\\n.product-asset-dialog .mes-body table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.product-asset-dialog .mes-body table th,\\n    .product-asset-dialog .mes-body table td {\\n      font-weight: normal;\\n      padding: 5px 0;\\n      color: #84888d;\\n}\\n.product-asset-dialog .mes-body table .product-rate {\\n      color: #de3569;\\n}\\n.product-asset-dialog .mes-body table .gColor {\\n      color: #82c5aa;\\n}\\n.product-asset-dialog .mes-body table .redeem {\\n      color: #16a474;\\n}\\n.product-asset-dialog .account-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .account-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .account-content {\\n  padding: 0 40px;\\n  height: 280px;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left {\\n  position: absolute;\\n  left: 80px;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.product-asset-dialog .account-left-top,\\n.product-asset-dialog .account-left-bottom {\\n  padding: 5px 0;\\n  color: #595f67;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .account-left-middle span {\\n  display: inline-block;\\n  width: 1rem;\\n}\\n.product-asset-dialog .account-left-middle i {\\n  margin-left: 15px;\\n  display: inline-block;\\n  height: 75px;\\n  width: 2px;\\n  border-radius: 2px;\\n  background: #badbeb;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left-middle i:before {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    right: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n}\\n.product-asset-dialog .account-left-middle i:after {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    left: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg);\\n}\\n.product-asset-dialog .account-right {\\n  margin-left: 120px;\\n}\\n.product-asset-dialog .account-right .account-right-top,\\n  .product-asset-dialog .account-right .account-right-bottom {\\n    padding: 15px 25px;\\n    border: 1px solid #e2e5e9;\\n    border-radius: 5px;\\n    margin: 10px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-bottom th {\\n      font-weight: normal;\\n      text-align: right;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-top td,\\n    .product-asset-dialog .account-right .account-right-bottom th,\\n    .product-asset-dialog .account-right .account-right-bottom td {\\n      padding: 5px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top .account-color,\\n    .product-asset-dialog .account-right .account-right-bottom .account-color {\\n      color: #538cc0;\\n}\\n.product-asset-dialog .el-dialog__footer .success {\\n  border: none;\\n  background: #9fbedb;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .el-dialog__footer .error {\\n  border: none;\\n  background: #badbec;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 472 */,\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".product-asset-dialog .el-dialog__header{height:50px;line-height:50px}.product-asset-dialog .el-dialog__body{padding:10px 20px}.product-asset-dialog .now-state{padding:20px 0}.product-asset-dialog .now-state h4 span{margin:0 5px;font-weight:400}.product-asset-dialog .now-state h4 i{color:#d8dadd;font-size:13px}.product-asset-dialog .mes-title{padding-bottom:10px}.product-asset-dialog .mes-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .mes-body{padding-bottom:20px;border-bottom:1px solid #e2e5e9}.product-asset-dialog .mes-body table{table-layout:fixed;width:100%}.product-asset-dialog .mes-body table td,.product-asset-dialog .mes-body table th{font-weight:400;padding:5px 0;color:#84888d}.product-asset-dialog .mes-body table .product-rate{color:#de3569}.product-asset-dialog .mes-body table .gColor{color:#82c5aa}.product-asset-dialog .mes-body table .redeem{color:#16a474}.product-asset-dialog .account-title{padding-bottom:10px}.product-asset-dialog .account-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .account-content{padding:0 40px;height:280px;position:relative}.product-asset-dialog .account-left{position:absolute;left:80px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.product-asset-dialog .account-left-bottom,.product-asset-dialog .account-left-top{padding:5px 0;color:#595f67;font-size:13px;font-weight:700}.product-asset-dialog .account-left-middle span{display:inline-block;width:1rem}.product-asset-dialog .account-left-middle i{margin-left:15px;display:inline-block;height:75px;width:2px;border-radius:2px;background:#badbeb;position:relative}.product-asset-dialog .account-left-middle i:before{content:\\\"\\\";position:absolute;bottom:2px;right:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.product-asset-dialog .account-left-middle i:after{content:\\\"\\\";position:absolute;bottom:2px;left:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.product-asset-dialog .account-right{margin-left:120px}.product-asset-dialog .account-right .account-right-bottom,.product-asset-dialog .account-right .account-right-top{padding:15px 25px;border:1px solid #e2e5e9;border-radius:5px;margin:10px 0}.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top th{font-weight:400;text-align:right}.product-asset-dialog .account-right .account-right-bottom td,.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top td,.product-asset-dialog .account-right .account-right-top th{padding:5px 0}.product-asset-dialog .account-right .account-right-bottom .account-color,.product-asset-dialog .account-right .account-right-top .account-color{color:#538cc0}.product-asset-dialog .el-dialog__footer .success{border:none;background:#9fbedb;color:#fff;font-weight:700}.product-asset-dialog .el-dialog__footer .error{border:none;background:#badbec;color:#fff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/ProductDialog.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAa,AACb,gBAAkB,CACnB,AACD,uCACE,iBAAmB,CACpB,AACD,iCACE,cAAgB,CACjB,AACD,yCACI,aAAc,AACd,eAAoB,CACvB,AACD,sCACI,cAAe,AACf,cAAgB,CACnB,AACD,iCACE,mBAAqB,CACtB,AACD,oCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,gCACE,oBAAqB,AACrB,+BAAiC,CAClC,AACD,sCACI,mBAAoB,AACpB,UAAY,CACf,AACD,kFAEM,gBAAoB,AACpB,cAAe,AACf,aAAe,CACpB,AACD,oDACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,qCACE,mBAAqB,CACtB,AACD,wCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,uCACE,eAAgB,AAChB,aAAc,AACd,iBAAmB,CACpB,AACD,oCACE,kBAAmB,AACnB,UAAW,AACX,QAAS,AACT,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,mFAEE,cAAe,AACf,cAAe,AACf,eAAgB,AAChB,eAAkB,CACnB,AACD,gDACE,qBAAsB,AACtB,UAAY,CACb,AACD,6CACE,iBAAkB,AAClB,qBAAsB,AACtB,YAAa,AACb,UAAW,AACX,kBAAmB,AACnB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,oDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,gCAAiC,AACzB,uBAAyB,CACpC,AACD,mDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,iCAAkC,AAC1B,wBAA0B,CACrC,AACD,qCACE,iBAAmB,CACpB,AACD,mHAEI,kBAAmB,AACnB,yBAA0B,AAC1B,kBAAmB,AACnB,aAAe,CAClB,AACD,yHAEM,gBAAoB,AACpB,gBAAkB,CACvB,AACD,kPAIM,aAAe,CACpB,AACD,iJAEM,aAAe,CACpB,AACD,kDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB,AACD,gDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB\",\"file\":\"ProductDialog.vue\",\"sourcesContent\":[\"\\n.product-asset-dialog .el-dialog__header {\\n  height: 50px;\\n  line-height: 50px;\\n}\\n.product-asset-dialog .el-dialog__body {\\n  padding: 10px 20px;\\n}\\n.product-asset-dialog .now-state {\\n  padding: 20px 0;\\n}\\n.product-asset-dialog .now-state h4 span {\\n    margin: 0 5px;\\n    font-weight: normal;\\n}\\n.product-asset-dialog .now-state h4 i {\\n    color: #d8dadd;\\n    font-size: 13px;\\n}\\n.product-asset-dialog .mes-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .mes-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .mes-body {\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #e2e5e9;\\n}\\n.product-asset-dialog .mes-body table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.product-asset-dialog .mes-body table th,\\n    .product-asset-dialog .mes-body table td {\\n      font-weight: normal;\\n      padding: 5px 0;\\n      color: #84888d;\\n}\\n.product-asset-dialog .mes-body table .product-rate {\\n      color: #de3569;\\n}\\n.product-asset-dialog .mes-body table .gColor {\\n      color: #82c5aa;\\n}\\n.product-asset-dialog .mes-body table .redeem {\\n      color: #16a474;\\n}\\n.product-asset-dialog .account-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .account-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .account-content {\\n  padding: 0 40px;\\n  height: 280px;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left {\\n  position: absolute;\\n  left: 80px;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.product-asset-dialog .account-left-top,\\n.product-asset-dialog .account-left-bottom {\\n  padding: 5px 0;\\n  color: #595f67;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .account-left-middle span {\\n  display: inline-block;\\n  width: 1rem;\\n}\\n.product-asset-dialog .account-left-middle i {\\n  margin-left: 15px;\\n  display: inline-block;\\n  height: 75px;\\n  width: 2px;\\n  border-radius: 2px;\\n  background: #badbeb;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left-middle i:before {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    right: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n}\\n.product-asset-dialog .account-left-middle i:after {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    left: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg);\\n}\\n.product-asset-dialog .account-right {\\n  margin-left: 120px;\\n}\\n.product-asset-dialog .account-right .account-right-top,\\n  .product-asset-dialog .account-right .account-right-bottom {\\n    padding: 15px 25px;\\n    border: 1px solid #e2e5e9;\\n    border-radius: 5px;\\n    margin: 10px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-bottom th {\\n      font-weight: normal;\\n      text-align: right;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-top td,\\n    .product-asset-dialog .account-right .account-right-bottom th,\\n    .product-asset-dialog .account-right .account-right-bottom td {\\n      padding: 5px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top .account-color,\\n    .product-asset-dialog .account-right .account-right-bottom .account-color {\\n      color: #538cc0;\\n}\\n.product-asset-dialog .el-dialog__footer .success {\\n  border: none;\\n  background: #9fbedb;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .el-dialog__footer .error {\\n  border: none;\\n  background: #badbec;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(396);\n    var symbolUtil = __webpack_require__(435);\n    var graphic = __webpack_require__(398);\n    var numberUtil = __webpack_require__(399);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(491);\n\n    __webpack_require__(586);\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(397);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(441);\n\n    var AxisPonterView = __webpack_require__(397).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var clazzUtil = __webpack_require__(406);\n    var graphic = __webpack_require__(398);\n    var get = __webpack_require__(400).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(420);\n    var eventTool = __webpack_require__(417);\n    var throttle = __webpack_require__(444);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n    var modelHelper = __webpack_require__(420);\n    var findPointFromSeries = __webpack_require__(440);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(409);\n    var formatUtil = __webpack_require__(403);\n    var graphic = __webpack_require__(398);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(483);\n    __webpack_require__(485);\n    __webpack_require__(484);\n\n    var echarts = __webpack_require__(397);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(486));\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var Model = __webpack_require__(405);\n\n    var LegendModel = __webpack_require__(397).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var symbolCreator = __webpack_require__(435);\n    var graphic = __webpack_require__(398);\n    var listComponentHelper = __webpack_require__(481);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(397).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(397);\n    var zrUtil = __webpack_require__(396);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(462);\n\n    __webpack_require__(489);\n\n    __webpack_require__(490);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(397).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(397).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(396);\n    var zrColor = __webpack_require__(419);\n    var eventUtil = __webpack_require__(417);\n    var formatUtil = __webpack_require__(403);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(404);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(397).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(488);\n    var zrUtil = __webpack_require__(396);\n    var formatUtil = __webpack_require__(403);\n    var numberUtil = __webpack_require__(399);\n    var graphic = __webpack_require__(398);\n    var findPointFromSeries = __webpack_require__(440);\n    var layoutUtil = __webpack_require__(409);\n    var env = __webpack_require__(404);\n    var Model = __webpack_require__(405);\n    var globalListener = __webpack_require__(441);\n    var axisHelper = __webpack_require__(415);\n    var axisPointerViewHelper = __webpack_require__(442);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(397).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(408);\n    var zrUtil = __webpack_require__(396);\n    var axisModelCreator = __webpack_require__(589);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(466));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(409);\n    var axisHelper = __webpack_require__(415);\n\n    var zrUtil = __webpack_require__(396);\n    var Cartesian2D = __webpack_require__(592);\n    var Axis2D = __webpack_require__(590);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(593);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(434).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(436);\n    var symbolUtil = __webpack_require__(435);\n    var axisHelper = __webpack_require__(415);\n    var axisModelCommonMixin = __webpack_require__(466);\n    var Model = __webpack_require__(405);\n    var util = __webpack_require__(396);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(438),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(398);\n    var zrUtil = __webpack_require__(396);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n    var Model = __webpack_require__(405);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(408);\n\n    var globalDefault = __webpack_require__(498);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(427));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var modelUtil = __webpack_require__(400);\n    var ComponentModel = __webpack_require__(408);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(426)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(426)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(426)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(410);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var formatUtil = __webpack_require__(403);\n    var classUtil = __webpack_require__(406);\n    var modelUtil = __webpack_require__(400);\n    var ComponentModel = __webpack_require__(408);\n    var colorPaletteMixin = __webpack_require__(427);\n    var env = __webpack_require__(404);\n    var layout = __webpack_require__(409);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(396);\n    var compatStyle = __webpack_require__(506);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(396);\n    var Scale = __webpack_require__(421);\n    var numberUtil = __webpack_require__(399);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(428);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(396);\n    var Scale = __webpack_require__(421);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(396);\n    var numberUtil = __webpack_require__(399);\n    var formatUtil = __webpack_require__(403);\n    var scaleHelper = __webpack_require__(443);\n\n    var IntervalScale = __webpack_require__(428);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(423);\n    var componentUtil = __webpack_require__(429);\n    var clazzUtil = __webpack_require__(406);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(432);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(471);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"31d95752\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AssetDialog.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AssetDialog.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 513 */,\n/* 514 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(473);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"5d7236cf\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDialog.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDialog.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(512)\n\nvar Component = __webpack_require__(253)(\n  /* script */\n  __webpack_require__(468),\n  /* template */\n  __webpack_require__(518),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(514)\n\nvar Component = __webpack_require__(253)(\n  /* script */\n  __webpack_require__(469),\n  /* template */\n  __webpack_require__(520),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 517 */,\n/* 518 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"product-asset-dialog\"\n  }, [_c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogData.productName\n    },\n    model: {\n      value: (_vm.visible),\n      callback: function($$v) {\n        _vm.visible = $$v\n      },\n      expression: \"visible\"\n    }\n  }, [_c('el-form', [_c('div', {\n    staticClass: \"public-asset-dialog-body\"\n  }, [_c('div', {\n    staticClass: \"product-mes\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"资产信息\")])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(\"8.00%\")]), _c('th', [_vm._v(\"期限：\")]), _c('td', [_vm._v(\"90天\")])]), _c('tr', [_c('th', [_vm._v(\"发行方：\")]), _c('td', [_vm._v(\"恒大金服\")]), _c('th'), _c('td')])])])])]), _c('div', {\n    staticClass: \"now-state\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"当前状态\"), _c('span', [_vm._v(_vm._s(_vm.dialogData.stated[_vm.id]))]), _c('i', {\n    staticClass: \"icon-batonx icon-shenpi\"\n  })])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(_vm._s(_vm.dialogData.state[_vm.id]))]), _c('td', [_vm._v(_vm._s(_vm.dialogData.company[_vm.id]))]), _c('th'), _c('td', [_c('span', {\n    class: ~'卖出赎回到期'.indexOf(_vm.dialogData.state[_vm.id]) ? 'gColor' : 'product-rate'\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[_vm.id])))])])])])])])]), _c('div', {\n    staticClass: \"account-info\"\n  }, [_c('div', {\n    staticClass: \"account-title\"\n  }, [_vm._v(\"账户信息\")]), _c('div', {\n    staticClass: \"account-content\"\n  }, [_c('div', {\n    staticClass: \"account-left\"\n  }, [_c('div', {\n    staticClass: \"account-left-top\"\n  }, [_vm._v(\"产品账户\")]), _c('div', {\n    staticClass: \"account-left-middle\"\n  }, [_c('span', [_vm._v(\"打款方向\")]), _c('i')]), _c('div', {\n    staticClass: \"account-left-bottom\"\n  }, [_vm._v(\"资产账户\")])]), _c('div', {\n    staticClass: \"account-right\"\n  }, [_c('div', {\n    staticClass: \"account-right-top\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"广东金融高新区股权交易中心\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2232 1937 8710 871\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司广州番禹区支行\")])])])])]), _c('div', {\n    staticClass: \"account-right-bottom\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"天津旭达过桥有限公司\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2310 8372 6532 098\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行天津滨海新区支行\")])])])])])])])])])]), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [(!_vm.static && _vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static && !_vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\",\n      \"disabled\": \"disabled\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"驳回\")]) : _vm._e(), (_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"关闭\")]) : _vm._e()], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 519 */,\n/* 520 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"product-asset-dialog\"\n  }, [_c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogData.productName\n    },\n    model: {\n      value: (_vm.visible),\n      callback: function($$v) {\n        _vm.visible = $$v\n      },\n      expression: \"visible\"\n    }\n  }, [_c('el-form', [_c('div', {\n    staticClass: \"product-asset-dialog-body\"\n  }, [_c('div', {\n    staticClass: \"product-mes\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"产品信息\")])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(\"6.5%\")]), _c('th', [_vm._v(\"发行期限：\")]), _c('td', [_vm._v(\"1天\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"京东金融\")]), _c('th', [_vm._v(\"结算方式：\")]), _c('td', [_vm._v(\"净额计算\")])])])])])]), _c('div', {\n    staticClass: \"now-state\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"当前状态\"), _c('span', [_vm._v(_vm._s(_vm.dialogData.stated[0]))]), _c('i', {\n    staticClass: \"icon-batonx icon-shenpi\"\n  })])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"申购数据：\")]), _c('td', [_c('span', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[0])))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')]), _c('tr', [_c('th', [_vm._v(\"赎回数据：\")]), _c('td', [_c('span', {\n    staticClass: \"redeem\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[1])))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')]), _c('tr', [_c('th', [_vm._v(\"净申购：\")]), _c('td', [_c('span', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.Surplus)))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')])])])])]), _c('div', {\n    staticClass: \"account-info\"\n  }, [_c('div', {\n    staticClass: \"account-title\"\n  }, [_vm._v(\"账户信息\")]), _c('div', {\n    staticClass: \"account-content\"\n  }, [_c('div', {\n    staticClass: \"account-left\"\n  }, [_c('div', {\n    staticClass: \"account-left-top\"\n  }, [_vm._v(\"募集金额\")]), _c('div', {\n    staticClass: \"account-left-middle\"\n  }, [_c('span', [_vm._v(\"打款方向\")]), _c('i')]), _c('div', {\n    staticClass: \"account-left-bottom\"\n  }, [_vm._v(\"产品账户\")])]), _c('div', {\n    staticClass: \"account-right\"\n  }, [_c('div', {\n    staticClass: \"account-right-top\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"北京和丰永讯金融信息服务有限公司\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"1109 2037 8610 201\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司北京亚运村支行\")])])])])]), _c('div', {\n    staticClass: \"account-right-bottom\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"广东金融高新区股权交易中心\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2232 1937 8710 871\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司广州番禹区支行\")])])])])])])])])])]), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [(!_vm.static && _vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static && !_vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\",\n      \"disabled\": \"disabled\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"驳回\")]) : _vm._e(), (_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"关闭\")]) : _vm._e()], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(396);\n    var Draggable = __webpack_require__(555);\n\n    var Eventful = __webpack_require__(418);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(396);\n    var config = __webpack_require__(422);\n    var Style = __webpack_require__(455);\n    var Pattern = __webpack_require__(454);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(422);\n    var util = __webpack_require__(396);\n    var log = __webpack_require__(452);\n    var BoundingRect = __webpack_require__(407);\n    var timsort = __webpack_require__(430);\n\n    var Layer = __webpack_require__(522);\n\n    var requestAnimationFrame = __webpack_require__(448);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(453);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(396);\n    var env = __webpack_require__(404);\n\n    var Group = __webpack_require__(423);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(430);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(396);\n    var Dispatcher = __webpack_require__(417).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(448);\n\n    var Animator = __webpack_require__(447);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(527);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(449).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(413);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(424).CMD;\n    var line = __webpack_require__(530);\n    var cubic = __webpack_require__(529);\n    var quadratic = __webpack_require__(532);\n    var arc = __webpack_require__(528);\n    var normalizeRadian = __webpack_require__(449).normalizeRadian;\n    var curve = __webpack_require__(413);\n\n    var windingLine = __webpack_require__(533);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(413);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(417);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 535 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(401);\n    var curve = __webpack_require__(413);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 536 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(417);\n    var zrUtil = __webpack_require__(396);\n    var Eventful = __webpack_require__(418);\n    var env = __webpack_require__(404);\n    var GestureMgr = __webpack_require__(534);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 537 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(402);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var Gradient = __webpack_require__(432);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var Gradient = __webpack_require__(432);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(431);\n    var zrUtil = __webpack_require__(396);\n    var textContain = __webpack_require__(410);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(401);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(401);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(410);\n    var BoundingRect = __webpack_require__(407);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(413);\n    var vec2 = __webpack_require__(401);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(456);\n\n    module.exports = __webpack_require__(402).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(456);\n\n    module.exports = __webpack_require__(402).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 551 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(541);\n\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 552 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(402).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 553 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(404);\n    var Path = __webpack_require__(402);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(447);\n    var util = __webpack_require__(396);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(452);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(402);\n    var PathProxy = __webpack_require__(424);\n    var transformPath = __webpack_require__(557);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 557 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(424).CMD;\n    var vec2 = __webpack_require__(401);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(451);\n    var env = __webpack_require__(404);\n    var zrUtil = __webpack_require__(396);\n\n    var Handler = __webpack_require__(521);\n    var Storage = __webpack_require__(524);\n    var Animation = __webpack_require__(525);\n    var HandlerProxy = __webpack_require__(536);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(523)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 559 */,\n/* 560 */,\n/* 561 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__ = __webpack_require__(397);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(2);\n\n\n\n__webpack_require__(574);\n__webpack_require__(581);\n__webpack_require__(504);\n__webpack_require__(487);\n__webpack_require__(482);\n__webpack_require__(587);\n__webpack_require__(476);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  props: ['chartOption'],\n  data: function data() {\n    return {\n      echart: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.echart = __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.init(this.$refs.lineEchart);\n    var option = {\n      legend: {\n        itemWidth: 10,\n        itemHeight: 10,\n        itemGap: 20,\n        textStyle: {\n          color: '#262c38',\n          fontSize: 12\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        formatter: function formatter(params, ticket, callback) {\n          if (!params.length) return;\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_lodash__[\"concat\"])(['<table class=\"chart-tooltip\"><tr><th colspan=\"2\">' + params[0].name + '</th><tr>'], __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_lodash__[\"map\"])(params, function (v) {\n            return '<tr class=\"line\">\\n                        <td class=\"left\"><i class=\"circle\" style=\"color:' + v.color + '\"></i>' + v.seriesName + '\\uFF1A</td>\\n                        <td class=\"right\">' + __WEBPACK_IMPORTED_MODULE_2_vue__[\"default\"].filter('ktCurrency')(v.value) + '</td>\\n                      </tr>';\n          }), '</table>').join('');\n        }\n      },\n      xAxis: {\n        type: 'category',\n\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#2a313b'\n          }\n        }\n      },\n      yAxis: {\n        type: 'value',\n        name: '',\n        interval: 0,\n        axisLabel: {\n          show: true,\n          formatter: '{value}'\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#2a313b'\n          }\n        },\n        axisTick: {\n          show: true\n        },\n        splitLine: {\n          show: false\n        }\n      },\n      grid: {\n        show: false,\n        left: 70,\n        right: 20,\n        bottom: 60\n      }\n    };\n\n    this.echart.setOption(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_lodash__[\"merge\"])({}, option, this.chartOption));\n    window.addEventListener('resize', function () {\n      _this.echart.resize();\n    });\n  },\n\n\n  watch: {\n    chartOption: function chartOption() {\n      this.echart.setOption(this.chartOption);\n    }\n  }\n};\n\n/***/ }),\n/* 562 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css__ = __webpack_require__(412);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box__ = __webpack_require__(411);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css__ = __webpack_require__(255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_lodash__);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  props: {\n    passedNotes: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  methods: {\n    addNote: function addNote() {\n      if (this.notes.length >= 50) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.warn('备注个数不得超过50个');\n        return;\n      }\n\n      if (!this.newNote) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.error('备注不能为空!');\n        return;\n      }\n\n      this.notes.unshift({\n        id: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_lodash__[\"uniqueId\"])('new_note_'),\n        editActive: false,\n        text: this.newNote,\n        textEdit: this.newNote,\n        createdAt: new Date()\n      });\n\n      this.newNote = '';\n      this.addNoteFocus = false;\n    },\n    saveNote: function saveNote(note) {\n      note.text = note.textEdit;\n      note.editActive = false;\n    },\n    moreNote: function moreNote() {\n      if (this.noteVisibleCount >= this.notes.length) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.info('没有更多了');\n        return;\n      }\n      this.noteVisibleCount += this.noteMoreStep;\n    },\n    editNote: function editNote(note) {\n      var _this = this;\n\n      note.editActive = true;\n      this.$nextTick(function () {\n        var textarea = _this.$refs.notes.querySelector('#note_' + note.id + ' textarea');\n        textarea.focus();\n      });\n    },\n    resetNote: function resetNote(note) {\n      note.textEdit = note.text;\n      note.editActive = false;\n    },\n    deleteNote: function deleteNote(note) {\n      var _this2 = this;\n\n      __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box___default.a.confirm('此操作将永久删除改批注, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.notes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_lodash__[\"remove\"])(_this2.notes, function (v) {\n          return note.id !== v.id;\n        });\n      });\n    }\n  },\n\n  computed: {\n    showNotes: function showNotes() {\n      return this.notes.slice(0, this.noteVisibleCount);\n    }\n  },\n\n  data: function data() {\n    return {\n      notes: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_lodash__[\"merge\"])([], this.passedNotes),\n      newNote: '',\n      addNoteFocus: false,\n      noteVisibleCount: 2,\n      noteMoreStep: 5\n    };\n  }\n};\n\n/***/ }),\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */,\n/* 571 */,\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".line-echart{min-width:500px;height:100%;margin:0 auto}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/LineEchart.vue\"],\"names\":[],\"mappings\":\"AACA,aACE,gBAAiB,AACjB,YAAa,AACb,aAAe,CAChB\",\"file\":\"LineEchart.vue\",\"sourcesContent\":[\"\\n.line-echart {\\n  min-width: 500px;\\n  height: 100%;\\n  margin: 0 auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".notes-box .notes{padding-top:20px}.notes-box .note-line{margin-bottom:20px;position:relative}.notes-box .note-line:last-of-type{overflow:hidden}.notes-box .note-time-line{float:left;width:170px;text-align:center;padding-top:35px}.notes-box .note-content{overflow:hidden}.notes-box .note-content .created-time{color:#929aa3;position:absolute;right:10px;bottom:10px}.notes-box .note-content .operations{margin-bottom:5px;text-align:right;font-size:12px;color:#c9cdd1}.notes-box .note-content .operations .icon-close{display:inline-block;-webkit-transform:scale(.8);transform:scale(.8)}.notes-box .note-content .operations .icon-batonx{margin-left:10px;cursor:pointer}.notes-box .note-content .operations .icon-batonx:hover{color:#538cc0}.notes-box .note-content .operations .icon-remind{font-size:15px;color:#c9cdd1;position:relative;display:inline-block;font-weight:700}.notes-box .note-content .operations .icon-remind .el-input{width:100%;height:100%;position:absolute;top:0;right:0;opacity:0;cursor:pointer}.notes-box .note-content .operations .icon-remind .el-input__inner{padding:none;height:0;line-height:0;border:none}.notes-box label{padding-top:15px;display:inline-block}.notes-box .el-textarea.is-disabled .el-textarea__inner{color:#595f67;border-color:#e2e5e9;cursor:auto;background:#fff}.notes-box .add-note-btn{margin:10px 0 0 10px}.notes-box .icon-circle{display:inline-block;border-radius:50%;width:14px;height:14px;background:#c5e4f1;vertical-align:-2px;margin:0 5px 0 8px;position:relative}.notes-box .icon-circle:before{width:4px;position:absolute;content:\\\"\\\";height:9em;background:#c5e4f1;top:-1em;left:5px}.notes-box .more-note{color:#595f67;cursor:pointer;margin-bottom:10px}.notes-box .more-note:hover{color:#538cc0}.notes-box .more-note .icon-down{margin-right:10px;color:#538cc0}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/NoteCard.vue\"],\"names\":[],\"mappings\":\"AACA,kBACE,gBAAkB,CACnB,AACD,sBACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,mCACI,eAAiB,CACpB,AACD,2BACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACnB,AACD,yBACE,eAAiB,CAClB,AACD,uCACI,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,WAAa,CAChB,AACD,qCACI,kBAAmB,AACnB,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAClB,AACD,iDACM,qBAAsB,AACtB,4BAA8B,AACtB,mBAAsB,CACnC,AACD,kDACM,iBAAkB,AAClB,cAAgB,CACrB,AACD,wDACQ,aAAe,CACtB,AACD,kDACM,eAAgB,AAChB,cAAe,AACf,kBAAmB,AACnB,qBAAsB,AACtB,eAAkB,CACvB,AACD,4DACQ,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,MAAS,AACT,QAAW,AACX,UAAW,AACX,cAAgB,CACvB,AACD,mEACQ,aAAc,AACd,SAAU,AACV,cAAe,AACf,WAAa,CACpB,AACD,iBACE,iBAAkB,AAClB,oBAAsB,CACvB,AACD,wDACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,eAAkB,CACnB,AACD,yBACE,oBAAsB,CACvB,AACD,wBACE,qBAAsB,AACtB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,mBAAoB,AACpB,oBAAqB,AACrB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,+BACI,UAAW,AACX,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,SAAU,AACV,QAAU,CACb,AACD,sBACE,cAAe,AACf,eAAgB,AAChB,kBAAoB,CACrB,AACD,4BACI,aAAe,CAClB,AACD,iCACI,kBAAmB,AACnB,aAAe,CAClB\",\"file\":\"NoteCard.vue\",\"sourcesContent\":[\"\\n.notes-box .notes {\\n  padding-top: 20px;\\n}\\n.notes-box .note-line {\\n  margin-bottom: 20px;\\n  position: relative;\\n}\\n.notes-box .note-line:last-of-type {\\n    overflow: hidden;\\n}\\n.notes-box .note-time-line {\\n  float: left;\\n  width: 170px;\\n  text-align: center;\\n  padding-top: 35px;\\n}\\n.notes-box .note-content {\\n  overflow: hidden;\\n}\\n.notes-box .note-content .created-time {\\n    color: #929aa3;\\n    position: absolute;\\n    right: 10px;\\n    bottom: 10px;\\n}\\n.notes-box .note-content .operations {\\n    margin-bottom: 5px;\\n    text-align: right;\\n    font-size: 12px;\\n    color: #c9cdd1;\\n}\\n.notes-box .note-content .operations .icon-close {\\n      display: inline-block;\\n      -webkit-transform: scale(0.8);\\n              transform: scale(0.8);\\n}\\n.notes-box .note-content .operations .icon-batonx {\\n      margin-left: 10px;\\n      cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-batonx:hover {\\n        color: #538cc0;\\n}\\n.notes-box .note-content .operations .icon-remind {\\n      font-size: 15px;\\n      color: #c9cdd1;\\n      position: relative;\\n      display: inline-block;\\n      font-weight: bold;\\n}\\n.notes-box .note-content .operations .icon-remind .el-input {\\n        width: 100%;\\n        height: 100%;\\n        position: absolute;\\n        top: 0px;\\n        right: 0px;\\n        opacity: 0;\\n        cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-remind .el-input__inner {\\n        padding: none;\\n        height: 0;\\n        line-height: 0;\\n        border: none;\\n}\\n.notes-box label {\\n  padding-top: 15px;\\n  display: inline-block;\\n}\\n.notes-box .el-textarea.is-disabled .el-textarea__inner {\\n  color: #595f67;\\n  border-color: #e2e5e9;\\n  cursor: auto;\\n  background: white;\\n}\\n.notes-box .add-note-btn {\\n  margin: 10px 0 0 10px;\\n}\\n.notes-box .icon-circle {\\n  display: inline-block;\\n  border-radius: 50%;\\n  width: 14px;\\n  height: 14px;\\n  background: #c5e4f1;\\n  vertical-align: -2px;\\n  margin: 0 5px 0 8px;\\n  position: relative;\\n}\\n.notes-box .icon-circle:before {\\n    width: 4px;\\n    position: absolute;\\n    content: '';\\n    height: 9em;\\n    background: #c5e4f1;\\n    top: -1em;\\n    left: 5px;\\n}\\n.notes-box .more-note {\\n  color: #595f67;\\n  cursor: pointer;\\n  margin-bottom: 10px;\\n}\\n.notes-box .more-note:hover {\\n    color: #538cc0;\\n}\\n.notes-box .more-note .icon-down {\\n    margin-right: 10px;\\n    color: #538cc0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    __webpack_require__(492);\n\n    __webpack_require__(575);\n    __webpack_require__(576);\n\n    var barLayoutGrid = __webpack_require__(595);\n    var echarts = __webpack_require__(397);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(464);\n\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(577).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var graphic = __webpack_require__(398);\n    var helper = __webpack_require__(579);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(405).prototype, __webpack_require__(578));\n\n    var BarView = __webpack_require__(397).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(439);\n    var createListFromArray = __webpack_require__(436);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(426)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var graphic = __webpack_require__(398);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(398);\n    var Symbol = __webpack_require__(475);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var echarts = __webpack_require__(397);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(582);\n    __webpack_require__(583);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(598), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(596), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(597), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(464);\n\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(436);\n    var SeriesModel = __webpack_require__(439);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(396);\n    var SymbolDraw = __webpack_require__(580);\n    var Symbol = __webpack_require__(475);\n    var lineAnimationDiff = __webpack_require__(584);\n    var graphic = __webpack_require__(398);\n    var modelUtil = __webpack_require__(400);\n    var polyHelper = __webpack_require__(585);\n    var ChartView = __webpack_require__(445);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(402);\n    var vec2 = __webpack_require__(401);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var graphic = __webpack_require__(398);\n    var AxisBuilder = __webpack_require__(459);\n    var AxisView = __webpack_require__(460);\n    var cartesianAxisHelper = __webpack_require__(461);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(464);\n\n    __webpack_require__(463);\n\n    __webpack_require__(462);\n\n\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(588);\n    var zrUtil = __webpack_require__(396);\n    var ComponentModel = __webpack_require__(408);\n    var layout = __webpack_require__(409);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var Axis = __webpack_require__(465);\n    var axisLabelInterval = __webpack_require__(594);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(396);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var Cartesian = __webpack_require__(591);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(491);\n\n    var ComponentModel = __webpack_require__(408);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var axisHelper = __webpack_require__(415);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(396);\n    var numberUtil = __webpack_require__(399);\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (dims.length === 1) {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else if (dims.length === 2) {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(572);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"37dbef11\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./LineEchart.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./LineEchart.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(573);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"3e45642e\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./NoteCard.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./NoteCard.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 604 */,\n/* 605 */,\n/* 606 */,\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(602)\n\nvar Component = __webpack_require__(253)(\n  /* script */\n  __webpack_require__(561),\n  /* template */\n  __webpack_require__(611),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(603)\n\nvar Component = __webpack_require__(253)(\n  /* script */\n  __webpack_require__(562),\n  /* template */\n  __webpack_require__(612),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 609 */,\n/* 610 */,\n/* 611 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lineEchart\",\n    staticClass: \"line-echart\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"notes-box\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 1\n    }\n  }, [_c('label', [_vm._v(\"备注：\")])]), _c('el-col', {\n    attrs: {\n      \"span\": _vm.addNoteFocus ? 21 : 23\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"rows\": 2,\n      \"placeholder\": \"点击添加备注\"\n    },\n    on: {\n      \"focus\": function($event) {\n        _vm.addNoteFocus = true\n      },\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.addNote($event)\n      }\n    },\n    model: {\n      value: (_vm.newNote),\n      callback: function($$v) {\n        _vm.newNote = $$v\n      },\n      expression: \"newNote\"\n    }\n  })], 1), (_vm.addNoteFocus) ? _c('el-col', {\n    attrs: {\n      \"span\": 2\n    }\n  }, [_c('el-button', {\n    staticClass: \"add-note-btn\",\n    attrs: {\n      \"size\": \"small\",\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.addNote\n    }\n  }, [_vm._v(\"添加\")])], 1) : _vm._e()], 1), _c('div', {\n    ref: \"notes\",\n    staticClass: \"notes\"\n  }, _vm._l((_vm.showNotes), function(note) {\n    return _c('div', {\n      staticClass: \"note-line\"\n    }, [_c('div', {\n      staticClass: \"note-time-line\"\n    }, [_vm._v(_vm._s(_vm._f(\"moment\")(note.createdAt, 'YYYY-MM-DD'))), _c('i', {\n      staticClass: \"icon-circle\"\n    }), _vm._v(_vm._s(_vm._f(\"moment\")(note.createdAt, 'HH:mm')))]), _c('div', {\n      staticClass: \"note-content\"\n    }, [_c('div', {\n      staticClass: \"operations\"\n    }, [_c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-edit\",\n      on: {\n        \"click\": function($event) {\n          _vm.editNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.editActive),\n        expression: \"note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-success\",\n      on: {\n        \"click\": function($event) {\n          _vm.saveNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.remindActive),\n        expression: \"note.remindActive\"\n      }],\n      staticClass: \"icon-batonx icon-remind\"\n    }, [_c('el-date-picker', {\n      attrs: {\n        \"type\": \"datetime\"\n      }\n    })], 1), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.editActive),\n        expression: \"note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-close\",\n      on: {\n        \"click\": function($event) {\n          _vm.resetNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-close\",\n      on: {\n        \"click\": function($event) {\n          _vm.deleteNote(note)\n        }\n      }\n    })]), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"created-time\"\n    }, [_vm._v(\"创建时间 \" + _vm._s(_vm._f(\"moment\")(note.create_at, 'YYYY-MM-DD HH:mm')))]), _c('el-input', {\n      attrs: {\n        \"type\": \"textarea\",\n        \"disabled\": !note.editActive,\n        \"rows\": 3,\n        \"id\": 'note_' + note.id\n      },\n      model: {\n        value: (note.textEdit),\n        callback: function($$v) {\n          note.textEdit = $$v\n        },\n        expression: \"note.textEdit\"\n      }\n    })], 1)])\n  })), _c('div', {\n    staticClass: \"more-note text-center\",\n    on: {\n      \"click\": _vm.moreNote\n    }\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.noteVisibleCount < _vm.notes.length),\n      expression: \"noteVisibleCount < notes.length\"\n    }]\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-down\"\n  }), _vm._v(\"显示更多备注信息\")]), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.noteVisibleCount >= _vm.notes.length),\n      expression: \"noteVisibleCount >= notes.length\"\n    }]\n  }, [_vm._v(\"没有更多了\")])])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */,\n/* 634 */,\n/* 635 */,\n/* 636 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css__ = __webpack_require__(412);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_element_ui_lib_theme_default_message_box_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box__ = __webpack_require__(411);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css__ = __webpack_require__(255);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_element_ui_lib_theme_default_message_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_element_ui_lib_theme_default_base_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue__ = __webpack_require__(607);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue__ = __webpack_require__(608);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue__ = __webpack_require__(516);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue__ = __webpack_require__(515);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__common_mixin_js__ = __webpack_require__(467);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_lodash__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_lodash__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__common_crossers_js__ = __webpack_require__(425);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  mixins: [__WEBPACK_IMPORTED_MODULE_9__common_mixin_js__[\"a\" /* default */]],\n  components: {\n    KtLineChart: __WEBPACK_IMPORTED_MODULE_5__components_LineEchart_vue___default.a,\n    KtNoteCard: __WEBPACK_IMPORTED_MODULE_6__components_NoteCard_vue___default.a,\n    KtProductDialog: __WEBPACK_IMPORTED_MODULE_7__components_ProductDialog_vue___default.a,\n    KtAssetDialog: __WEBPACK_IMPORTED_MODULE_8__components_AssetDialog_vue___default.a\n  },\n  mounted: function mounted() {\n    this.demo.name = this.filter.productName = this.demo.shortName = this.$route.params.id;\n    this.demo.type = +this.$route.query.type || this.demo.type;\n    __WEBPACK_IMPORTED_MODULE_11__common_crossers_js__[\"a\" /* updateCrumbs */].$emit('update-crumbs', [{\n      id: 'assetName',\n      name: this.demo.name\n    }]);\n  },\n\n  methods: {\n    goRegPro: function goRegPro() {\n      this.$router.push({\n        name: 'RegisterProductList'\n      });\n    },\n    goClient: function goClient() {\n      this.$router.push({\n        name: 'ClientList'\n      });\n    },\n    extractDialog: function extractDialog() {\n      this.extractVisible = true;\n    },\n    historyDialog: function historyDialog() {\n      this.historyVisible = true;\n    },\n    productDialog: function productDialog(data, boole, index) {\n      var newData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10_lodash__[\"merge\"])(this.filter, data);\n      console.log(newData);\n      this.$refs.productDialog.showDialog(newData, boole, index);\n    },\n    assetDialog: function assetDialog(data, boole, index) {\n      var newData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10_lodash__[\"merge\"])(this.filter, data);\n      this.$refs.assetDialog.showDialog(newData, boole, index);\n    },\n    editAsset: function editAsset() {\n      this.$router.push({\n        name: 'ProductEdit',\n        params: {\n          id: this.demo.name\n        }\n      });\n    },\n    deleteAsset: function deleteAsset() {\n      __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.info('测试账号不支持此功能！');\n    },\n    addNote: function addNote() {\n      if (this.demo.notes.length >= 50) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.warn('备注个数不得超过50个');\n        return;\n      }\n\n      if (!this.demo.newNote) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.error('备注不能为空!');\n        return;\n      }\n\n      this.demo.notes.unshift({\n        id: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10_lodash__[\"uniqueId\"])('new_note_'),\n        editActive: false,\n        text: this.demo.newNote,\n        createdAt: new Date()\n      });\n\n      this.demo.newNote = '';\n      this.addNoteFocus = false;\n    },\n    saveNote: function saveNote(note) {\n      note.text = note.textEdit;\n      note.editActive = false;\n    },\n    moreNote: function moreNote() {\n      if (this.noteVisibleCount >= this.demo.notes.length) {\n        __WEBPACK_IMPORTED_MODULE_4_element_ui_lib_message___default.a.info('没有更多了');\n        return;\n      }\n      this.noteVisibleCount += this.noteMoreStep;\n    },\n    editNote: function editNote(note) {\n      var _this = this;\n\n      note.editActive = true;\n      this.$nextTick(function () {\n        var textarea = _this.$refs.notes.querySelector('#note_' + note.id + ' textarea');\n        textarea.focus();\n      });\n    },\n    resetNote: function resetNote(note) {\n      note.textEdit = note.text;\n      note.editActive = false;\n    },\n    deleteNote: function deleteNote(note) {\n      var _this2 = this;\n\n      __WEBPACK_IMPORTED_MODULE_1_element_ui_lib_message_box___default.a.confirm('此操作将永久删除改批注, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this2.demo.notes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10_lodash__[\"remove\"])(_this2.demo.notes, function (v) {\n          return note.id !== v.id;\n        });\n      });\n    }\n  },\n\n  computed: {\n    showNotes: function showNotes() {\n      return this.demo.notes.slice(0, this.noteVisibleCount);\n    }\n  },\n\n  data: function data() {\n    return {\n      filter: {\n        productName: ''\n      },\n      extractVisible: false,\n      historyVisible: false,\n      addNoteFocus: false,\n      noteVisibleCount: 2,\n      noteMoreStep: 5,\n      demo: {\n        name: '天津旭达资产管理项目',\n        shortName: '旭达资管',\n        type: 0,\n        newNote: '',\n        rateChartOpt: {},\n        notes: [{\n          id: 1,\n          editActive: false,\n          remindActive: true,\n          textEdit: '2017年02月28日提息。',\n          text: '2017年02月28日提息。',\n          createdAt: new Date()\n        }, {\n          id: 2,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款已到账。',\n          text: '今日申购款已到账。',\n          createdAt: new Date()\n        }, {\n          id: 3,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款未到账，预计款项明日到账。',\n          text: '今日申购款未到账，预计款项明日到账。',\n          createdAt: new Date()\n        }, {\n          id: 4,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款未到账，预计款项两日后到账。',\n          text: '今日申购款未到账，预计款项两日后到账。',\n          createdAt: new Date()\n        }],\n        attachments: [{\n          name: '资产合同'\n        }, {\n          name: '资产说明书'\n        }],\n        products: [{\n          name: '甜橙起航理财计划D2',\n          count: 1000,\n          amount: 4715000,\n          ratio: 0.14,\n          todayEarning: 30000,\n          totalEarning: 150000\n        }, {\n          name: '甜橙起航理财计划C2',\n          count: 300,\n          amount: 3905000,\n          ratio: 0.12,\n          todayEarning: 28000,\n          totalEarning: 168000\n        }],\n        historyDeals: [{\n          dealAt: new Date(),\n          name: '甜橙起航理财计划D2',\n          opType: '卖出',\n          amount: '100020'\n        }, {\n          dealAt: new Date(),\n          name: '甜橙起航理财计划C2',\n          opType: '买入',\n          amount: '180623'\n        }]\n      },\n      costLists: [{\n        charge: '中国银行',\n        costtype: '托管费',\n        profitType: '固定',\n        billingMode: '固定费用',\n        rate: '0.2%',\n        billingDates: '360',\n        costbase: '产品规模',\n        payfrequency: '每月',\n        startDate: '2016-8-8',\n        already: ' ￥ 546,28.93 '\n      }, {\n        charge: '民生银行',\n        costtype: ' 投资顾问费 ',\n        profitType: '浮动',\n        billingMode: ' 超额费用',\n        rate: '无',\n        billingDates: '无',\n        costbase: '无',\n        payfrequency: '每季',\n        startDate: '2016-8-8',\n        already: '￥ 4,324,324.33 '\n      }],\n      currentLists: [{\n        charge: '招商银行',\n        costtype: '托管费',\n        profitType: '浮动',\n        billingMode: '固定费用',\n        rate: '0.2%',\n        billingDates: '360',\n        costbase: '产品规模',\n        payfrequency: '每月',\n        startDate: ' 2016-8-8    12:00:00 AM  ',\n        already: '  35462893 '\n      }, {\n        charge: '京东金融',\n        costtype: ' 投资顾问费 ',\n        profitType: '固定',\n        billingMode: ' 超额费用',\n        rate: '无',\n        billingDates: '无',\n        costbase: '无',\n        payfrequency: '每季',\n        startDate: '2016-8-8    14:00:00 PM ',\n        already: '432432433'\n      }],\n      accountLists: [{\n        accountType: '募集账户',\n        accountName: '北京和丰永讯金融信息服务有限公司',\n        account: '1109 2037 8610 201',\n        openAccount: '招商银行股份有限公司北京亚运村支行'\n      }, {\n        accountType: '产品账户',\n        accountName: '广东金融高新区股权交易中心 ',\n        account: '2232 1937 8710 871',\n        openAccount: '招商银行股份有限公司广州番禹区支行'\n      }],\n      historyDatas: [{\n        time: '2017年01月10日',\n        assetsName: '创元开发建设投资企业融资项目',\n        cztype: '买入',\n        change: '24296355.00'\n      }, {\n        time: '2017年01月10日',\n        assetsName: '创元开发建设投资企业融资项目',\n        cztype: '买入',\n        change: '-24296355.00'\n      }],\n      extractDatas: [{\n        time: '2017年1月18日',\n        charge: '招商银行',\n        extract: '￥ 124,324.33',\n        wait: '￥ 102,894.22'\n      }, {\n        time: '2017年01月20日',\n        charge: '京东金融',\n        extract: '￥ 117,346.66 ',\n        wait: '￥ 185,974.45'\n      }],\n      producttype1: [{\n        assetType: '资金',\n        state: ['已更新'],\n        company: [],\n        accounts: [200184258],\n        Surplus: '',\n        boole: true,\n        stated: ['审批中']\n      }, {\n        assetType: '资产',\n        state: ['申购', '卖出'],\n        company: ['广发货币基金', '15北京城投债'],\n        accounts: [245742, 81084134],\n        Surplus: '',\n        stated: ['已执行', '未执行']\n      }],\n      producttype2: [{\n        assetType: '资金',\n        state: ['申购', '赎回'],\n        company: [],\n        accounts: [200184258, 16200234],\n        Surplus: 183984024,\n        boole: true,\n        stated: ['审批中']\n      }, {\n        assetType: '资产',\n        state: ['申购', '卖出'],\n        company: ['鹏华添利宝货币基金', '小定宝-财富-海航商业控股项目'],\n        accounts: [245742, 81084134],\n        Surplus: '',\n        stated: ['已执行', '未执行']\n      }]\n    };\n  }\n};\n\n/***/ }),\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */,\n/* 649 */,\n/* 650 */,\n/* 651 */,\n/* 652 */,\n/* 653 */,\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */,\n/* 658 */,\n/* 659 */,\n/* 660 */,\n/* 661 */,\n/* 662 */,\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(374)();\n// imports\n\n\n// module\nexports.push([module.i, \".asset-detail .el-upload-list__item{float:left;width:auto;margin-top:10px;font-size:13px}.asset-detail .el-upload-list__item:first-child{margin-top:10px}.asset-detail .el-upload-list{overflow:hidden;margin-bottom:-15px}.asset-detail .el-textarea textarea,.attachments-box{font-size:13px}.attachments-box .el-upload-list__item{float:left;width:auto}.attachments-box h3{font-size:13px}.attachments-box h3 small{color:#929aa3}.notes-box .notes{padding-top:20px}.notes-box .note-line{margin-bottom:20px;position:relative}.notes-box .note-line:last-of-type{overflow:hidden}.notes-box .note-time-line{float:left;width:170px;text-align:center;padding-top:35px}.notes-box .note-content{overflow:hidden}.notes-box .note-content .created-time{color:#929aa3;position:absolute;right:10px;bottom:10px}.notes-box .note-content .operations{margin-bottom:5px;text-align:right;font-size:12px;color:#c9cdd1}.notes-box .note-content .operations .icon-close{display:inline-block;-webkit-transform:scale(.8);transform:scale(.8)}.notes-box .note-content .operations .icon-batonx{margin-left:10px;cursor:pointer}.notes-box .note-content .operations .icon-batonx:hover{color:#538cc0}.notes-box label{padding-top:15px;display:inline-block}.notes-box .el-textarea.is-disabled .el-textarea__inner{color:#595f67;border-color:#e2e5e9;cursor:auto;background:#fff}.notes-box .add-note-btn{margin:10px 0 0 10px}.notes-box .icon-circle{display:inline-block;border-radius:50%;width:14px;height:14px;background:#c5e4f1;vertical-align:-2px;margin:0 5px 0 8px;position:relative}.notes-box .icon-circle:before{width:4px;position:absolute;content:\\\"\\\";height:9em;background:#c5e4f1;top:-1em;left:5px}.notes-box .more-note{color:#595f67;cursor:pointer;margin-bottom:10px}.notes-box .more-note:hover{color:#538cc0}.notes-box .more-note .icon-down{margin-right:10px;color:#538cc0}.upload-attachment{display:inline;margin-left:10px}.asset-panel{border-radius:4px}.asset-panel em{color:#de3569}.asset-panel-dashboard .el-row{border-bottom:1px solid #e7eaed}.asset-panel-dashboard .el-row:last-child{border-bottom:none}.asset-panel-dashboard .panel-cell{padding:35px}.asset-panel-products .header{background:#e2f1f8;padding-left:15px;height:40px;line-height:40px;font-size:13px;color:#364f77}.asset-panel-products .header .buttons{float:right}.asset-panel-products .header .buttons button{font-size:13px;margin-right:10px}.asset-panel-products table{width:100%}.asset-panel-products table td,.asset-panel-products table th{color:#929aa3;font-weight:400;text-align:left;padding:15px;border-bottom:1px solid #e7eaed}.asset-panel-products table tbody tr:last-child td,.asset-panel-products table tbody tr:last-child th{border-bottom:0}.td-button{padding:5px 55px}.td-button .el-button{border:none}.td-button .el-button,.td-button .el-button:focus,.td-button .el-button:hover{background:#538cc0;color:#fff}.rate-chart{padding-top:20px;border-radius:4px;width:100%;height:350px}.todo table{width:100%}.todo table .first-tr{border-bottom:1px solid #f3f6f8}.todo table td,.todo table th{text-align:center}.todo table td{padding:25px 0}.todo table td.first-td-amount{padding-left:15px;color:#f55923;font-weight:700}.todo table td.first-td-asset{padding-left:15px;color:#1f98d9;font-weight:700}.todo table td .amount-color{color:#de3569}.todo table td .gColor{color:#82c5aa}.todo table td .y-operation{padding:2px 0}.todo table td .y-operation a{display:inline;padding:2px 5px;background:#538cc0;color:#fff;border-radius:3px}.todo table td .n-operation{padding:2px 0}.todo table td .n-operation a{display:inline;padding:2px 5px;background:#f3f6f8;border-radius:3px}.todo table td .yzx{color:#60b896}.todo table td .wzx{color:#de3569}.crux-date{padding:15px;width:950px;margin:0 auto}.crux-date img{width:100%}.cruxamount dl{width:200px;margin:0 auto}.cruxamount dl dd,.cruxamount dl dt{padding:5px}.cruxamount dl dt{font-size:18px}.cruxamount dl dt .amount-f{color:#d3d4d6}.cruxamount dl dt .amount-c{color:#c0c9d4}.cruxamount-mes dl{width:300px;margin:0 auto}.cruxamount-mes dl dd{padding:5px}.cruxamount-mes dl dd .subsist-f{color:#c1c3c6}.cruxamount-mes dl dd .subsist-c{margin-left:5px;color:#de3569}.cruxamount-mes dl dt{margin-left:30px;padding:5px}.cruxamount-mes dl dt .part{float:left;position:relative;left:10px;height:50px;width:4px;background:#c5e4f1}.cruxamount-mes dl dt .part:before{top:12px}.cruxamount-mes dl dt .part:after,.cruxamount-mes dl dt .part:before{content:\\\"\\\";position:absolute;width:25px;height:4px;background:#c5e4f1}.cruxamount-mes dl dt .part:after{bottom:0;left:0}.cruxamount-mes dl dt .principal-interest{float:left;margin-left:40px}.cruxamount-mes dl dt .principal-interest .interest,.cruxamount-mes dl dt .principal-interest .principal{padding:5px 0}.history-record{float:right}.history-record a{color:#538cc0;font-size:12px;font-weight:400}.asset-list{padding:15px}.asset-list table{table-layout:fixed;width:100%}.asset-list table th{text-align:left;font-weight:400;color:#9ba2aa}.asset-list table td{padding:10px 0}.asset-list-current table{table-layout:fixed;width:100%}.asset-list-current table .first-tr{border-top:1px solid #e7eaed}.asset-list-current table .two-tr{border-bottom:1px solid #e7eaed}.asset-list-current table th{text-align:left;font-weight:400;color:#9ba2aa;padding:10px 0}.asset-list-current table th:not(:first-child){border-bottom:1px solid #e7eaed}.asset-list-current table td{padding:10px 0}.asset-list-current table td.first-td{padding-left:20px;font-size:13px;font-weight:700}.extract-record{float:right}.extract-record a{color:#538cc0;font-size:12px;font-weight:400}.cost-list{padding:15px}.cost-list table{table-layout:fixed;width:100%}.cost-list table th{text-align:left;font-weight:400;color:#9ba2aa}.cost-list table td{padding:10px 0}.cost-list table td .fixed{background:#acccd9}.cost-list table td .fixed,.cost-list table td .float{padding:0 3px;color:#fff;border-radius:2px;margin-left:3px}.cost-list table td .float{background:#eea7b9}.account-list .account-table{padding:40px 30px}.account-list .account-table .account-table-n{border:1px solid #e7eaed;border-radius:4px;padding:15px}.account-list .account-table .account-table-n .account-type{color:#595f67;font-size:13px;font-weight:700}.account-list .account-table .account-table-n .account-c{color:#538cc0}.bpm{padding:15px}.bpm dl{width:260px;margin:0 auto}.bpm dl dd{color:#abb1b8}.bpm dl dt{padding:10px 0;color:#595f67;font-size:14px}.positive{color:#de3569}.negative{color:#16a474}.amount-color{color:#de3569}.icon-brackets{font-size:25px;color:#d8dadd}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/views/product_management/ProductDetail.vue\"],\"names\":[],\"mappings\":\"AACA,oCACE,WAAY,AACZ,WAAY,AACZ,gBAAiB,AACjB,cAAgB,CACjB,AACD,gDACI,eAAiB,CACpB,AACD,8BACE,gBAAiB,AACjB,mBAAqB,CACtB,AAID,qDACE,cAAgB,CACjB,AACD,uCACI,WAAY,AACZ,UAAY,CACf,AACD,oBACI,cAAgB,CACnB,AACD,0BACM,aAAe,CACpB,AACD,kBACE,gBAAkB,CACnB,AACD,sBACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,mCACI,eAAiB,CACpB,AACD,2BACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACnB,AACD,yBACE,eAAiB,CAClB,AACD,uCACI,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,WAAa,CAChB,AACD,qCACI,kBAAmB,AACnB,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAClB,AACD,iDACM,qBAAsB,AACtB,4BAA8B,AACtB,mBAAsB,CACnC,AACD,kDACM,iBAAkB,AAClB,cAAgB,CACrB,AACD,wDACQ,aAAe,CACtB,AACD,iBACE,iBAAkB,AAClB,oBAAsB,CACvB,AACD,wDACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,eAAkB,CACnB,AACD,yBACE,oBAAsB,CACvB,AACD,wBACE,qBAAsB,AACtB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,mBAAoB,AACpB,oBAAqB,AACrB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,+BACI,UAAW,AACX,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,SAAU,AACV,QAAU,CACb,AACD,sBACE,cAAe,AACf,eAAgB,AAChB,kBAAoB,CACrB,AACD,4BACI,aAAe,CAClB,AACD,iCACI,kBAAmB,AACnB,aAAe,CAClB,AACD,mBACE,eAAgB,AAChB,gBAAkB,CACnB,AACD,aACE,iBAAmB,CACpB,AACD,gBACI,aAAe,CAClB,AACD,+BACE,+BAAiC,CAClC,AACD,0CACI,kBAAoB,CACvB,AACD,mCACE,YAAc,CACf,AACD,8BACE,mBAAoB,AACpB,kBAAmB,AACnB,YAAa,AACb,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAChB,AACD,uCACI,WAAa,CAChB,AACD,8CACM,eAAgB,AAChB,iBAAmB,CACxB,AACD,4BACE,UAAY,CACb,AACD,8DAEI,cAAe,AACf,gBAAoB,AACpB,gBAAiB,AACjB,aAAc,AACd,+BAAiC,CACpC,AACD,sGAEI,eAAiB,CACpB,AACD,WACE,gBAAkB,CACnB,AACD,sBACI,WAAa,CAGhB,AACD,8EAHI,mBAAoB,AACpB,UAAY,CAKf,AACD,YACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,YAAc,CACf,AACD,YACE,UAAY,CACb,AACD,sBACI,+BAAiC,CACpC,AACD,8BACI,iBAAmB,CACtB,AACD,eACI,cAAgB,CACnB,AACD,+BACM,kBAAmB,AACnB,cAAe,AACf,eAAkB,CACvB,AACD,8BACM,kBAAmB,AACnB,cAAe,AACf,eAAkB,CACvB,AACD,6BACM,aAAe,CACpB,AACD,uBACM,aAAe,CACpB,AACD,4BACM,aAAe,CACpB,AACD,8BACQ,eAAgB,AAChB,gBAAiB,AACjB,mBAAoB,AACpB,WAAY,AACZ,iBAAmB,CAC1B,AACD,4BACM,aAAe,CACpB,AACD,8BACQ,eAAgB,AAChB,gBAAiB,AACjB,mBAAoB,AACpB,iBAAmB,CAC1B,AACD,oBACM,aAAe,CACpB,AACD,oBACM,aAAe,CACpB,AACD,WACE,aAAc,AACd,YAAa,AACb,aAAe,CAChB,AACD,eACI,UAAY,CACf,AACD,eACE,YAAa,AACb,aAAe,CAChB,AACD,oCAEI,WAAa,CAChB,AACD,kBACI,cAAgB,CACnB,AACD,4BACM,aAAe,CACpB,AACD,4BACM,aAAe,CACpB,AACD,mBACE,YAAa,AACb,aAAe,CAChB,AACD,sBACI,WAAa,CAChB,AACD,iCACM,aAAe,CACpB,AACD,iCACM,gBAAiB,AACjB,aAAe,CACpB,AACD,sBACI,iBAAkB,AAClB,WAAa,CAChB,AACD,4BACM,WAAY,AACZ,kBAAmB,AACnB,UAAW,AACX,YAAa,AACb,UAAW,AACX,kBAAoB,CACzB,AACD,mCAMQ,QAAU,CACjB,AACD,qEAPQ,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,kBAAoB,CAW3B,AARD,kCAMQ,SAAY,AACZ,MAAU,CACjB,AACD,0CACM,WAAY,AACZ,gBAAkB,CACvB,AAID,yGACQ,aAAe,CACtB,AACD,gBACE,WAAa,CACd,AACD,kBACI,cAAe,AACf,eAAgB,AAChB,eAAoB,CACvB,AACD,YACE,YAAc,CACf,AACD,kBACI,mBAAoB,AACpB,UAAY,CACf,AACD,qBACM,gBAAiB,AACjB,gBAAoB,AACpB,aAAe,CACpB,AACD,qBACM,cAAgB,CACrB,AACD,0BACE,mBAAoB,AACpB,UAAY,CACb,AACD,oCACI,4BAA8B,CACjC,AACD,kCACI,+BAAiC,CACpC,AACD,6BACI,gBAAiB,AACjB,gBAAoB,AACpB,cAAe,AACf,cAAgB,CACnB,AACD,+CACM,+BAAiC,CACtC,AACD,6BACI,cAAgB,CACnB,AACD,sCACM,kBAAmB,AACnB,eAAgB,AAChB,eAAkB,CACvB,AACD,gBACE,WAAa,CACd,AACD,kBACI,cAAe,AACf,eAAgB,AAChB,eAAoB,CACvB,AACD,WACE,YAAc,CACf,AACD,iBACI,mBAAoB,AACpB,UAAY,CACf,AACD,oBACM,gBAAiB,AACjB,gBAAoB,AACpB,aAAe,CACpB,AACD,oBACM,cAAgB,CACrB,AACD,2BAGQ,kBAAoB,CAG3B,AACD,sDANQ,cAAe,AACf,WAAY,AAEZ,kBAAmB,AACnB,eAAiB,CAQxB,AAND,2BAGQ,kBAAoB,CAG3B,AACD,6BACE,iBAAmB,CACpB,AACD,8CACI,yBAA0B,AAC1B,kBAAmB,AACnB,YAAc,CACjB,AACD,4DACM,cAAe,AACf,eAAgB,AAChB,eAAkB,CACvB,AACD,yDACM,aAAe,CACpB,AACD,KACE,YAAc,CACf,AACD,QACI,YAAa,AACb,aAAe,CAClB,AACD,WACM,aAAe,CACpB,AACD,WACM,eAAgB,AAChB,cAAe,AACf,cAAgB,CACrB,AACD,UACE,aAAe,CAChB,AACD,UACE,aAAe,CAChB,AACD,cACE,aAAe,CAChB,AACD,eACE,eAAgB,AAChB,aAAe,CAChB\",\"file\":\"ProductDetail.vue\",\"sourcesContent\":[\"\\n.asset-detail .el-upload-list__item {\\n  float: left;\\n  width: auto;\\n  margin-top: 10px;\\n  font-size: 13px;\\n}\\n.asset-detail .el-upload-list__item:first-child {\\n    margin-top: 10px;\\n}\\n.asset-detail .el-upload-list {\\n  overflow: hidden;\\n  margin-bottom: -15px;\\n}\\n.asset-detail .el-textarea textarea {\\n  font-size: 13px;\\n}\\n.attachments-box {\\n  font-size: 13px;\\n}\\n.attachments-box .el-upload-list__item {\\n    float: left;\\n    width: auto;\\n}\\n.attachments-box h3 {\\n    font-size: 13px;\\n}\\n.attachments-box h3 small {\\n      color: #929aa3;\\n}\\n.notes-box .notes {\\n  padding-top: 20px;\\n}\\n.notes-box .note-line {\\n  margin-bottom: 20px;\\n  position: relative;\\n}\\n.notes-box .note-line:last-of-type {\\n    overflow: hidden;\\n}\\n.notes-box .note-time-line {\\n  float: left;\\n  width: 170px;\\n  text-align: center;\\n  padding-top: 35px;\\n}\\n.notes-box .note-content {\\n  overflow: hidden;\\n}\\n.notes-box .note-content .created-time {\\n    color: #929aa3;\\n    position: absolute;\\n    right: 10px;\\n    bottom: 10px;\\n}\\n.notes-box .note-content .operations {\\n    margin-bottom: 5px;\\n    text-align: right;\\n    font-size: 12px;\\n    color: #c9cdd1;\\n}\\n.notes-box .note-content .operations .icon-close {\\n      display: inline-block;\\n      -webkit-transform: scale(0.8);\\n              transform: scale(0.8);\\n}\\n.notes-box .note-content .operations .icon-batonx {\\n      margin-left: 10px;\\n      cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-batonx:hover {\\n        color: #538cc0;\\n}\\n.notes-box label {\\n  padding-top: 15px;\\n  display: inline-block;\\n}\\n.notes-box .el-textarea.is-disabled .el-textarea__inner {\\n  color: #595f67;\\n  border-color: #e2e5e9;\\n  cursor: auto;\\n  background: white;\\n}\\n.notes-box .add-note-btn {\\n  margin: 10px 0 0 10px;\\n}\\n.notes-box .icon-circle {\\n  display: inline-block;\\n  border-radius: 50%;\\n  width: 14px;\\n  height: 14px;\\n  background: #c5e4f1;\\n  vertical-align: -2px;\\n  margin: 0 5px 0 8px;\\n  position: relative;\\n}\\n.notes-box .icon-circle:before {\\n    width: 4px;\\n    position: absolute;\\n    content: '';\\n    height: 9em;\\n    background: #c5e4f1;\\n    top: -1em;\\n    left: 5px;\\n}\\n.notes-box .more-note {\\n  color: #595f67;\\n  cursor: pointer;\\n  margin-bottom: 10px;\\n}\\n.notes-box .more-note:hover {\\n    color: #538cc0;\\n}\\n.notes-box .more-note .icon-down {\\n    margin-right: 10px;\\n    color: #538cc0;\\n}\\n.upload-attachment {\\n  display: inline;\\n  margin-left: 10px;\\n}\\n.asset-panel {\\n  border-radius: 4px;\\n}\\n.asset-panel em {\\n    color: #de3569;\\n}\\n.asset-panel-dashboard .el-row {\\n  border-bottom: 1px solid #e7eaed;\\n}\\n.asset-panel-dashboard .el-row:last-child {\\n    border-bottom: none;\\n}\\n.asset-panel-dashboard .panel-cell {\\n  padding: 35px;\\n}\\n.asset-panel-products .header {\\n  background: #e2f1f8;\\n  padding-left: 15px;\\n  height: 40px;\\n  line-height: 40px;\\n  font-size: 13px;\\n  color: #364f77;\\n}\\n.asset-panel-products .header .buttons {\\n    float: right;\\n}\\n.asset-panel-products .header .buttons button {\\n      font-size: 13px;\\n      margin-right: 10px;\\n}\\n.asset-panel-products table {\\n  width: 100%;\\n}\\n.asset-panel-products table th,\\n  .asset-panel-products table td {\\n    color: #929aa3;\\n    font-weight: normal;\\n    text-align: left;\\n    padding: 15px;\\n    border-bottom: 1px solid #e7eaed;\\n}\\n.asset-panel-products table tbody tr:last-child th,\\n  .asset-panel-products table tbody tr:last-child td {\\n    border-bottom: 0;\\n}\\n.td-button {\\n  padding: 5px 55px;\\n}\\n.td-button .el-button {\\n    border: none;\\n    background: #538cc0;\\n    color: #fff;\\n}\\n.td-button .el-button:hover, .td-button .el-button:focus {\\n      color: #fff;\\n      background: #538cc0;\\n}\\n.rate-chart {\\n  padding-top: 20px;\\n  border-radius: 4px;\\n  width: 100%;\\n  height: 350px;\\n}\\n.todo table {\\n  width: 100%;\\n}\\n.todo table .first-tr {\\n    border-bottom: 1px solid #f3f6f8;\\n}\\n.todo table th, .todo table td {\\n    text-align: center;\\n}\\n.todo table td {\\n    padding: 25px 0;\\n}\\n.todo table td.first-td-amount {\\n      padding-left: 15px;\\n      color: #f55923;\\n      font-weight: bold;\\n}\\n.todo table td.first-td-asset {\\n      padding-left: 15px;\\n      color: #1f98d9;\\n      font-weight: bold;\\n}\\n.todo table td .amount-color {\\n      color: #de3569;\\n}\\n.todo table td .gColor {\\n      color: #82c5aa;\\n}\\n.todo table td .y-operation {\\n      padding: 2px 0;\\n}\\n.todo table td .y-operation a {\\n        display: inline;\\n        padding: 2px 5px;\\n        background: #538cc0;\\n        color: #fff;\\n        border-radius: 3px;\\n}\\n.todo table td .n-operation {\\n      padding: 2px 0;\\n}\\n.todo table td .n-operation a {\\n        display: inline;\\n        padding: 2px 5px;\\n        background: #f3f6f8;\\n        border-radius: 3px;\\n}\\n.todo table td .yzx {\\n      color: #60b896;\\n}\\n.todo table td .wzx {\\n      color: #de3569;\\n}\\n.crux-date {\\n  padding: 15px;\\n  width: 950px;\\n  margin: 0 auto;\\n}\\n.crux-date img {\\n    width: 100%;\\n}\\n.cruxamount dl {\\n  width: 200px;\\n  margin: 0 auto;\\n}\\n.cruxamount dl dd,\\n  .cruxamount dl dt {\\n    padding: 5px;\\n}\\n.cruxamount dl dt {\\n    font-size: 18px;\\n}\\n.cruxamount dl dt .amount-f {\\n      color: #d3d4d6;\\n}\\n.cruxamount dl dt .amount-c {\\n      color: #c0c9d4;\\n}\\n.cruxamount-mes dl {\\n  width: 300px;\\n  margin: 0 auto;\\n}\\n.cruxamount-mes dl dd {\\n    padding: 5px;\\n}\\n.cruxamount-mes dl dd .subsist-f {\\n      color: #c1c3c6;\\n}\\n.cruxamount-mes dl dd .subsist-c {\\n      margin-left: 5px;\\n      color: #de3569;\\n}\\n.cruxamount-mes dl dt {\\n    margin-left: 30px;\\n    padding: 5px;\\n}\\n.cruxamount-mes dl dt .part {\\n      float: left;\\n      position: relative;\\n      left: 10px;\\n      height: 50px;\\n      width: 4px;\\n      background: #c5e4f1;\\n}\\n.cruxamount-mes dl dt .part:before {\\n        content: '';\\n        position: absolute;\\n        width: 25px;\\n        height: 4px;\\n        background: #c5e4f1;\\n        top: 12px;\\n}\\n.cruxamount-mes dl dt .part:after {\\n        content: '';\\n        position: absolute;\\n        width: 25px;\\n        height: 4px;\\n        background: #c5e4f1;\\n        bottom: 0px;\\n        left: 0px;\\n}\\n.cruxamount-mes dl dt .principal-interest {\\n      float: left;\\n      margin-left: 40px;\\n}\\n.cruxamount-mes dl dt .principal-interest .principal {\\n        padding: 5px 0;\\n}\\n.cruxamount-mes dl dt .principal-interest .interest {\\n        padding: 5px 0;\\n}\\n.history-record {\\n  float: right;\\n}\\n.history-record a {\\n    color: #538cc0;\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\n.asset-list {\\n  padding: 15px;\\n}\\n.asset-list table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.asset-list table th {\\n      text-align: left;\\n      font-weight: normal;\\n      color: #9ba2aa;\\n}\\n.asset-list table td {\\n      padding: 10px 0;\\n}\\n.asset-list-current table {\\n  table-layout: fixed;\\n  width: 100%;\\n}\\n.asset-list-current table .first-tr {\\n    border-top: 1px solid #e7eaed;\\n}\\n.asset-list-current table .two-tr {\\n    border-bottom: 1px solid #e7eaed;\\n}\\n.asset-list-current table th {\\n    text-align: left;\\n    font-weight: normal;\\n    color: #9ba2aa;\\n    padding: 10px 0;\\n}\\n.asset-list-current table th:not(:first-child) {\\n      border-bottom: 1px solid #e7eaed;\\n}\\n.asset-list-current table td {\\n    padding: 10px 0;\\n}\\n.asset-list-current table td.first-td {\\n      padding-left: 20px;\\n      font-size: 13px;\\n      font-weight: bold;\\n}\\n.extract-record {\\n  float: right;\\n}\\n.extract-record a {\\n    color: #538cc0;\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\n.cost-list {\\n  padding: 15px;\\n}\\n.cost-list table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.cost-list table th {\\n      text-align: left;\\n      font-weight: normal;\\n      color: #9ba2aa;\\n}\\n.cost-list table td {\\n      padding: 10px 0;\\n}\\n.cost-list table td .fixed {\\n        padding: 0 3px;\\n        color: #fff;\\n        background: #acccd9;\\n        border-radius: 2px;\\n        margin-left: 3px;\\n}\\n.cost-list table td .float {\\n        padding: 0 3px;\\n        color: #fff;\\n        background: #eea7b9;\\n        border-radius: 2px;\\n        margin-left: 3px;\\n}\\n.account-list .account-table {\\n  padding: 40px 30px;\\n}\\n.account-list .account-table .account-table-n {\\n    border: 1px solid #e7eaed;\\n    border-radius: 4px;\\n    padding: 15px;\\n}\\n.account-list .account-table .account-table-n .account-type {\\n      color: #595f67;\\n      font-size: 13px;\\n      font-weight: bold;\\n}\\n.account-list .account-table .account-table-n .account-c {\\n      color: #538cc0;\\n}\\n.bpm {\\n  padding: 15px;\\n}\\n.bpm dl {\\n    width: 260px;\\n    margin: 0 auto;\\n}\\n.bpm dl dd {\\n      color: #abb1b8;\\n}\\n.bpm dl dt {\\n      padding: 10px 0;\\n      color: #595f67;\\n      font-size: 14px;\\n}\\n.positive {\\n  color: #de3569;\\n}\\n.negative {\\n  color: #16a474;\\n}\\n.amount-color {\\n  color: #de3569;\\n}\\n.icon-brackets {\\n  font-size: 25px;\\n  color: #d8dadd;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 664 */,\n/* 665 */,\n/* 666 */,\n/* 667 */,\n/* 668 */,\n/* 669 */,\n/* 670 */,\n/* 671 */,\n/* 672 */,\n/* 673 */,\n/* 674 */,\n/* 675 */,\n/* 676 */,\n/* 677 */,\n/* 678 */,\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(663);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(375)(\"069cd959\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDetail.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDetail.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/img/cruxDate.33103af.png\";\n\n/***/ }),\n/* 720 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/img/cruxDate2.396dc25.png\";\n\n/***/ }),\n/* 721 */,\n/* 722 */,\n/* 723 */,\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */,\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */,\n/* 747 */,\n/* 748 */,\n/* 749 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-detail\"\n  }, [_c('div', {\n    staticClass: \"box\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_c('h3', [_vm._v(_vm._s(_vm.demo.name))]), _c('small', [_vm._v(\"简称：\" + _vm._s(_vm.demo.shortName))]), _c('small', [_vm._v(\"资产代码：YZ0413\")]), _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.editAsset\n    }\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-edit\"\n  }), _vm._v(\"编辑\")]), _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.deleteAsset\n    }\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-delete\"\n  }), _vm._v(\"删除\")])], 1)]), _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"6.5%\")])]), _c('tr', [_c('th', [_vm._v(\"起购金额：\")]), _c('td', [_vm._v(\"￥1000\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"恒大金服\")])]), _c('tr', [_c('th', [_vm._v(\"增信机构：\")]), _c('td', [_vm._v(\"-\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"6.5%\")])]), _c('tr', [_c('th', [_vm._v(\"起购金额：\")]), _c('td', [_vm._v(\"￥1000\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"恒大金服\")])]), _c('tr', [_c('th', [_vm._v(\"增信机构：\")]), _c('td', [_vm._v(\"-\")])])]) : _vm._e()]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"发行期限：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"30天\")])]), _c('tr', [_c('th', [_vm._v(\"递增金额：\")]), _c('td', [_vm._v(\"￥100\")])]), _c('tr', [_c('th', [_vm._v(\"产品类型：\")]), _c('td', [_vm._v(\"理财计划\")])]), _c('tr', [_c('th', [_vm._v(\"增信措施：\")]), _c('td', [_vm._v(\"保险备用金\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"发行期限：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"30天\")])]), _c('tr', [_c('th', [_vm._v(\"递增金额：\")]), _c('td', [_vm._v(\"￥100\")])]), _c('tr', [_c('th', [_vm._v(\"产品类型：\")]), _c('td', [_vm._v(\"理财计划\")])]), _c('tr', [_c('th', [_vm._v(\"增信措施：\")]), _c('td', [_vm._v(\"保险备用金\")])])]) : _vm._e()]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"风险等级：\")]), _c('td', [_vm._v(\"低风险\")])]), _c('tr', [_c('th', [_vm._v(\"托管机构：\")]), _c('td', [_vm._v(\"平安银行\")])])]) : _vm._e(), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"td-button\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": _vm.goRegPro\n    }\n  }, [_vm._v(\"登记产品列表\")]), _c('el-button', {\n    on: {\n      \"click\": _vm.goClient\n    }\n  }, [_vm._v(\"客户列表\")])], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"风险等级：\")]), _c('td', [_vm._v(\"低风险\")])]), _c('tr', [_c('th', [_vm._v(\"托管机构：\")]), _c('td', [_vm._v(\"平安银行\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"td-button\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": _vm.goRegPro\n    }\n  }, [_vm._v(\"登记产品列表\")]), _c('el-button', {\n    on: {\n      \"click\": _vm.goClient\n    }\n  }, [_vm._v(\"客户列表\")])], 1) : _vm._e()])], 1)], 1), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"attachments-box\"\n  }, [_c('h3', [_vm._v(\"附件：\"), _c('small', [_vm._v(\"*最多支持添加20个文件，每个文件不得超过20M\")]), _c('el-upload', {\n    staticClass: \"upload-attachment\",\n    attrs: {\n      \"action\": \"//jsonplaceholder.typicode.com/posts/\",\n      \"file-list\": _vm.demo.attachments\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"size\": \"mini\",\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(\"增加\")])], 1)], 1)])]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('kt-note-card', {\n    attrs: {\n      \"passed-notes\": _vm.demo.notes\n    }\n  })], 1)])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\" 待办事项\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"todo\"\n  }, [_c('table', [_c('tbody', _vm._l((_vm.producttype1), function(type) {\n    return _c('tr', {\n      staticClass: \"first-tr\"\n    }, [_c('td', {\n      class: [type.assetType === '资金' ? 'first-td-amount' : 'first-td-asset ']\n    }, [_vm._v(_vm._s(type.assetType))]), _c('td', _vm._l((type.state), function(state) {\n      return _c('div', [_vm._v(_vm._s(state))])\n    })), _c('td', _vm._l((type.company), function(company) {\n      return _c('div', [_vm._v(_vm._s(company))])\n    })), _c('td', _vm._l((type.accounts), function(account, index) {\n      return _c('div', {\n        class: ~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\n      }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(account)))])\n    })), _c('td', [(type.boole) ? _c('i', {\n      staticClass: \"i icon-batonx icon-brackets\"\n    }) : _vm._e()]), _c('td', {\n      staticClass: \"amount-color\"\n    }, [_vm._v(_vm._s(type.Surplus))]), _c('td', _vm._l((type.stated), function(stated) {\n      return _c('div', {\n        class: _vm._f(\"filterAmountColor\")(stated)\n      }, [_vm._v(_vm._s(stated)), (stated === '审批中') ? _c('i', {\n        staticClass: \"icon-batonx icon-shenpi\"\n      }) : _vm._e()])\n    })), _c('td', [_vm._v(\"最晚明日12：00执行\")]), (type.assetType === '资金') ? _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])])]) : _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])])])\n  }))])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"todo\"\n  }, [_c('table', [_c('tbody', _vm._l((_vm.producttype2), function(type) {\n    return _c('tr', {\n      staticClass: \"first-tr\"\n    }, [_c('td', {\n      class: [type.assetType === '资金' ? 'first-td-amount' : 'first-td-asset ']\n    }, [_vm._v(_vm._s(type.assetType))]), _c('td', _vm._l((type.state), function(state) {\n      return _c('div', [_vm._v(_vm._s(state))])\n    })), _c('td', _vm._l((type.company), function(company) {\n      return _c('div', [_vm._v(_vm._s(company))])\n    })), _c('td', _vm._l((type.accounts), function(account, index) {\n      return _c('div', {\n        class: ~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\n      }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(account)))])\n    })), _c('td', [(type.boole) ? _c('i', {\n      staticClass: \"i icon-batonx icon-brackets\"\n    }) : _vm._e()]), _c('td', {\n      staticClass: \"amount-color\"\n    }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(type.Surplus)))]), _c('td', _vm._l((type.stated), function(stated) {\n      return _c('div', {\n        class: _vm._f(\"filterAmountColor\")(stated)\n      }, [_vm._v(_vm._s(stated)), (stated === '审批中') ? _c('i', {\n        staticClass: \"icon-batonx icon-shenpi\"\n      }) : _vm._e()])\n    })), _c('td', [_vm._v(\"最晚明日12：00执行\")]), (type.assetType === '资金') ? _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])]) : _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])])])\n  }))])]) : _vm._e()])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"关键日期\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"crux-date\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": __webpack_require__(719)\n    }\n  })]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"crux-date\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": __webpack_require__(720)\n    }\n  })]) : _vm._e()])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"关键金额\")]), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"实际募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"124,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"计划募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"128,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"未募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"4,000,000.00\")])])])])], 1)], 1)]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount-mes\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"存续金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"245,742.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 124,500,000.00\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 251,905,0\")])])])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"已兑付金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"0\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 0\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 0\")])])])])])])], 1)], 1)])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"实际募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"224,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"计划募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"228,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"未募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"4,000,000.00\")])])])])], 1)], 1)]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount-mes\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"存续金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"124,751,905.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 124,500,000.00\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 251,905,0\")])])])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"已兑付金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\" 99,750,095.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 99,548,674.80\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 201,420.152\")])])])])])])], 1)], 1)])]) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"持有资产列表\"), _c('div', {\n    staticClass: \"history-record\"\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.historyDialog\n    }\n  }, [_vm._v(\"历史交易记录\")])])]), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_vm._m(0), _c('el-dialog', {\n    attrs: {\n      \"title\": \"历史交易记录\"\n    },\n    model: {\n      value: (_vm.historyVisible),\n      callback: function($$v) {\n        _vm.historyVisible = $$v\n      },\n      expression: \"historyVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.historyDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"assetsName\",\n      \"label\": \"资产名称\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"cztype\",\n      \"label\": \"操作类型\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"label\": \"变动金额(元)\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          class: scope.row.change > 0 ? 'positive' : 'negative'\n        }, [_vm._v(_vm._s(scope.row.change))])]\n      }]\n    ])\n  })], 1)], 1)], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_vm._m(1), _c('el-dialog', {\n    attrs: {\n      \"title\": \"历史交易记录\"\n    },\n    model: {\n      value: (_vm.historyVisible),\n      callback: function($$v) {\n        _vm.historyVisible = $$v\n      },\n      expression: \"historyVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.historyDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"assetsName\",\n      \"label\": \"资产名称\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"cztype\",\n      \"label\": \"操作类型\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"label\": \"变动金额(元)\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          class: scope.row.change > 0 ? 'positive' : 'negative'\n        }, [_vm._v(_vm._s(scope.row.change))])]\n      }]\n    ])\n  })], 1)], 1)], 1) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"费用列表\"), _c('div', {\n    staticClass: \"extract-record\"\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.extractDialog\n    }\n  }, [_vm._v(\"提取记录\")])])]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"cost-list\"\n  }, [_c('table', [_vm._m(2), _c('tbody', _vm._l((_vm.costLists), function(costList) {\n    return _c('tr', [_c('td', [_vm._v(_vm._s(costList.charge)), _c('span', {\n      class: costList.profitType == '固定' ? 'fixed' : 'float'\n    }, [_vm._v(_vm._s(costList.profitType))])]), _c('td', [_vm._v(_vm._s(costList.costtype))]), _c('td', [_vm._v(_vm._s(costList.billingMode))]), _c('td', [_vm._v(_vm._s(costList.rate))]), _c('td', [_vm._v(_vm._s(costList.billingDates))]), _c('td', [_vm._v(_vm._s(costList.costbase))]), _c('td', [_vm._v(_vm._s(costList.payfrequency))]), _c('td', [_vm._v(_vm._s(costList.startDate))]), _c('td', [_vm._v(_vm._s(costList.already))])])\n  }))])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"cost-list\"\n  }, [_c('table', [_vm._m(3), _c('tbody', _vm._l((_vm.currentLists), function(currentList) {\n    return _c('tr', [_c('td', [_vm._v(_vm._s(currentList.charge)), _c('span', {\n      class: currentList.profitType == '固定' ? 'fixed' : 'float'\n    }, [_vm._v(_vm._s(currentList.profitType))])]), _c('td', [_vm._v(_vm._s(currentList.costtype))]), _c('td', [_vm._v(_vm._s(currentList.billingMode))]), _c('td', [_vm._v(_vm._s(currentList.rate))]), _c('td', [_vm._v(_vm._s(currentList.billingDates))]), _c('td', [_vm._v(_vm._s(currentList.costbase))]), _c('td', [_vm._v(_vm._s(currentList.payfrequency))]), _c('td', [_vm._v(_vm._s(currentList.startDate))]), _c('td', [_vm._v(_vm._s(currentList.already))])])\n  }))])]) : _vm._e(), _c('el-dialog', {\n    attrs: {\n      \"title\": \"提取记录\"\n    },\n    model: {\n      value: (_vm.extractVisible),\n      callback: function($$v) {\n        _vm.extractVisible = $$v\n      },\n      expression: \"extractVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.extractDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"charge\",\n      \"label\": \"收费主体\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"extract\",\n      \"label\": \"提取金额\"\n    }\n  })], 1)], 1)], 1)]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"账户列表\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"account-list\"\n  }, [_c('el-row', _vm._l((_vm.accountLists), function(accountList) {\n    return _c('el-col', {\n      attrs: {\n        \"span\": 12\n      }\n    }, [_c('div', {\n      staticClass: \"account-table\"\n    }, [_c('div', {\n      staticClass: \"account-table-n\"\n    }, [_c('table', [_c('tr', [_c('th', [_vm._v(\"账户类型：\")]), _c('td', {\n      staticClass: \"account-type\"\n    }, [_vm._v(_vm._s(accountList.accountType))])]), _c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(_vm._s(accountList.accountName))])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n      staticClass: \"account-c\"\n    }, [_vm._v(_vm._s(accountList.account))])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(_vm._s(accountList.openAccount))])])])])])])\n  }))], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"account-list\"\n  }, [_c('el-row', _vm._l((_vm.accountLists), function(accountList) {\n    return _c('el-col', {\n      attrs: {\n        \"span\": 12\n      }\n    }, [_c('div', {\n      staticClass: \"account-table\"\n    }, [_c('div', {\n      staticClass: \"account-table-n\"\n    }, [_c('table', [_c('tr', [_c('th', [_vm._v(\"账户类型：\")]), _c('td', {\n      staticClass: \"account-type\"\n    }, [_vm._v(_vm._s(accountList.accountType))])]), _c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(_vm._s(accountList.accountName))])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n      staticClass: \"account-c\"\n    }, [_vm._v(_vm._s(accountList.account))])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(_vm._s(accountList.openAccount))])])])])])])\n  }))], 1) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"审批流程管理\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"bpm\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"审批流程名称\")]), _c('dt', [_vm._v(\"资金清算审批流程B\")])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"流程详情\")]), _c('dt', [_vm._v(\" 项目组长  →  项目经理  →  项目总监\")])])])], 1)], 1)])])]), _c('kt-product-dialog', {\n    ref: \"productDialog\"\n  }), _c('kt-asset-dialog', {\n    ref: \"assetDialog\"\n  })], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-list\"\n  }, [_c('table', [_c('thead', [_c('tr', [_c('th', [_vm._v(\"名称\")]), _c('th', [_vm._v(\"金额\")]), _c('th', [_vm._v(\"比例\")]), _c('th', [_vm._v(\"今日收益\")]), _c('th', [_vm._v(\"累计收益\")])])]), _c('tbody', [_c('tr', [_c('td', [_vm._v(\"创元开发建设投资企业融资项目\")]), _c('td', [_vm._v(\"￥ 24,296,355.00\")]), _c('td', [_vm._v(\"100%\")]), _c('td', [_vm._v(\"￥ 1,336,299.52\")]), _c('td', [_vm._v(\"￥ 1,336,299.52\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-list-current\"\n  }, [_c('table', [_c('thead', [_c('tr', [_c('th'), _c('th', [_vm._v(\"资产名称\")]), _c('th', [_vm._v(\"金额\")]), _c('th', [_vm._v(\"比例\")]), _c('th', [_vm._v(\"今日收益\")]), _c('th', [_vm._v(\"累计收益\")])])]), _c('tbody', [_c('tr', [_c('td', {\n    staticClass: \"first-td\",\n    attrs: {\n      \"rowspan\": \"2\"\n    }\n  }, [_vm._v(\"流动性资产\")]), _c('td', [_vm._v(\"现金\")]), _c('td', [_vm._v(\"￥1,000,000.00\")]), _c('td', [_vm._v(\" 0.54%\")]), _c('td', [_vm._v(\"￥30,000.00\")]), _c('td', [_vm._v(\"￥30,000.00\")])]), _c('tr', {\n    staticClass: \"two-tr\"\n  }, [_c('td', [_vm._v(\"鹏华添利宝货币基金\")]), _c('td', [_vm._v(\"￥182,055,000.00\")]), _c('td', [_vm._v(\" 55.5%\")]), _c('td', [_vm._v(\"￥61,258,800.00\")]), _c('td', [_vm._v(\"￥61,258,800.00\")])]), _c('tr', [_c('td', {\n    staticClass: \"first-td\",\n    attrs: {\n      \"rowspan\": \"2\"\n    }\n  }, [_vm._v(\"其他资产\")]), _c('td', [_vm._v(\"小定宝-财富-南京某公司借款\")]), _c('td', [_vm._v(\"￥23,800,000.00\")]), _c('td', [_vm._v(\" 12.96%\")]), _c('td', [_vm._v(\"￥14,280,000.00\")]), _c('td', [_vm._v(\"￥14,280,000.00\")])]), _c('tr', [_c('td', [_vm._v(\"小定宝-财富-海航商业控股项目\")]), _c('td', [_vm._v(\"￥102,098,000.00\")]), _c('td', [_vm._v(\" 31%\")]), _c('td', [_vm._v(\"￥39,960,216.80\")]), _c('td', [_vm._v(\"￥39,960,216.80\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"收费主体\")]), _c('th', [_vm._v(\"费用类型\")]), _c('th', [_vm._v(\"计费方式\")]), _c('th', [_vm._v(\"费率\")]), _c('th', [_vm._v(\"计费天数\")]), _c('th', [_vm._v(\"费用基数\")]), _c('th', [_vm._v(\"支付频率\")]), _c('th', [_vm._v(\"计费开始日期\")]), _c('th', [_vm._v(\"已记提费用\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"收费主体\")]), _c('th', [_vm._v(\"费用类型\")]), _c('th', [_vm._v(\"计费方式\")]), _c('th', [_vm._v(\"费率\")]), _c('th', [_vm._v(\"计费天数\")]), _c('th', [_vm._v(\"费用基数\")]), _c('th', [_vm._v(\"支付频率\")]), _c('th', [_vm._v(\"计费开始日期\")]), _c('th', [_vm._v(\"已记提费用\")])])])\n}]}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.97df8e906c3caa0d1565.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ProductDetail.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProductDetail.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-76bf6b05\\\"}!../../../node_modules/vue-loader/lib/template-loader?raw&engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProductDetail.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/product_management/ProductDetail.vue\n// module id = 392\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 396\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.4',\n        dependencies: {\n            zrender: '3.4.4'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 397\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 398\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 399\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 400\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 401\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 402\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 403\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 404\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 405\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 406\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 407\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 408\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 409\n// module chunks = 0 1 2","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 410\n// module chunks = 0 1 2","module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(202);\n\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports) {\n\n\t/* globals __VUE_SSR_CONTEXT__ */\n\n\t// this module is a runtime utility for cleaner component module output and will\n\t// be included in the final webpack user bundle\n\n\tmodule.exports = function normalizeComponent (\n\t  rawScriptExports,\n\t  compiledTemplate,\n\t  injectStyles,\n\t  scopeId,\n\t  moduleIdentifier /* server only */\n\t) {\n\t  var esModule\n\t  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n\t  // ES6 modules interop\n\t  var type = typeof rawScriptExports.default\n\t  if (type === 'object' || type === 'function') {\n\t    esModule = rawScriptExports\n\t    scriptExports = rawScriptExports.default\n\t  }\n\n\t  // Vue.extend constructor export interop\n\t  var options = typeof scriptExports === 'function'\n\t    ? scriptExports.options\n\t    : scriptExports\n\n\t  // render functions\n\t  if (compiledTemplate) {\n\t    options.render = compiledTemplate.render\n\t    options.staticRenderFns = compiledTemplate.staticRenderFns\n\t  }\n\n\t  // scopedId\n\t  if (scopeId) {\n\t    options._scopeId = scopeId\n\t  }\n\n\t  var hook\n\t  if (moduleIdentifier) { // server build\n\t    hook = function (context) {\n\t      // 2.3 injection\n\t      context = context || (this.$vnode && this.$vnode.ssrContext)\n\t      // 2.2 with runInNewContext: true\n\t      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n\t        context = __VUE_SSR_CONTEXT__\n\t      }\n\t      // inject component styles\n\t      if (injectStyles) {\n\t        injectStyles.call(this, context)\n\t      }\n\t      // register component module identifier for async chunk inferrence\n\t      if (context && context._registeredComponents) {\n\t        context._registeredComponents.add(moduleIdentifier)\n\t      }\n\t    }\n\t    // used by ssr in case component is cached and beforeCreate\n\t    // never gets called\n\t    options._ssrRegister = hook\n\t  } else if (injectStyles) {\n\t    hook = injectStyles\n\t  }\n\n\t  if (hook) {\n\t    // inject component registration as beforeCreate hook\n\t    var existing = options.beforeCreate\n\t    options.beforeCreate = existing\n\t      ? [].concat(existing, hook)\n\t      : [hook]\n\t  }\n\n\t  return {\n\t    esModule: esModule,\n\t    exports: scriptExports,\n\t    options: options\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/input\");\n\n/***/ },\n\n/***/ 56:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"vue\");\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/mixins/locale\");\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/locale\");\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/utils/dom\");\n\n/***/ },\n\n/***/ 135:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/utils/popup\");\n\n/***/ },\n\n/***/ 140:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/button\");\n\n/***/ },\n\n/***/ 167:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/utils/merge\");\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _main = __webpack_require__(203);\n\n\tvar _main2 = _interopRequireDefault(_main);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _main2.default;\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.MessageBox = undefined;\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _vue = __webpack_require__(56);\n\n\tvar _vue2 = _interopRequireDefault(_vue);\n\n\tvar _main = __webpack_require__(204);\n\n\tvar _main2 = _interopRequireDefault(_main);\n\n\tvar _merge = __webpack_require__(167);\n\n\tvar _merge2 = _interopRequireDefault(_merge);\n\n\tvar _vdom = __webpack_require__(207);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar defaults = {\n\t  title: undefined,\n\t  message: '',\n\t  type: '',\n\t  showInput: false,\n\t  showClose: true,\n\t  modalFade: true,\n\t  lockScroll: true,\n\t  closeOnClickModal: true,\n\t  closeOnPressEscape: true,\n\t  inputValue: null,\n\t  inputPlaceholder: '',\n\t  inputPattern: null,\n\t  inputValidator: null,\n\t  inputErrorMessage: '',\n\t  showConfirmButton: true,\n\t  showCancelButton: false,\n\t  confirmButtonPosition: 'right',\n\t  confirmButtonHighlight: false,\n\t  cancelButtonHighlight: false,\n\t  confirmButtonText: '',\n\t  cancelButtonText: '',\n\t  confirmButtonClass: '',\n\t  cancelButtonClass: '',\n\t  customClass: '',\n\t  beforeClose: null\n\t};\n\n\tvar MessageBoxConstructor = _vue2.default.extend(_main2.default);\n\n\tvar currentMsg = void 0,\n\t    instance = void 0;\n\tvar msgQueue = [];\n\n\tvar defaultCallback = function defaultCallback(action) {\n\t  if (currentMsg) {\n\t    var callback = currentMsg.callback;\n\t    if (typeof callback === 'function') {\n\t      if (instance.showInput) {\n\t        callback(instance.inputValue, action);\n\t      } else {\n\t        callback(action);\n\t      }\n\t    }\n\t    if (currentMsg.resolve) {\n\t      var $type = currentMsg.options.$type;\n\t      if ($type === 'confirm' || $type === 'prompt') {\n\t        if (action === 'confirm') {\n\t          if (instance.showInput) {\n\t            currentMsg.resolve({ value: instance.inputValue, action: action });\n\t          } else {\n\t            currentMsg.resolve(action);\n\t          }\n\t        } else if (action === 'cancel' && currentMsg.reject) {\n\t          currentMsg.reject(action);\n\t        }\n\t      } else {\n\t        currentMsg.resolve(action);\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar initInstance = function initInstance() {\n\t  instance = new MessageBoxConstructor({\n\t    el: document.createElement('div')\n\t  });\n\n\t  instance.callback = defaultCallback;\n\t};\n\n\tvar showNextMsg = function showNextMsg() {\n\t  if (!instance) {\n\t    initInstance();\n\t  }\n\t  instance.action = '';\n\n\t  if (!instance.visible || instance.closeTimer) {\n\t    if (msgQueue.length > 0) {\n\t      (function () {\n\t        currentMsg = msgQueue.shift();\n\n\t        var options = currentMsg.options;\n\t        for (var prop in options) {\n\t          if (options.hasOwnProperty(prop)) {\n\t            instance[prop] = options[prop];\n\t          }\n\t        }\n\t        if (options.callback === undefined) {\n\t          instance.callback = defaultCallback;\n\t        }\n\n\t        var oldCb = instance.callback;\n\t        instance.callback = function (action, instance) {\n\t          oldCb(action, instance);\n\t          showNextMsg();\n\t        };\n\t        if ((0, _vdom.isVNode)(instance.message)) {\n\t          instance.$slots.default = [instance.message];\n\t          instance.message = null;\n\t        }\n\t        ['modal', 'showClose', 'closeOnClickModal', 'closeOnPressEscape'].forEach(function (prop) {\n\t          if (instance[prop] === undefined) {\n\t            instance[prop] = true;\n\t          }\n\t        });\n\t        document.body.appendChild(instance.$el);\n\n\t        _vue2.default.nextTick(function () {\n\t          instance.visible = true;\n\t        });\n\t      })();\n\t    }\n\t  }\n\t};\n\n\tvar MessageBox = function MessageBox(options, callback) {\n\t  if (_vue2.default.prototype.$isServer) return;\n\t  if (typeof options === 'string') {\n\t    options = {\n\t      message: options\n\t    };\n\t    if (arguments[1]) {\n\t      options.title = arguments[1];\n\t    }\n\t    if (arguments[2]) {\n\t      options.type = arguments[2];\n\t    }\n\t  } else if (options.callback && !callback) {\n\t    callback = options.callback;\n\t  }\n\n\t  if (typeof Promise !== 'undefined') {\n\t    return new Promise(function (resolve, reject) {\n\t      // eslint-disable-line\n\t      msgQueue.push({\n\t        options: (0, _merge2.default)({}, defaults, MessageBox.defaults, options),\n\t        callback: callback,\n\t        resolve: resolve,\n\t        reject: reject\n\t      });\n\n\t      showNextMsg();\n\t    });\n\t  } else {\n\t    msgQueue.push({\n\t      options: (0, _merge2.default)({}, defaults, MessageBox.defaults, options),\n\t      callback: callback\n\t    });\n\n\t    showNextMsg();\n\t  }\n\t};\n\n\tMessageBox.setDefaults = function (defaults) {\n\t  MessageBox.defaults = defaults;\n\t};\n\n\tMessageBox.alert = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    $type: 'alert',\n\t    closeOnPressEscape: false,\n\t    closeOnClickModal: false\n\t  }, options));\n\t};\n\n\tMessageBox.confirm = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    $type: 'confirm',\n\t    showCancelButton: true\n\t  }, options));\n\t};\n\n\tMessageBox.prompt = function (message, title, options) {\n\t  if ((typeof title === 'undefined' ? 'undefined' : _typeof(title)) === 'object') {\n\t    options = title;\n\t    title = '';\n\t  }\n\t  return MessageBox((0, _merge2.default)({\n\t    title: title,\n\t    message: message,\n\t    showCancelButton: true,\n\t    showInput: true,\n\t    $type: 'prompt'\n\t  }, options));\n\t};\n\n\tMessageBox.close = function () {\n\t  instance.visible = false;\n\t  msgQueue = [];\n\t  currentMsg = null;\n\t};\n\n\texports.default = MessageBox;\n\texports.MessageBox = MessageBox;\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Component = __webpack_require__(3)(\n\t  /* script */\n\t  __webpack_require__(205),\n\t  /* template */\n\t  __webpack_require__(206),\n\t  /* styles */\n\t  null,\n\t  /* scopeId */\n\t  null,\n\t  /* moduleIdentifier (server only) */\n\t  null\n\t)\n\n\tmodule.exports = Component.exports\n\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _popup = __webpack_require__(135);\n\n\tvar _popup2 = _interopRequireDefault(_popup);\n\n\tvar _locale = __webpack_require__(60);\n\n\tvar _locale2 = _interopRequireDefault(_locale);\n\n\tvar _input = __webpack_require__(9);\n\n\tvar _input2 = _interopRequireDefault(_input);\n\n\tvar _button = __webpack_require__(140);\n\n\tvar _button2 = _interopRequireDefault(_button);\n\n\tvar _dom = __webpack_require__(120);\n\n\tvar _locale3 = __webpack_require__(61);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\t//\n\n\tvar typeMap = {\n\t  success: 'circle-check',\n\t  info: 'information',\n\t  warning: 'warning',\n\t  error: 'circle-cross'\n\t};\n\n\texports.default = {\n\t  mixins: [_popup2.default, _locale2.default],\n\n\t  props: {\n\t    modal: {\n\t      default: true\n\t    },\n\t    lockScroll: {\n\t      default: true\n\t    },\n\t    showClose: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    closeOnClickModal: {\n\t      default: true\n\t    },\n\t    closeOnPressEscape: {\n\t      default: true\n\t    }\n\t  },\n\n\t  components: {\n\t    ElInput: _input2.default,\n\t    ElButton: _button2.default\n\t  },\n\n\t  computed: {\n\t    typeClass: function typeClass() {\n\t      return this.type && typeMap[this.type] ? 'el-icon-' + typeMap[this.type] : '';\n\t    },\n\t    confirmButtonClasses: function confirmButtonClasses() {\n\t      return 'el-button--primary ' + this.confirmButtonClass;\n\t    },\n\t    cancelButtonClasses: function cancelButtonClasses() {\n\t      return '' + this.cancelButtonClass;\n\t    }\n\t  },\n\n\t  methods: {\n\t    getSafeClose: function getSafeClose() {\n\t      var _this = this;\n\n\t      var currentId = this.uid;\n\t      return function () {\n\t        _this.$nextTick(function () {\n\t          if (currentId === _this.uid) _this.doClose();\n\t        });\n\t      };\n\t    },\n\t    doClose: function doClose() {\n\t      var _this2 = this;\n\n\t      if (!this.visible) return;\n\t      this.visible = false;\n\t      this._closing = true;\n\n\t      this.onClose && this.onClose();\n\n\t      if (this.lockScroll) {\n\t        setTimeout(function () {\n\t          if (_this2.modal && _this2.bodyOverflow !== 'hidden') {\n\t            document.body.style.overflow = _this2.bodyOverflow;\n\t            document.body.style.paddingRight = _this2.bodyPaddingRight;\n\t          }\n\t          _this2.bodyOverflow = null;\n\t          _this2.bodyPaddingRight = null;\n\t        }, 200);\n\t      }\n\t      this.opened = false;\n\n\t      if (!this.transition) {\n\t        this.doAfterClose();\n\t      }\n\t      if (this.action) this.callback(this.action, this);\n\t    },\n\t    handleWrapperClick: function handleWrapperClick() {\n\t      if (this.closeOnClickModal) {\n\t        this.action = '';\n\t        this.doClose();\n\t      }\n\t    },\n\t    handleAction: function handleAction(action) {\n\t      if (this.$type === 'prompt' && action === 'confirm' && !this.validate()) {\n\t        return;\n\t      }\n\t      this.action = action;\n\t      if (typeof this.beforeClose === 'function') {\n\t        this.close = this.getSafeClose();\n\t        this.beforeClose(action, this, this.close);\n\t      } else {\n\t        this.doClose();\n\t      }\n\t    },\n\t    validate: function validate() {\n\t      if (this.$type === 'prompt') {\n\t        var inputPattern = this.inputPattern;\n\t        if (inputPattern && !inputPattern.test(this.inputValue || '')) {\n\t          this.editorErrorMessage = this.inputErrorMessage || (0, _locale3.t)('el.messagebox.error');\n\t          (0, _dom.addClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t          return false;\n\t        }\n\t        var inputValidator = this.inputValidator;\n\t        if (typeof inputValidator === 'function') {\n\t          var validateResult = inputValidator(this.inputValue);\n\t          if (validateResult === false) {\n\t            this.editorErrorMessage = this.inputErrorMessage || (0, _locale3.t)('el.messagebox.error');\n\t            (0, _dom.addClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t            return false;\n\t          }\n\t          if (typeof validateResult === 'string') {\n\t            this.editorErrorMessage = validateResult;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      this.editorErrorMessage = '';\n\t      (0, _dom.removeClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t      return true;\n\t    }\n\t  },\n\n\t  watch: {\n\t    inputValue: {\n\t      immediate: true,\n\t      handler: function handler(val) {\n\t        var _this3 = this;\n\n\t        this.$nextTick(function (_) {\n\t          if (_this3.$type === 'prompt' && val !== null) {\n\t            _this3.validate();\n\t          }\n\t        });\n\t      }\n\t    },\n\n\t    visible: function visible(val) {\n\t      var _this4 = this;\n\n\t      if (val) this.uid++;\n\t      if (this.$type === 'alert' || this.$type === 'confirm') {\n\t        this.$nextTick(function () {\n\t          _this4.$refs.confirm.$el.focus();\n\t        });\n\t      }\n\t      if (this.$type !== 'prompt') return;\n\t      if (val) {\n\t        setTimeout(function () {\n\t          if (_this4.$refs.input && _this4.$refs.input.$el) {\n\t            _this4.$refs.input.$el.querySelector('input').focus();\n\t          }\n\t        }, 500);\n\t      } else {\n\t        this.editorErrorMessage = '';\n\t        (0, _dom.removeClass)(this.$refs.input.$el.querySelector('input'), 'invalid');\n\t      }\n\t    }\n\t  },\n\n\t  data: function data() {\n\t    return {\n\t      uid: 1,\n\t      title: undefined,\n\t      message: '',\n\t      type: '',\n\t      customClass: '',\n\t      showInput: false,\n\t      inputValue: null,\n\t      inputPlaceholder: '',\n\t      inputPattern: null,\n\t      inputValidator: null,\n\t      inputErrorMessage: '',\n\t      showConfirmButton: true,\n\t      showCancelButton: false,\n\t      action: '',\n\t      confirmButtonText: '',\n\t      cancelButtonText: '',\n\t      confirmButtonLoading: false,\n\t      cancelButtonLoading: false,\n\t      confirmButtonClass: '',\n\t      confirmButtonDisabled: false,\n\t      cancelButtonClass: '',\n\t      editorErrorMessage: null,\n\t      callback: null\n\t    };\n\t  }\n\t};\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('transition', {\n\t    attrs: {\n\t      \"name\": \"msgbox-fade\"\n\t    }\n\t  }, [_c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.visible),\n\t      expression: \"visible\"\n\t    }],\n\t    staticClass: \"el-message-box__wrapper\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        if ($event.target !== $event.currentTarget) { return null; }\n\t        _vm.handleWrapperClick($event)\n\t      }\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box\",\n\t    class: _vm.customClass\n\t  }, [(_vm.title !== undefined) ? _c('div', {\n\t    staticClass: \"el-message-box__header\"\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box__title\"\n\t  }, [_vm._v(_vm._s(_vm.title || _vm.t('el.messagebox.title')))]), (_vm.showClose) ? _c('i', {\n\t    staticClass: \"el-message-box__close el-icon-close\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('cancel')\n\t      }\n\t    }\n\t  }) : _vm._e()]) : _vm._e(), (_vm.message !== '') ? _c('div', {\n\t    staticClass: \"el-message-box__content\"\n\t  }, [_c('div', {\n\t    staticClass: \"el-message-box__status\",\n\t    class: [_vm.typeClass]\n\t  }), _c('div', {\n\t    staticClass: \"el-message-box__message\",\n\t    style: ({\n\t      'margin-left': _vm.typeClass ? '50px' : '0'\n\t    })\n\t  }, [_vm._t(\"default\", [_c('p', [_vm._v(_vm._s(_vm.message))])])], 2), _c('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showInput),\n\t      expression: \"showInput\"\n\t    }],\n\t    staticClass: \"el-message-box__input\"\n\t  }, [_c('el-input', {\n\t    ref: \"input\",\n\t    attrs: {\n\t      \"placeholder\": _vm.inputPlaceholder\n\t    },\n\t    nativeOn: {\n\t      \"keyup\": function($event) {\n\t        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n\t        _vm.handleAction('confirm')\n\t      }\n\t    },\n\t    model: {\n\t      value: (_vm.inputValue),\n\t      callback: function($$v) {\n\t        _vm.inputValue = $$v\n\t      },\n\t      expression: \"inputValue\"\n\t    }\n\t  }), _c('div', {\n\t    staticClass: \"el-message-box__errormsg\",\n\t    style: ({\n\t      visibility: !!_vm.editorErrorMessage ? 'visible' : 'hidden'\n\t    })\n\t  }, [_vm._v(_vm._s(_vm.editorErrorMessage))])], 1)]) : _vm._e(), _c('div', {\n\t    staticClass: \"el-message-box__btns\"\n\t  }, [_c('el-button', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showCancelButton),\n\t      expression: \"showCancelButton\"\n\t    }],\n\t    class: [_vm.cancelButtonClasses],\n\t    attrs: {\n\t      \"loading\": _vm.cancelButtonLoading\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('cancel')\n\t      }\n\t    }\n\t  }, [_vm._v(\"\\n          \" + _vm._s(_vm.cancelButtonText || _vm.t('el.messagebox.cancel')) + \"\\n        \")]), _c('el-button', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.showConfirmButton),\n\t      expression: \"showConfirmButton\"\n\t    }],\n\t    ref: \"confirm\",\n\t    class: [_vm.confirmButtonClasses],\n\t    attrs: {\n\t      \"loading\": _vm.confirmButtonLoading\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.handleAction('confirm')\n\t      }\n\t    }\n\t  }, [_vm._v(\"\\n          \" + _vm._s(_vm.confirmButtonText || _vm.t('el.messagebox.confirm')) + \"\\n        \")])], 1)])])])\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"element-ui/lib/utils/vdom\");\n\n/***/ }\n\n/******/ });\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/element-ui/lib/message-box.js\n// module id = 411\n// module chunks = 0 1 4 5 6 9 10 11 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../css-loader/index.js??ref--5-2!./message-box.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../vue-style-loader/lib/addStylesClient.js\")(\"11089622\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../css-loader/index.js??ref--5-2!./message-box.css\", function() {\n     var newContent = require(\"!!../../../css-loader/index.js??ref--5-2!./message-box.css\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/element-ui/lib/theme-default/message-box.css\n// module id = 412\n// module chunks = 0 1 4 5 6 9 10 11 12","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 413\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 414\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 415\n// module chunks = 0 1 2","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".el-button,.el-input__inner{-webkit-appearance:none;line-height:1;outline:0}.el-button-group:after,.el-button-group:before{display:table;content:\\\"\\\"}.el-button,.el-button-group,.el-input{display:inline-block}.el-button-group:after{clear:both}.v-modal-enter{animation:v-modal-in .2s ease}.v-modal-leave{animation:v-modal-out .2s ease forwards}@keyframes v-modal-in{0%{opacity:0}}@keyframes v-modal-out{to{opacity:0}}.v-modal{position:fixed;left:0;top:0;width:100%;height:100%;opacity:.5;background:#000}.el-button{white-space:nowrap;cursor:pointer;background:#fff;border:1px solid #bfcbd9;color:#1f2d3d;text-align:center;box-sizing:border-box;margin:0;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;padding:10px 15px;font-size:14px;border-radius:4px}.el-button+.el-button{margin-left:10px}.el-button:focus,.el-button:hover{color:#20a0ff;border-color:#20a0ff}.el-button:active{color:#1d90e6;border-color:#1d90e6;outline:0}.el-button::-moz-focus-inner{border:0}.el-button [class*=el-icon-]+span{margin-left:5px}.el-button.is-loading{position:relative;pointer-events:none}.el-button.is-loading:before{pointer-events:none;content:\\\"\\\";position:absolute;left:-1px;top:-1px;right:-1px;bottom:-1px;border-radius:inherit;background-color:hsla(0,0%,100%,.35)}.el-button.is-disabled,.el-button.is-disabled:focus,.el-button.is-disabled:hover{color:#bfcbd9;cursor:not-allowed;background-image:none;background-color:#eef1f6;border-color:#d1dbe5}.el-button.is-disabled.el-button--text{background-color:transparent}.el-button.is-disabled.is-plain,.el-button.is-disabled.is-plain:focus,.el-button.is-disabled.is-plain:hover{background-color:#fff;border-color:#d1dbe5;color:#bfcbd9}.el-button.is-active{color:#1d90e6;border-color:#1d90e6}.el-button.is-plain:focus,.el-button.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--primary{color:#fff;background-color:#20a0ff;border-color:#20a0ff}.el-button--primary:focus,.el-button--primary:hover{background:#4db3ff;border-color:#4db3ff;color:#fff}.el-button--primary.is-active,.el-button--primary:active{background:#1d90e6;border-color:#1d90e6;color:#fff}.el-button--primary:active{outline:0}.el-button--primary.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--primary.is-plain:focus,.el-button--primary.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button--primary.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--success{color:#fff;background-color:#13ce66;border-color:#13ce66}.el-button--success:focus,.el-button--success:hover{background:#42d885;border-color:#42d885;color:#fff}.el-button--success.is-active,.el-button--success:active{background:#11b95c;border-color:#11b95c;color:#fff}.el-button--success:active{outline:0}.el-button--success.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--success.is-plain:focus,.el-button--success.is-plain:hover{background:#fff;border-color:#13ce66;color:#13ce66}.el-button--success.is-plain:active{background:#fff;border-color:#11b95c;color:#11b95c;outline:0}.el-button--warning{color:#fff;background-color:#f7ba2a;border-color:#f7ba2a}.el-button--warning:focus,.el-button--warning:hover{background:#f9c855;border-color:#f9c855;color:#fff}.el-button--warning.is-active,.el-button--warning:active{background:#dea726;border-color:#dea726;color:#fff}.el-button--warning:active{outline:0}.el-button--warning.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--warning.is-plain:focus,.el-button--warning.is-plain:hover{background:#fff;border-color:#f7ba2a;color:#f7ba2a}.el-button--warning.is-plain:active{background:#fff;border-color:#dea726;color:#dea726;outline:0}.el-button--danger{color:#fff;background-color:#ff4949;border-color:#ff4949}.el-button--danger:focus,.el-button--danger:hover{background:#ff6d6d;border-color:#ff6d6d;color:#fff}.el-button--danger.is-active,.el-button--danger:active{background:#e64242;border-color:#e64242;color:#fff}.el-button--danger:active{outline:0}.el-button--danger.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--danger.is-plain:focus,.el-button--danger.is-plain:hover{background:#fff;border-color:#ff4949;color:#ff4949}.el-button--danger.is-plain:active{background:#fff;border-color:#e64242;color:#e64242;outline:0}.el-button--info{color:#fff;background-color:#50bfff;border-color:#50bfff}.el-button--info:focus,.el-button--info:hover{background:#73ccff;border-color:#73ccff;color:#fff}.el-button--info.is-active,.el-button--info:active{background:#48ace6;border-color:#48ace6;color:#fff}.el-button--info:active{outline:0}.el-button--info.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--info.is-plain:focus,.el-button--info.is-plain:hover{background:#fff;border-color:#50bfff;color:#50bfff}.el-button--info.is-plain:active{background:#fff;border-color:#48ace6;color:#48ace6;outline:0}.el-button--large{padding:11px 19px;font-size:16px;border-radius:4px}.el-button--small{padding:7px 9px;font-size:12px;border-radius:4px}.el-button--mini{padding:4px;font-size:12px;border-radius:4px}.el-button--text{border:none;color:#20a0ff;background:0 0;padding-left:0;padding-right:0}.el-input__inner,.el-textarea__inner{box-sizing:border-box;background-image:none}.el-button--text:focus,.el-button--text:hover{color:#4db3ff}.el-button--text:active{color:#1d90e6}.el-button-group{vertical-align:middle}.el-button-group .el-button--primary:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--primary:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--primary:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--success:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--warning:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--danger:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:first-child{border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:last-child{border-left-color:hsla(0,0%,100%,.5)}.el-button-group .el-button--info:not(:first-child):not(:last-child){border-left-color:hsla(0,0%,100%,.5);border-right-color:hsla(0,0%,100%,.5)}.el-button-group .el-button{float:left;position:relative}.el-button-group .el-button+.el-button{margin-left:0}.el-button-group .el-button:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.el-button-group .el-button:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.el-button-group .el-button:not(:first-child):not(:last-child){border-radius:0}.el-button-group .el-button:not(:last-child){margin-right:-1px}.el-button-group .el-button.is-active,.el-button-group .el-button:active,.el-button-group .el-button:focus,.el-button-group .el-button:hover{z-index:1}.el-input{position:relative;font-size:14px;width:100%}.el-input-group__append .el-button,.el-input-group__append .el-input,.el-input-group__prepend .el-button,.el-input-group__prepend .el-input,.el-input__inner{font-size:inherit}.el-input.is-disabled .el-input__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-input.is-disabled .el-input__inner::-webkit-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::-moz-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner:-ms-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::placeholder{color:#bfcbd9}.el-input.is-active .el-input__inner{outline:0;border-color:#20a0ff}.el-input__inner{-moz-appearance:none;appearance:none;background-color:#fff;border-radius:4px;border:1px solid #bfcbd9;color:#1f2d3d;display:block;height:36px;padding:3px 10px;transition:border-color .2s cubic-bezier(.645,.045,.355,1);width:100%}.el-input__inner::-webkit-input-placeholder{color:#97a8be}.el-input__inner::-moz-placeholder{color:#97a8be}.el-input__inner:-ms-input-placeholder{color:#97a8be}.el-input__inner::placeholder{color:#97a8be}.el-input__inner:hover{border-color:#8391a5}.el-input__inner:focus{outline:0;border-color:#20a0ff}.el-input__icon{position:absolute;width:35px;height:100%;right:0;top:0;text-align:center;color:#bfcbd9;transition:all .3s}.el-input__icon:after{content:\\\"\\\";height:100%;width:0;display:inline-block;vertical-align:middle}.el-input__icon+.el-input__inner{padding-right:35px}.el-input__icon.is-clickable:hover{cursor:pointer;color:#8391a5}.el-input__icon.is-clickable:hover+.el-input__inner{border-color:#8391a5}.el-input--large{font-size:16px}.el-input--large .el-input__inner{height:42px}.el-input--small{font-size:13px}.el-input--small .el-input__inner{height:30px}.el-input--mini{font-size:12px}.el-input--mini .el-input__inner{height:22px}.el-input-group{line-height:normal;display:inline-table;width:100%;border-collapse:separate}.el-input-group>.el-input__inner{vertical-align:middle;display:table-cell}.el-input-group__append,.el-input-group__prepend{background-color:#fbfdff;color:#97a8be;vertical-align:middle;display:table-cell;position:relative;border:1px solid #bfcbd9;border-radius:4px;padding:0 10px;width:1%;white-space:nowrap}.el-input-group--prepend .el-input__inner,.el-input-group__append{border-top-left-radius:0;border-bottom-left-radius:0}.el-input-group--append .el-input__inner,.el-input-group__prepend{border-top-right-radius:0;border-bottom-right-radius:0}.el-input-group__append .el-button,.el-input-group__append .el-select,.el-input-group__prepend .el-button,.el-input-group__prepend .el-select{display:block;margin:-10px}.el-input-group__append button.el-button,.el-input-group__append div.el-select .el-input__inner,.el-input-group__append div.el-select:hover .el-input__inner,.el-input-group__prepend button.el-button,.el-input-group__prepend div.el-select .el-input__inner,.el-input-group__prepend div.el-select:hover .el-input__inner{border-color:transparent;background-color:transparent;color:inherit;border-top:0;border-bottom:0}.el-input-group__prepend{border-right:0}.el-input-group__append{border-left:0}.el-textarea{display:inline-block;width:100%;vertical-align:bottom}.el-textarea.is-disabled .el-textarea__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-textarea.is-disabled .el-textarea__inner::-webkit-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::-moz-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner:-ms-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::placeholder{color:#bfcbd9}.el-textarea__inner{display:block;resize:vertical;padding:5px 7px;line-height:1.5;width:100%;font-size:14px;color:#1f2d3d;background-color:#fff;border:1px solid #bfcbd9;border-radius:4px;transition:border-color .2s cubic-bezier(.645,.045,.355,1)}.el-textarea__inner::-webkit-input-placeholder{color:#97a8be}.el-textarea__inner::-moz-placeholder{color:#97a8be}.el-textarea__inner:-ms-input-placeholder{color:#97a8be}.el-textarea__inner::placeholder{color:#97a8be}.el-textarea__inner:hover{border-color:#8391a5}.el-textarea__inner:focus{outline:0;border-color:#20a0ff}.el-message-box{text-align:left;display:inline-block;vertical-align:middle;background-color:#fff;width:420px;border-radius:3px;font-size:16px;overflow:hidden;-webkit-backface-visibility:hidden;backface-visibility:hidden}.el-message-box__wrapper{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center}.el-message-box__wrapper:after{content:\\\"\\\";display:inline-block;height:100%;width:0;vertical-align:middle}.el-message-box__header{position:relative;padding:20px 20px 0}.el-message-box__content{padding:30px 20px;color:#48576a;font-size:14px;position:relative}.el-message-box__close{display:inline-block;position:absolute;top:19px;right:20px;color:#999;cursor:pointer;line-height:20px;text-align:center}.el-message-box__close:hover{color:#20a0ff}.el-message-box__input{padding-top:15px}.el-message-box__input input.invalid,.el-message-box__input input.invalid:focus{border-color:#ff4949}.el-message-box__errormsg{color:#ff4949;font-size:12px;min-height:18px;margin-top:2px}.el-message-box__title{padding-left:0;margin-bottom:0;font-size:16px;font-weight:700;height:18px;color:#333}.el-message-box__message{margin:0}.el-message-box__message p{margin:0;line-height:1.4}.el-message-box__btns{padding:10px 20px 15px;text-align:right}.el-message-box__btns button:nth-child(2){margin-left:10px}.el-message-box__btns-reverse{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.el-message-box__status{position:absolute;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);font-size:36px!important}.el-message-box__status.el-icon-circle-check{color:#13ce66}.el-message-box__status.el-icon-information{color:#50bfff}.el-message-box__status.el-icon-warning{color:#f7ba2a}.el-message-box__status.el-icon-circle-cross{color:#ff4949}.msgbox-fade-enter-active{animation:msgbox-fade-in .3s}.msgbox-fade-leave-active{animation:msgbox-fade-out .3s}@keyframes msgbox-fade-in{0%{transform:translate3d(0,-20px,0);opacity:0}to{transform:translateZ(0);opacity:1}}@keyframes msgbox-fade-out{0%{transform:translateZ(0);opacity:1}to{transform:translate3d(0,-20px,0);opacity:0}}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/node_modules/element-ui/lib/theme-default/message-box.css\"],\"names\":[],\"mappings\":\"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\",\"file\":\"message-box.css\",\"sourcesContent\":[\"@charset \\\"UTF-8\\\";.el-button,.el-input__inner{-webkit-appearance:none;line-height:1;outline:0}.el-button-group:after,.el-button-group:before{display:table;content:\\\"\\\"}.el-button,.el-button-group,.el-input{display:inline-block}.el-button-group:after{clear:both}.v-modal-enter{animation:v-modal-in .2s ease}.v-modal-leave{animation:v-modal-out .2s ease forwards}@keyframes v-modal-in{0%{opacity:0}}@keyframes v-modal-out{100%{opacity:0}}.v-modal{position:fixed;left:0;top:0;width:100%;height:100%;opacity:.5;background:#000}.el-button{white-space:nowrap;cursor:pointer;background:#fff;border:1px solid #bfcbd9;color:#1f2d3d;text-align:center;box-sizing:border-box;margin:0;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;padding:10px 15px;font-size:14px;border-radius:4px}.el-button+.el-button{margin-left:10px}.el-button:focus,.el-button:hover{color:#20a0ff;border-color:#20a0ff}.el-button:active{color:#1d90e6;border-color:#1d90e6;outline:0}.el-button::-moz-focus-inner{border:0}.el-button [class*=el-icon-]+span{margin-left:5px}.el-button.is-loading{position:relative;pointer-events:none}.el-button.is-loading:before{pointer-events:none;content:'';position:absolute;left:-1px;top:-1px;right:-1px;bottom:-1px;border-radius:inherit;background-color:rgba(255,255,255,.35)}.el-button.is-disabled,.el-button.is-disabled:focus,.el-button.is-disabled:hover{color:#bfcbd9;cursor:not-allowed;background-image:none;background-color:#eef1f6;border-color:#d1dbe5}.el-button.is-disabled.el-button--text{background-color:transparent}.el-button.is-disabled.is-plain,.el-button.is-disabled.is-plain:focus,.el-button.is-disabled.is-plain:hover{background-color:#fff;border-color:#d1dbe5;color:#bfcbd9}.el-button.is-active{color:#1d90e6;border-color:#1d90e6}.el-button.is-plain:focus,.el-button.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--primary{color:#fff;background-color:#20a0ff;border-color:#20a0ff}.el-button--primary:focus,.el-button--primary:hover{background:#4db3ff;border-color:#4db3ff;color:#fff}.el-button--primary.is-active,.el-button--primary:active{background:#1d90e6;border-color:#1d90e6;color:#fff}.el-button--primary:active{outline:0}.el-button--primary.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--primary.is-plain:focus,.el-button--primary.is-plain:hover{background:#fff;border-color:#20a0ff;color:#20a0ff}.el-button--primary.is-plain:active{background:#fff;border-color:#1d90e6;color:#1d90e6;outline:0}.el-button--success{color:#fff;background-color:#13ce66;border-color:#13ce66}.el-button--success:focus,.el-button--success:hover{background:#42d885;border-color:#42d885;color:#fff}.el-button--success.is-active,.el-button--success:active{background:#11b95c;border-color:#11b95c;color:#fff}.el-button--success:active{outline:0}.el-button--success.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--success.is-plain:focus,.el-button--success.is-plain:hover{background:#fff;border-color:#13ce66;color:#13ce66}.el-button--success.is-plain:active{background:#fff;border-color:#11b95c;color:#11b95c;outline:0}.el-button--warning{color:#fff;background-color:#f7ba2a;border-color:#f7ba2a}.el-button--warning:focus,.el-button--warning:hover{background:#f9c855;border-color:#f9c855;color:#fff}.el-button--warning.is-active,.el-button--warning:active{background:#dea726;border-color:#dea726;color:#fff}.el-button--warning:active{outline:0}.el-button--warning.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--warning.is-plain:focus,.el-button--warning.is-plain:hover{background:#fff;border-color:#f7ba2a;color:#f7ba2a}.el-button--warning.is-plain:active{background:#fff;border-color:#dea726;color:#dea726;outline:0}.el-button--danger{color:#fff;background-color:#ff4949;border-color:#ff4949}.el-button--danger:focus,.el-button--danger:hover{background:#ff6d6d;border-color:#ff6d6d;color:#fff}.el-button--danger.is-active,.el-button--danger:active{background:#e64242;border-color:#e64242;color:#fff}.el-button--danger:active{outline:0}.el-button--danger.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--danger.is-plain:focus,.el-button--danger.is-plain:hover{background:#fff;border-color:#ff4949;color:#ff4949}.el-button--danger.is-plain:active{background:#fff;border-color:#e64242;color:#e64242;outline:0}.el-button--info{color:#fff;background-color:#50bfff;border-color:#50bfff}.el-button--info:focus,.el-button--info:hover{background:#73ccff;border-color:#73ccff;color:#fff}.el-button--info.is-active,.el-button--info:active{background:#48ace6;border-color:#48ace6;color:#fff}.el-button--info:active{outline:0}.el-button--info.is-plain{background:#fff;border:1px solid #bfcbd9;color:#1f2d3d}.el-button--info.is-plain:focus,.el-button--info.is-plain:hover{background:#fff;border-color:#50bfff;color:#50bfff}.el-button--info.is-plain:active{background:#fff;border-color:#48ace6;color:#48ace6;outline:0}.el-button--large{padding:11px 19px;font-size:16px;border-radius:4px}.el-button--small{padding:7px 9px;font-size:12px;border-radius:4px}.el-button--mini{padding:4px;font-size:12px;border-radius:4px}.el-button--text{border:none;color:#20a0ff;background:0 0;padding-left:0;padding-right:0}.el-input__inner,.el-textarea__inner{box-sizing:border-box;background-image:none}.el-button--text:focus,.el-button--text:hover{color:#4db3ff}.el-button--text:active{color:#1d90e6}.el-button-group{vertical-align:middle}.el-button-group .el-button--primary:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--primary:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--primary:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--success:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--warning:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--danger:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:first-child{border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:last-child{border-left-color:rgba(255,255,255,.5)}.el-button-group .el-button--info:not(:first-child):not(:last-child){border-left-color:rgba(255,255,255,.5);border-right-color:rgba(255,255,255,.5)}.el-button-group .el-button{float:left;position:relative}.el-button-group .el-button+.el-button{margin-left:0}.el-button-group .el-button:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.el-button-group .el-button:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.el-button-group .el-button:not(:first-child):not(:last-child){border-radius:0}.el-button-group .el-button:not(:last-child){margin-right:-1px}.el-button-group .el-button.is-active,.el-button-group .el-button:active,.el-button-group .el-button:focus,.el-button-group .el-button:hover{z-index:1}.el-input{position:relative;font-size:14px;width:100%}.el-input-group__append .el-button,.el-input-group__append .el-input,.el-input-group__prepend .el-button,.el-input-group__prepend .el-input,.el-input__inner{font-size:inherit}.el-input.is-disabled .el-input__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-input.is-disabled .el-input__inner::-webkit-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::-moz-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner:-ms-input-placeholder{color:#bfcbd9}.el-input.is-disabled .el-input__inner::placeholder{color:#bfcbd9}.el-input.is-active .el-input__inner{outline:0;border-color:#20a0ff}.el-input__inner{-moz-appearance:none;appearance:none;background-color:#fff;border-radius:4px;border:1px solid #bfcbd9;color:#1f2d3d;display:block;height:36px;padding:3px 10px;transition:border-color .2s cubic-bezier(.645,.045,.355,1);width:100%}.el-input__inner::-webkit-input-placeholder{color:#97a8be}.el-input__inner::-moz-placeholder{color:#97a8be}.el-input__inner:-ms-input-placeholder{color:#97a8be}.el-input__inner::placeholder{color:#97a8be}.el-input__inner:hover{border-color:#8391a5}.el-input__inner:focus{outline:0;border-color:#20a0ff}.el-input__icon{position:absolute;width:35px;height:100%;right:0;top:0;text-align:center;color:#bfcbd9;transition:all .3s}.el-input__icon:after{content:'';height:100%;width:0;display:inline-block;vertical-align:middle}.el-input__icon+.el-input__inner{padding-right:35px}.el-input__icon.is-clickable:hover{cursor:pointer;color:#8391a5}.el-input__icon.is-clickable:hover+.el-input__inner{border-color:#8391a5}.el-input--large{font-size:16px}.el-input--large .el-input__inner{height:42px}.el-input--small{font-size:13px}.el-input--small .el-input__inner{height:30px}.el-input--mini{font-size:12px}.el-input--mini .el-input__inner{height:22px}.el-input-group{line-height:normal;display:inline-table;width:100%;border-collapse:separate}.el-input-group>.el-input__inner{vertical-align:middle;display:table-cell}.el-input-group__append,.el-input-group__prepend{background-color:#fbfdff;color:#97a8be;vertical-align:middle;display:table-cell;position:relative;border:1px solid #bfcbd9;border-radius:4px;padding:0 10px;width:1%;white-space:nowrap}.el-input-group--prepend .el-input__inner,.el-input-group__append{border-top-left-radius:0;border-bottom-left-radius:0}.el-input-group--append .el-input__inner,.el-input-group__prepend{border-top-right-radius:0;border-bottom-right-radius:0}.el-input-group__append .el-button,.el-input-group__append .el-select,.el-input-group__prepend .el-button,.el-input-group__prepend .el-select{display:block;margin:-10px}.el-input-group__append button.el-button,.el-input-group__append div.el-select .el-input__inner,.el-input-group__append div.el-select:hover .el-input__inner,.el-input-group__prepend button.el-button,.el-input-group__prepend div.el-select .el-input__inner,.el-input-group__prepend div.el-select:hover .el-input__inner{border-color:transparent;background-color:transparent;color:inherit;border-top:0;border-bottom:0}.el-input-group__prepend{border-right:0}.el-input-group__append{border-left:0}.el-textarea{display:inline-block;width:100%;vertical-align:bottom}.el-textarea.is-disabled .el-textarea__inner{background-color:#eef1f6;border-color:#d1dbe5;color:#bbb;cursor:not-allowed}.el-textarea.is-disabled .el-textarea__inner::-webkit-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::-moz-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner:-ms-input-placeholder{color:#bfcbd9}.el-textarea.is-disabled .el-textarea__inner::placeholder{color:#bfcbd9}.el-textarea__inner{display:block;resize:vertical;padding:5px 7px;line-height:1.5;width:100%;font-size:14px;color:#1f2d3d;background-color:#fff;border:1px solid #bfcbd9;border-radius:4px;transition:border-color .2s cubic-bezier(.645,.045,.355,1)}.el-textarea__inner::-webkit-input-placeholder{color:#97a8be}.el-textarea__inner::-moz-placeholder{color:#97a8be}.el-textarea__inner:-ms-input-placeholder{color:#97a8be}.el-textarea__inner::placeholder{color:#97a8be}.el-textarea__inner:hover{border-color:#8391a5}.el-textarea__inner:focus{outline:0;border-color:#20a0ff}.el-message-box{text-align:left;display:inline-block;vertical-align:middle;background-color:#fff;width:420px;border-radius:3px;font-size:16px;overflow:hidden;-webkit-backface-visibility:hidden;backface-visibility:hidden}.el-message-box__wrapper{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center}.el-message-box__wrapper::after{content:\\\"\\\";display:inline-block;height:100%;width:0;vertical-align:middle}.el-message-box__header{position:relative;padding:20px 20px 0}.el-message-box__content{padding:30px 20px;color:#48576a;font-size:14px;position:relative}.el-message-box__close{display:inline-block;position:absolute;top:19px;right:20px;color:#999;cursor:pointer;line-height:20px;text-align:center}.el-message-box__close:hover{color:#20a0ff}.el-message-box__input{padding-top:15px}.el-message-box__input input.invalid,.el-message-box__input input.invalid:focus{border-color:#ff4949}.el-message-box__errormsg{color:#ff4949;font-size:12px;min-height:18px;margin-top:2px}.el-message-box__title{padding-left:0;margin-bottom:0;font-size:16px;font-weight:700;height:18px;color:#333}.el-message-box__message{margin:0}.el-message-box__message p{margin:0;line-height:1.4}.el-message-box__btns{padding:10px 20px 15px;text-align:right}.el-message-box__btns button:nth-child(2){margin-left:10px}.el-message-box__btns-reverse{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.el-message-box__status{position:absolute;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);font-size:36px!important}.el-message-box__status.el-icon-circle-check{color:#13ce66}.el-message-box__status.el-icon-information{color:#50bfff}.el-message-box__status.el-icon-warning{color:#f7ba2a}.el-message-box__status.el-icon-circle-cross{color:#ff4949}.msgbox-fade-enter-active{animation:msgbox-fade-in .3s}.msgbox-fade-leave-active{animation:msgbox-fade-out .3s}@keyframes msgbox-fade-in{0%{transform:translate3d(0,-20px,0);opacity:0}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes msgbox-fade-out{0%{transform:translate3d(0,0,0);opacity:1}100%{transform:translate3d(0,-20px,0);opacity:0}}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/element-ui/lib/theme-default/message-box.css\n// module id = 416\n// module chunks = 0 1 4 5 6 9 10 11 12","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 417\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 418\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 419\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 420\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 421\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 422\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 423\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 424\n// module chunks = 0 1 2","import Vue from 'vue'\nconst updateCrumbs = new Vue() // 更新面包屑\n\nexport { updateCrumbs }\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/crossers.js","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 426\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 427\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 428\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 429\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 430\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 431\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 432\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 434\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 435\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 436\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 437\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 438\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 439\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 440\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 441\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 442\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 443\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 444\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 445\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 446\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 447\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 448\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 449\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 450\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 451\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 452\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 453\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 454\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 455\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 456\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 457\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 459\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 460\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 461\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 462\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 463\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 464\n// module chunks = 0 1","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 465\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 466\n// module chunks = 0 1 2","// import _ from 'lodash'\nlet statuColors = {\n  '待提交': 'waitC',\n  '待确认': 'waitC',\n  '待发布': 'waitC',\n  '待执行': 'waitC',\n  '已发布': 'ok1C',\n  '销售完成': 'ok2C',\n  '已确认确认书': 'ok2C'\n}\nlet amountColors = {\n  '已执行': 'yzx',\n  '未执行': 'wzx',\n  '审批中': 'spz'\n}\nexport default {\n  filters: {\n    filterColor(value) {\n      return statuColors[value]\n    },\n    filterAmountColor(value) {\n      return amountColors[value]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/mixin.js","<template lang=\"pug\">\n  .product-asset-dialog\n    el-dialog(:title=\"dialogData.productName\",v-model=\"visible\")\n      el-form\n        .public-asset-dialog-body\n          .product-mes\n            .mes-title\n              h4 资产信息\n            .mes-body\n              table\n                tbody\n                  tr\n                    th 利率：\n                    td.product-rate 8.00%\n                    th 期限：\n                    td 90天\n                  tr\n                    th 发行方：\n                    td 恒大金服\n                    th\n                    td\n          .now-state\n            .mes-title\n              h4 当前状态\n                span {{dialogData.stated[id]}}\n                i.icon-batonx.icon-shenpi\n            .mes-body\n              table\n                tbody\n                  tr\n                    th {{dialogData.state[id]}}\n                    td {{dialogData.company[id]}}\n                      //- span ￥\n                    th\n                    td\n                      span(:class=\"~'卖出赎回到期'.indexOf(dialogData.state[id]) ? 'gColor' : 'product-rate'\") {{dialogData.accounts[id] | ktCurrency}}\n                  //- tr\n                  //-   th 赎回数据：\n                  //-   td\n                  //-     span ￥\n                  //-     span.redeem 245,742.00\n                  //-   th 已更新\n                  //-   td\n                  //- tr\n                  //-   th 申购数据：\n                  //-   td\n                  //-     span ￥\n                  //-     span.product-rate 183,184,258.00\n                  //-   th 已更新\n                  //-   td\n          .account-info\n            .account-title 账户信息\n            .account-content\n              .account-left\n                .account-left-top 产品账户\n                .account-left-middle\n                  span 打款方向\n                  i\n                .account-left-bottom 资产账户\n              .account-right\n                .account-right-top\n                  table\n                    tbody\n                      tr\n                        th 账户名：\n                        td 广东金融高新区股权交易中心\n                      tr\n                        th 账户：\n                        td.account-color 2232 1937 8710 871\n                      tr\n                        th 开户行：\n                        td 招商银行股份有限公司广州番禹区支行\n                .account-right-bottom\n                  table\n                    tbody\n                      tr\n                        th 账户名：\n                        td 天津旭达过桥有限公司\n                      tr\n                        th 账户：\n                        td.account-color 2310 8372 6532 098\n                      tr\n                        th 开户行：\n                        td 招商银行天津滨海新区支行\n      .dialog-footer(slot=\"footer\")\n        el-button(type=\"primary\", size=\"small\", @click=\"goEaa\", v-if=\"!static && disabled\") 确认审批\n        el-button(type=\"primary\", size=\"small\", @click=\"goEaa\", v-if=\"!static && !disabled\" ,disabled=\"disabled\") 确认审批\n        el-button(type=\"gray\", size=\"small\", @click=\"closeDialog\", v-if=\"!static\") 驳回\n        el-button(type=\"gray\", size=\"small\", @click=\"closeDialog\", v-if=\"static\") 关闭\n</template>\n\n<script>\nimport {\n  Form\n} from 'element-ui'\nimport {\n  merge\n} from 'lodash'\nexport default {\n  props: {\n    static: false // 是否只用来展示当前状态\n  },\n\n  components: {\n    ElForm: Form\n  },\n\n  methods: {\n    showDialog(data, boole, id) {\n      this.disabled = boole\n      this.id = id\n      this.dialogData = merge({}, data)\n      this.visible = true\n    },\n    goEaa() {\n      this.visible = false\n    },\n    closeDialog() {\n      this.visible = false\n    }\n  },\n\n  data() {\n    return {\n      visible: false,\n      id: '',\n      dialogData: {\n        productName: '丰银宝B',\n        assetType: '资产',\n        state: ['买入', '赎回'],\n        company: ['宝信国际ABS集合信托', '广发货币基金'],\n        accounts: [2343526536, 35434546],\n        Surplus: '',\n        stated: ['已执行', '待执行']\n      },\n      disabled: false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './product-asset-dialog.scss';\n</style>\n\n\n\n// WEBPACK FOOTER //\n// AssetDialog.vue?4bb0eb0c","<template lang=\"pug\">\n  .product-asset-dialog\n    el-dialog(:title=\"dialogData.productName\",v-model=\"visible\")\n      el-form\n        .product-asset-dialog-body\n          .product-mes\n            .mes-title\n              h4 产品信息\n            .mes-body\n              table\n                tbody\n                  tr\n                    th 利率：\n                    td.product-rate 6.5%\n                    th 发行期限：\n                    td 1天\n                  tr\n                    th 发行平台：\n                    td 京东金融\n                    th 结算方式：\n                    td 净额计算\n          .now-state\n            .mes-title\n              h4 当前状态\n                span {{dialogData.stated[0]}}\n                i.icon-batonx.icon-shenpi\n            .mes-body\n              table\n                tbody\n                  tr\n                    th 申购数据：\n                    td\n                      //- span ￥\n                      span.product-rate {{dialogData.accounts[0] | ktCurrency}}\n                    th 已更新\n                    td\n                  tr\n                    th 赎回数据：\n                    td\n                      //- span ￥\n                      span.redeem {{dialogData.accounts[1] | ktCurrency}}\n                    th 已更新\n                    td\n                  tr\n                    th 净申购：\n                    td\n                      //- span ￥\n                      span.product-rate {{dialogData.Surplus | ktCurrency}}\n                    th 已更新\n                    td\n          .account-info\n            .account-title 账户信息\n            .account-content\n              .account-left\n                .account-left-top 募集金额\n                .account-left-middle\n                  span 打款方向\n                  i\n                .account-left-bottom 产品账户\n              .account-right\n                .account-right-top\n                  table\n                    tbody\n                      tr\n                        th 账户名：\n                        td 北京和丰永讯金融信息服务有限公司\n                      tr\n                        th 账户：\n                        td.account-color 1109 2037 8610 201\n                      tr\n                        th 开户行：\n                        td 招商银行股份有限公司北京亚运村支行\n                .account-right-bottom\n                  table\n                    tbody\n                      tr\n                        th 账户名：\n                        td 广东金融高新区股权交易中心\n                      tr\n                        th 账户：\n                        td.account-color 2232 1937 8710 871\n                      tr\n                        th 开户行：\n                        td 招商银行股份有限公司广州番禹区支行\n      .dialog-footer(slot=\"footer\")\n        el-button(type=\"primary\", size=\"small\", @click=\"goEaa\", v-if=\"!static && disabled\") 确认审批\n        el-button(type=\"primary\", size=\"small\", @click=\"goEaa\", v-if=\"!static && !disabled\",disabled=\"disabled\") 确认审批\n        el-button(type=\"gray\", size=\"small\", @click=\"closeDialog\", v-if=\"!static\") 驳回\n        el-button(type=\"gray\", size=\"small\", @click=\"closeDialog\", v-if=\"static\") 关闭\n</template>\n\n<script>\nimport {\n  Form\n} from 'element-ui'\nimport {\n  merge\n} from 'lodash'\nexport default {\n  props: {\n    static: false // 是否只用来展示当前状态\n  },\n\n  components: {\n    ElForm: Form\n  },\n\n  methods: {\n    showDialog(data, boole) {\n      this.visible = true\n      this.dialogData = merge({}, data)\n      console.log(this.dialogData)\n      this.disabled = boole\n    },\n    goEaa() {\n      this.visible = false\n    },\n    closeDialog() {\n      this.visible = false\n    }\n  },\n\n  data() {\n    return {\n      visible: false,\n      disabled: '',\n      dialogData: {\n        productName: '丰银宝A',\n        assetType: '资金',\n        state: ['已更新', '已更新'],\n        company: [],\n        accounts: [1235325236, 435346632],\n        Surplus: 799978640,\n        boole: true,\n        stated: ['审批中']\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './product-asset-dialog.scss';\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ProductDialog.vue?48776300","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".product-asset-dialog .el-dialog__header{height:50px;line-height:50px}.product-asset-dialog .el-dialog__body{padding:10px 20px}.product-asset-dialog .now-state{padding:20px 0}.product-asset-dialog .now-state h4 span{margin:0 5px;font-weight:400}.product-asset-dialog .now-state h4 i{color:#d8dadd;font-size:13px}.product-asset-dialog .mes-title{padding-bottom:10px}.product-asset-dialog .mes-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .mes-body{padding-bottom:20px;border-bottom:1px solid #e2e5e9}.product-asset-dialog .mes-body table{table-layout:fixed;width:100%}.product-asset-dialog .mes-body table td,.product-asset-dialog .mes-body table th{font-weight:400;padding:5px 0;color:#84888d}.product-asset-dialog .mes-body table .product-rate{color:#de3569}.product-asset-dialog .mes-body table .gColor{color:#82c5aa}.product-asset-dialog .mes-body table .redeem{color:#16a474}.product-asset-dialog .account-title{padding-bottom:10px}.product-asset-dialog .account-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .account-content{padding:0 40px;height:280px;position:relative}.product-asset-dialog .account-left{position:absolute;left:80px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.product-asset-dialog .account-left-bottom,.product-asset-dialog .account-left-top{padding:5px 0;color:#595f67;font-size:13px;font-weight:700}.product-asset-dialog .account-left-middle span{display:inline-block;width:1rem}.product-asset-dialog .account-left-middle i{margin-left:15px;display:inline-block;height:75px;width:2px;border-radius:2px;background:#badbeb;position:relative}.product-asset-dialog .account-left-middle i:before{content:\\\"\\\";position:absolute;bottom:2px;right:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.product-asset-dialog .account-left-middle i:after{content:\\\"\\\";position:absolute;bottom:2px;left:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.product-asset-dialog .account-right{margin-left:120px}.product-asset-dialog .account-right .account-right-bottom,.product-asset-dialog .account-right .account-right-top{padding:15px 25px;border:1px solid #e2e5e9;border-radius:5px;margin:10px 0}.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top th{font-weight:400;text-align:right}.product-asset-dialog .account-right .account-right-bottom td,.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top td,.product-asset-dialog .account-right .account-right-top th{padding:5px 0}.product-asset-dialog .account-right .account-right-bottom .account-color,.product-asset-dialog .account-right .account-right-top .account-color{color:#538cc0}.product-asset-dialog .el-dialog__footer .success{border:none;background:#9fbedb;color:#fff;font-weight:700}.product-asset-dialog .el-dialog__footer .error{border:none;background:#badbec;color:#fff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/AssetDialog.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAa,AACb,gBAAkB,CACnB,AACD,uCACE,iBAAmB,CACpB,AACD,iCACE,cAAgB,CACjB,AACD,yCACI,aAAc,AACd,eAAoB,CACvB,AACD,sCACI,cAAe,AACf,cAAgB,CACnB,AACD,iCACE,mBAAqB,CACtB,AACD,oCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,gCACE,oBAAqB,AACrB,+BAAiC,CAClC,AACD,sCACI,mBAAoB,AACpB,UAAY,CACf,AACD,kFAEM,gBAAoB,AACpB,cAAe,AACf,aAAe,CACpB,AACD,oDACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,qCACE,mBAAqB,CACtB,AACD,wCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,uCACE,eAAgB,AAChB,aAAc,AACd,iBAAmB,CACpB,AACD,oCACE,kBAAmB,AACnB,UAAW,AACX,QAAS,AACT,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,mFAEE,cAAe,AACf,cAAe,AACf,eAAgB,AAChB,eAAkB,CACnB,AACD,gDACE,qBAAsB,AACtB,UAAY,CACb,AACD,6CACE,iBAAkB,AAClB,qBAAsB,AACtB,YAAa,AACb,UAAW,AACX,kBAAmB,AACnB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,oDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,gCAAiC,AACzB,uBAAyB,CACpC,AACD,mDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,iCAAkC,AAC1B,wBAA0B,CACrC,AACD,qCACE,iBAAmB,CACpB,AACD,mHAEI,kBAAmB,AACnB,yBAA0B,AAC1B,kBAAmB,AACnB,aAAe,CAClB,AACD,yHAEM,gBAAoB,AACpB,gBAAkB,CACvB,AACD,kPAIM,aAAe,CACpB,AACD,iJAEM,aAAe,CACpB,AACD,kDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB,AACD,gDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB\",\"file\":\"AssetDialog.vue\",\"sourcesContent\":[\"\\n.product-asset-dialog .el-dialog__header {\\n  height: 50px;\\n  line-height: 50px;\\n}\\n.product-asset-dialog .el-dialog__body {\\n  padding: 10px 20px;\\n}\\n.product-asset-dialog .now-state {\\n  padding: 20px 0;\\n}\\n.product-asset-dialog .now-state h4 span {\\n    margin: 0 5px;\\n    font-weight: normal;\\n}\\n.product-asset-dialog .now-state h4 i {\\n    color: #d8dadd;\\n    font-size: 13px;\\n}\\n.product-asset-dialog .mes-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .mes-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .mes-body {\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #e2e5e9;\\n}\\n.product-asset-dialog .mes-body table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.product-asset-dialog .mes-body table th,\\n    .product-asset-dialog .mes-body table td {\\n      font-weight: normal;\\n      padding: 5px 0;\\n      color: #84888d;\\n}\\n.product-asset-dialog .mes-body table .product-rate {\\n      color: #de3569;\\n}\\n.product-asset-dialog .mes-body table .gColor {\\n      color: #82c5aa;\\n}\\n.product-asset-dialog .mes-body table .redeem {\\n      color: #16a474;\\n}\\n.product-asset-dialog .account-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .account-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .account-content {\\n  padding: 0 40px;\\n  height: 280px;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left {\\n  position: absolute;\\n  left: 80px;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.product-asset-dialog .account-left-top,\\n.product-asset-dialog .account-left-bottom {\\n  padding: 5px 0;\\n  color: #595f67;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .account-left-middle span {\\n  display: inline-block;\\n  width: 1rem;\\n}\\n.product-asset-dialog .account-left-middle i {\\n  margin-left: 15px;\\n  display: inline-block;\\n  height: 75px;\\n  width: 2px;\\n  border-radius: 2px;\\n  background: #badbeb;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left-middle i:before {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    right: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n}\\n.product-asset-dialog .account-left-middle i:after {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    left: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg);\\n}\\n.product-asset-dialog .account-right {\\n  margin-left: 120px;\\n}\\n.product-asset-dialog .account-right .account-right-top,\\n  .product-asset-dialog .account-right .account-right-bottom {\\n    padding: 15px 25px;\\n    border: 1px solid #e2e5e9;\\n    border-radius: 5px;\\n    margin: 10px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-bottom th {\\n      font-weight: normal;\\n      text-align: right;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-top td,\\n    .product-asset-dialog .account-right .account-right-bottom th,\\n    .product-asset-dialog .account-right .account-right-bottom td {\\n      padding: 5px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top .account-color,\\n    .product-asset-dialog .account-right .account-right-bottom .account-color {\\n      color: #538cc0;\\n}\\n.product-asset-dialog .el-dialog__footer .success {\\n  border: none;\\n  background: #9fbedb;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .el-dialog__footer .error {\\n  border: none;\\n  background: #badbec;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-24e156bf\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/AssetDialog.vue\n// module id = 471\n// module chunks = 0 2 8","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".product-asset-dialog .el-dialog__header{height:50px;line-height:50px}.product-asset-dialog .el-dialog__body{padding:10px 20px}.product-asset-dialog .now-state{padding:20px 0}.product-asset-dialog .now-state h4 span{margin:0 5px;font-weight:400}.product-asset-dialog .now-state h4 i{color:#d8dadd;font-size:13px}.product-asset-dialog .mes-title{padding-bottom:10px}.product-asset-dialog .mes-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .mes-body{padding-bottom:20px;border-bottom:1px solid #e2e5e9}.product-asset-dialog .mes-body table{table-layout:fixed;width:100%}.product-asset-dialog .mes-body table td,.product-asset-dialog .mes-body table th{font-weight:400;padding:5px 0;color:#84888d}.product-asset-dialog .mes-body table .product-rate{color:#de3569}.product-asset-dialog .mes-body table .gColor{color:#82c5aa}.product-asset-dialog .mes-body table .redeem{color:#16a474}.product-asset-dialog .account-title{padding-bottom:10px}.product-asset-dialog .account-title h4{font-size:15px;color:#595f67;font-weight:500}.product-asset-dialog .account-content{padding:0 40px;height:280px;position:relative}.product-asset-dialog .account-left{position:absolute;left:80px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.product-asset-dialog .account-left-bottom,.product-asset-dialog .account-left-top{padding:5px 0;color:#595f67;font-size:13px;font-weight:700}.product-asset-dialog .account-left-middle span{display:inline-block;width:1rem}.product-asset-dialog .account-left-middle i{margin-left:15px;display:inline-block;height:75px;width:2px;border-radius:2px;background:#badbeb;position:relative}.product-asset-dialog .account-left-middle i:before{content:\\\"\\\";position:absolute;bottom:2px;right:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.product-asset-dialog .account-left-middle i:after{content:\\\"\\\";position:absolute;bottom:2px;left:-1px;width:10px;height:2px;background:#badbeb;border-radius:2px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.product-asset-dialog .account-right{margin-left:120px}.product-asset-dialog .account-right .account-right-bottom,.product-asset-dialog .account-right .account-right-top{padding:15px 25px;border:1px solid #e2e5e9;border-radius:5px;margin:10px 0}.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top th{font-weight:400;text-align:right}.product-asset-dialog .account-right .account-right-bottom td,.product-asset-dialog .account-right .account-right-bottom th,.product-asset-dialog .account-right .account-right-top td,.product-asset-dialog .account-right .account-right-top th{padding:5px 0}.product-asset-dialog .account-right .account-right-bottom .account-color,.product-asset-dialog .account-right .account-right-top .account-color{color:#538cc0}.product-asset-dialog .el-dialog__footer .success{border:none;background:#9fbedb;color:#fff;font-weight:700}.product-asset-dialog .el-dialog__footer .error{border:none;background:#badbec;color:#fff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/ProductDialog.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAa,AACb,gBAAkB,CACnB,AACD,uCACE,iBAAmB,CACpB,AACD,iCACE,cAAgB,CACjB,AACD,yCACI,aAAc,AACd,eAAoB,CACvB,AACD,sCACI,cAAe,AACf,cAAgB,CACnB,AACD,iCACE,mBAAqB,CACtB,AACD,oCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,gCACE,oBAAqB,AACrB,+BAAiC,CAClC,AACD,sCACI,mBAAoB,AACpB,UAAY,CACf,AACD,kFAEM,gBAAoB,AACpB,cAAe,AACf,aAAe,CACpB,AACD,oDACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,8CACM,aAAe,CACpB,AACD,qCACE,mBAAqB,CACtB,AACD,wCACI,eAAgB,AAChB,cAAe,AACf,eAAiB,CACpB,AACD,uCACE,eAAgB,AAChB,aAAc,AACd,iBAAmB,CACpB,AACD,oCACE,kBAAmB,AACnB,UAAW,AACX,QAAS,AACT,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,mFAEE,cAAe,AACf,cAAe,AACf,eAAgB,AAChB,eAAkB,CACnB,AACD,gDACE,qBAAsB,AACtB,UAAY,CACb,AACD,6CACE,iBAAkB,AAClB,qBAAsB,AACtB,YAAa,AACb,UAAW,AACX,kBAAmB,AACnB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,oDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,gCAAiC,AACzB,uBAAyB,CACpC,AACD,mDACI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,kBAAmB,AACnB,iCAAkC,AAC1B,wBAA0B,CACrC,AACD,qCACE,iBAAmB,CACpB,AACD,mHAEI,kBAAmB,AACnB,yBAA0B,AAC1B,kBAAmB,AACnB,aAAe,CAClB,AACD,yHAEM,gBAAoB,AACpB,gBAAkB,CACvB,AACD,kPAIM,aAAe,CACpB,AACD,iJAEM,aAAe,CACpB,AACD,kDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB,AACD,gDACE,YAAa,AACb,mBAAoB,AACpB,WAAY,AACZ,eAAkB,CACnB\",\"file\":\"ProductDialog.vue\",\"sourcesContent\":[\"\\n.product-asset-dialog .el-dialog__header {\\n  height: 50px;\\n  line-height: 50px;\\n}\\n.product-asset-dialog .el-dialog__body {\\n  padding: 10px 20px;\\n}\\n.product-asset-dialog .now-state {\\n  padding: 20px 0;\\n}\\n.product-asset-dialog .now-state h4 span {\\n    margin: 0 5px;\\n    font-weight: normal;\\n}\\n.product-asset-dialog .now-state h4 i {\\n    color: #d8dadd;\\n    font-size: 13px;\\n}\\n.product-asset-dialog .mes-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .mes-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .mes-body {\\n  padding-bottom: 20px;\\n  border-bottom: 1px solid #e2e5e9;\\n}\\n.product-asset-dialog .mes-body table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.product-asset-dialog .mes-body table th,\\n    .product-asset-dialog .mes-body table td {\\n      font-weight: normal;\\n      padding: 5px 0;\\n      color: #84888d;\\n}\\n.product-asset-dialog .mes-body table .product-rate {\\n      color: #de3569;\\n}\\n.product-asset-dialog .mes-body table .gColor {\\n      color: #82c5aa;\\n}\\n.product-asset-dialog .mes-body table .redeem {\\n      color: #16a474;\\n}\\n.product-asset-dialog .account-title {\\n  padding-bottom: 10px;\\n}\\n.product-asset-dialog .account-title h4 {\\n    font-size: 15px;\\n    color: #595f67;\\n    font-weight: 500;\\n}\\n.product-asset-dialog .account-content {\\n  padding: 0 40px;\\n  height: 280px;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left {\\n  position: absolute;\\n  left: 80px;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.product-asset-dialog .account-left-top,\\n.product-asset-dialog .account-left-bottom {\\n  padding: 5px 0;\\n  color: #595f67;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .account-left-middle span {\\n  display: inline-block;\\n  width: 1rem;\\n}\\n.product-asset-dialog .account-left-middle i {\\n  margin-left: 15px;\\n  display: inline-block;\\n  height: 75px;\\n  width: 2px;\\n  border-radius: 2px;\\n  background: #badbeb;\\n  position: relative;\\n}\\n.product-asset-dialog .account-left-middle i:before {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    right: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n}\\n.product-asset-dialog .account-left-middle i:after {\\n    content: '';\\n    position: absolute;\\n    bottom: 2px;\\n    left: -1px;\\n    width: 10px;\\n    height: 2px;\\n    background: #badbeb;\\n    border-radius: 2px;\\n    -webkit-transform: rotate(-45deg);\\n            transform: rotate(-45deg);\\n}\\n.product-asset-dialog .account-right {\\n  margin-left: 120px;\\n}\\n.product-asset-dialog .account-right .account-right-top,\\n  .product-asset-dialog .account-right .account-right-bottom {\\n    padding: 15px 25px;\\n    border: 1px solid #e2e5e9;\\n    border-radius: 5px;\\n    margin: 10px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-bottom th {\\n      font-weight: normal;\\n      text-align: right;\\n}\\n.product-asset-dialog .account-right .account-right-top th,\\n    .product-asset-dialog .account-right .account-right-top td,\\n    .product-asset-dialog .account-right .account-right-bottom th,\\n    .product-asset-dialog .account-right .account-right-bottom td {\\n      padding: 5px 0;\\n}\\n.product-asset-dialog .account-right .account-right-top .account-color,\\n    .product-asset-dialog .account-right .account-right-bottom .account-color {\\n      color: #538cc0;\\n}\\n.product-asset-dialog .el-dialog__footer .success {\\n  border: none;\\n  background: #9fbedb;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n.product-asset-dialog .el-dialog__footer .error {\\n  border: none;\\n  background: #badbec;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-ba436384\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/ProductDialog.vue\n// module id = 473\n// module chunks = 0 2 8","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 474\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 475\n// module chunks = 0 1","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 476\n// module chunks = 0 1","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 477\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 478\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 479\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 480\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 481\n// module chunks = 0 1 2","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 482\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 483\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 484\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 485\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 486\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 487\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 488\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 489\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 490\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 491\n// module chunks = 0 1","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 492\n// module chunks = 0 1","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 493\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 494\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 495\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 496\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 497\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 498\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 499\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 500\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 501\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 502\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 503\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/series.js\n// module id = 504\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 505\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 506\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 507\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 508\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 509\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 510\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 511\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AssetDialog.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"31d95752\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AssetDialog.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./AssetDialog.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-24e156bf\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/AssetDialog.vue\n// module id = 512\n// module chunks = 0 2 8","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDialog.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5d7236cf\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDialog.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDialog.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-ba436384\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/ProductDialog.vue\n// module id = 514\n// module chunks = 0 2 8","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-24e156bf\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./AssetDialog.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./AssetDialog.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-24e156bf\\\"}!../../node_modules/vue-loader/lib/template-loader?raw&engine=pug!../../node_modules/vue-loader/lib/selector?type=template&index=0!./AssetDialog.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/AssetDialog.vue\n// module id = 515\n// module chunks = 0 2 8","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-ba436384\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ProductDialog.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProductDialog.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-ba436384\\\"}!../../node_modules/vue-loader/lib/template-loader?raw&engine=pug!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProductDialog.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ProductDialog.vue\n// module id = 516\n// module chunks = 0 2 8","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"product-asset-dialog\"\n  }, [_c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogData.productName\n    },\n    model: {\n      value: (_vm.visible),\n      callback: function($$v) {\n        _vm.visible = $$v\n      },\n      expression: \"visible\"\n    }\n  }, [_c('el-form', [_c('div', {\n    staticClass: \"public-asset-dialog-body\"\n  }, [_c('div', {\n    staticClass: \"product-mes\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"资产信息\")])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(\"8.00%\")]), _c('th', [_vm._v(\"期限：\")]), _c('td', [_vm._v(\"90天\")])]), _c('tr', [_c('th', [_vm._v(\"发行方：\")]), _c('td', [_vm._v(\"恒大金服\")]), _c('th'), _c('td')])])])])]), _c('div', {\n    staticClass: \"now-state\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"当前状态\"), _c('span', [_vm._v(_vm._s(_vm.dialogData.stated[_vm.id]))]), _c('i', {\n    staticClass: \"icon-batonx icon-shenpi\"\n  })])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(_vm._s(_vm.dialogData.state[_vm.id]))]), _c('td', [_vm._v(_vm._s(_vm.dialogData.company[_vm.id]))]), _c('th'), _c('td', [_c('span', {\n    class: ~'卖出赎回到期'.indexOf(_vm.dialogData.state[_vm.id]) ? 'gColor' : 'product-rate'\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[_vm.id])))])])])])])])]), _c('div', {\n    staticClass: \"account-info\"\n  }, [_c('div', {\n    staticClass: \"account-title\"\n  }, [_vm._v(\"账户信息\")]), _c('div', {\n    staticClass: \"account-content\"\n  }, [_c('div', {\n    staticClass: \"account-left\"\n  }, [_c('div', {\n    staticClass: \"account-left-top\"\n  }, [_vm._v(\"产品账户\")]), _c('div', {\n    staticClass: \"account-left-middle\"\n  }, [_c('span', [_vm._v(\"打款方向\")]), _c('i')]), _c('div', {\n    staticClass: \"account-left-bottom\"\n  }, [_vm._v(\"资产账户\")])]), _c('div', {\n    staticClass: \"account-right\"\n  }, [_c('div', {\n    staticClass: \"account-right-top\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"广东金融高新区股权交易中心\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2232 1937 8710 871\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司广州番禹区支行\")])])])])]), _c('div', {\n    staticClass: \"account-right-bottom\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"天津旭达过桥有限公司\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2310 8372 6532 098\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行天津滨海新区支行\")])])])])])])])])])]), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [(!_vm.static && _vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static && !_vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\",\n      \"disabled\": \"disabled\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"驳回\")]) : _vm._e(), (_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"关闭\")]) : _vm._e()], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-24e156bf\"}!./~/vue-loader/lib/template-loader.js?raw&engine=pug!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/AssetDialog.vue\n// module id = 518\n// module chunks = 0 2 8","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"product-asset-dialog\"\n  }, [_c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogData.productName\n    },\n    model: {\n      value: (_vm.visible),\n      callback: function($$v) {\n        _vm.visible = $$v\n      },\n      expression: \"visible\"\n    }\n  }, [_c('el-form', [_c('div', {\n    staticClass: \"product-asset-dialog-body\"\n  }, [_c('div', {\n    staticClass: \"product-mes\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"产品信息\")])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(\"6.5%\")]), _c('th', [_vm._v(\"发行期限：\")]), _c('td', [_vm._v(\"1天\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"京东金融\")]), _c('th', [_vm._v(\"结算方式：\")]), _c('td', [_vm._v(\"净额计算\")])])])])])]), _c('div', {\n    staticClass: \"now-state\"\n  }, [_c('div', {\n    staticClass: \"mes-title\"\n  }, [_c('h4', [_vm._v(\"当前状态\"), _c('span', [_vm._v(_vm._s(_vm.dialogData.stated[0]))]), _c('i', {\n    staticClass: \"icon-batonx icon-shenpi\"\n  })])]), _c('div', {\n    staticClass: \"mes-body\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"申购数据：\")]), _c('td', [_c('span', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[0])))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')]), _c('tr', [_c('th', [_vm._v(\"赎回数据：\")]), _c('td', [_c('span', {\n    staticClass: \"redeem\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.accounts[1])))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')]), _c('tr', [_c('th', [_vm._v(\"净申购：\")]), _c('td', [_c('span', {\n    staticClass: \"product-rate\"\n  }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(_vm.dialogData.Surplus)))])]), _c('th', [_vm._v(\"已更新\")]), _c('td')])])])])]), _c('div', {\n    staticClass: \"account-info\"\n  }, [_c('div', {\n    staticClass: \"account-title\"\n  }, [_vm._v(\"账户信息\")]), _c('div', {\n    staticClass: \"account-content\"\n  }, [_c('div', {\n    staticClass: \"account-left\"\n  }, [_c('div', {\n    staticClass: \"account-left-top\"\n  }, [_vm._v(\"募集金额\")]), _c('div', {\n    staticClass: \"account-left-middle\"\n  }, [_c('span', [_vm._v(\"打款方向\")]), _c('i')]), _c('div', {\n    staticClass: \"account-left-bottom\"\n  }, [_vm._v(\"产品账户\")])]), _c('div', {\n    staticClass: \"account-right\"\n  }, [_c('div', {\n    staticClass: \"account-right-top\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"北京和丰永讯金融信息服务有限公司\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"1109 2037 8610 201\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司北京亚运村支行\")])])])])]), _c('div', {\n    staticClass: \"account-right-bottom\"\n  }, [_c('table', [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(\"广东金融高新区股权交易中心\")])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n    staticClass: \"account-color\"\n  }, [_vm._v(\"2232 1937 8710 871\")])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(\"招商银行股份有限公司广州番禹区支行\")])])])])])])])])])]), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [(!_vm.static && _vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static && !_vm.disabled) ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\",\n      \"disabled\": \"disabled\"\n    },\n    on: {\n      \"click\": _vm.goEaa\n    }\n  }, [_vm._v(\"确认审批\")]) : _vm._e(), (!_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"驳回\")]) : _vm._e(), (_vm.static) ? _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.closeDialog\n    }\n  }, [_vm._v(\"关闭\")]) : _vm._e()], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-ba436384\"}!./~/vue-loader/lib/template-loader.js?raw&engine=pug!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ProductDialog.vue\n// module id = 520\n// module chunks = 0 2 8","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 521\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 522\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 523\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 524\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 525\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 526\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 527\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 528\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 529\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 530\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 531\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 532\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 533\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 534\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 535\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 536\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 537\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 538\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 539\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 540\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 541\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 542\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 543\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 544\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 545\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 546\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 547\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 548\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 549\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 550\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 551\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 552\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 553\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 554\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 555\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 556\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 557\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 558\n// module chunks = 0 1 2","<template lang=\"pug\">\n  .line-echart(ref=\"lineEchart\")\n</template>\n\n<script>\nimport echarts from 'echarts/lib/echarts'\nrequire('echarts/lib/chart/bar')\nrequire('echarts/lib/chart/line')\nrequire('echarts/lib/model/series')\nrequire('echarts/lib/component/tooltip')\nrequire('echarts/lib/component/legend')\nrequire('echarts/lib/component/grid')\nrequire('echarts/lib/component/axis')\nimport {\n  merge,\n  concat,\n  map\n} from 'lodash'\nimport Vue from 'vue'\n\nexport default {\n  props: ['chartOption'],\n  data() {\n    return {\n      echart: null\n    }\n  },\n\n  mounted() {\n    this.echart = echarts.init(this.$refs.lineEchart)\n    var option = {\n      legend: {\n        itemWidth: 10,\n        itemHeight: 10,\n        itemGap: 20,\n        textStyle: {\n          color: '#262c38',\n          fontSize: 12\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        formatter: (params, ticket, callback) => {\n          if (!params.length) return\n          return concat([`<table class=\"chart-tooltip\"><tr><th colspan=\"2\">${params[0].name}</th><tr>`],\n            map(params, v => {\n              return `<tr class=\"line\">\n                        <td class=\"left\"><i class=\"circle\" style=\"color:${v.color}\"></i>${v.seriesName}：</td>\n                        <td class=\"right\">${Vue.filter('ktCurrency')(v.value)}</td>\n                      </tr>`\n            }), '</table>').join('')\n        }\n      },\n      xAxis: {\n        type: 'category',\n        // data: map(data.fund_trends, v => moment(v.date).format('MM-DD')),\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#2a313b'\n          }\n        }\n      },\n      yAxis: {\n        type: 'value',\n        name: '',\n        interval: 0,\n        axisLabel: {\n          show: true,\n          formatter: '{value}'\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#2a313b'\n          }\n        },\n        axisTick: {\n          show: true\n        },\n        splitLine: {\n          show: false\n        }\n      },\n      grid: {\n        show: false,\n        left: 70,\n        right: 20,\n        bottom: 60\n      }\n    }\n\n    this.echart.setOption(merge({}, option, this.chartOption))\n    window.addEventListener('resize', () => {\n      this.echart.resize()\n    })\n  },\n\n  watch: {\n    chartOption() {\n      this.echart.setOption(this.chartOption)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.line-echart {\n  min-width: 500px;\n  height: 100%;\n  margin: 0 auto;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// LineEchart.vue?76b88402","<template lang=\"pug\">\n .notes-box\n    el-row\n      el-col(:span=\"1\")\n        label 备注：\n      el-col(:span=\"addNoteFocus ? 21 : 23\")\n        el-input(@focus=\"addNoteFocus = true\", @keyup.enter=\"addNote\", type=\"textarea\", :rows=\"2\", placeholder=\"点击添加备注\", v-model=\"newNote\")\n      el-col(:span=\"2\", v-if=\"addNoteFocus\")\n        el-button.add-note-btn(size=\"small\", type=\"primary\", @click=\"addNote\") 添加\n    .notes(ref=\"notes\")\n      .note-line(v-for=\"note in showNotes\")\n        .note-time-line\n          | {{note.createdAt | moment('YYYY-MM-DD')}}\n          i.icon-circle\n          | {{note.createdAt | moment('HH:mm')}}\n        .note-content\n          .operations\n            i.icon-batonx.icon-edit(@click=\"editNote(note)\", v-show=\"!note.editActive\")\n            i.icon-batonx.icon-success(@click=\"saveNote(note)\", v-show=\"note.editActive\")\n            i.icon-batonx.icon-remind(v-show=\"note.remindActive\")\n              el-date-picker(type=\"datetime\")\n            i.icon-batonx.icon-close(@click=\"resetNote(note)\", v-show=\"note.editActive\")\n            i.icon-batonx.icon-close(@click=\"deleteNote(note)\", v-show=\"!note.editActive\")\n          .created-time(v-show='!note.editActive')\n            | 创建时间 {{note.create_at| moment('YYYY-MM-DD HH:mm')}}\n          el-input(type=\"textarea\", :disabled=\"!note.editActive\", :rows=\"3\", v-model=\"note.textEdit\", :id=\"'note_' + note.id\")\n    .more-note.text-center(@click=\"moreNote\")\n      span(v-show='noteVisibleCount < notes.length')\n        i.icon-batonx.icon-down\n        | 显示更多备注信息\n      span(v-show='noteVisibleCount >= notes.length')\n        | 没有更多了\n</template>\n\n<script>\nimport {\n  remove,\n  merge,\n  uniqueId\n} from 'lodash'\nimport {\n  Message,\n  MessageBox\n} from 'element-ui'\n\nexport default {\n  props: {\n    passedNotes: {\n      type: Array,\n      default () {\n        return []\n      }\n    }\n  },\n  methods: {\n    addNote() {\n      if (this.notes.length >= 50) {\n        Message.warn('备注个数不得超过50个')\n        return\n      }\n\n      if (!this.newNote) {\n        Message.error('备注不能为空!')\n        return\n      }\n\n      this.notes.unshift({\n        id: uniqueId('new_note_'),\n        editActive: false,\n        text: this.newNote,\n        textEdit: this.newNote,\n        createdAt: new Date()\n      })\n\n      this.newNote = ''\n      this.addNoteFocus = false\n    },\n\n    saveNote(note) {\n      note.text = note.textEdit\n      note.editActive = false\n    },\n\n    moreNote() {\n      if (this.noteVisibleCount >= this.notes.length) {\n        Message.info('没有更多了')\n        return\n      }\n      this.noteVisibleCount += this.noteMoreStep\n    },\n\n    editNote(note) {\n      note.editActive = true\n      this.$nextTick(() => {\n        const textarea = this.$refs.notes.querySelector(`#note_${note.id} textarea`)\n        textarea.focus()\n      })\n    },\n\n    resetNote(note) {\n      note.textEdit = note.text\n      note.editActive = false\n    },\n\n    deleteNote(note) {\n      MessageBox.confirm('此操作将永久删除改批注, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.notes = remove(this.notes, (v) => {\n          return note.id !== v.id\n        })\n      })\n    }\n  },\n\n  computed: {\n    showNotes() {\n      return this.notes.slice(0, this.noteVisibleCount)\n    }\n  },\n\n  data() {\n    return {\n      notes: merge([], this.passedNotes),\n      newNote: '',\n      addNoteFocus: false,\n      noteVisibleCount: 2,\n      noteMoreStep: 5\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.notes-box {\n  .notes {\n    padding-top: 20px;\n  }\n  .note-line {\n    margin-bottom: 20px;\n    position: relative;\n    &:last-of-type {\n      overflow: hidden;\n    }\n  }\n  .note-time-line {\n    float: left;\n    width: 170px;\n    text-align: center;\n    padding-top: 35px;\n  }\n  .note-content {\n    overflow: hidden;\n    .created-time {\n      color: #929aa3;\n      position: absolute;\n      right: 10px;\n      bottom: 10px;\n    }\n    .operations {\n      margin-bottom: 5px;\n      text-align: right;\n      font-size: 12px;\n      color: #c9cdd1;\n      .icon-close {\n        display: inline-block;\n        transform: scale(.8);\n      }\n      .icon-batonx {\n        margin-left: 10px;\n        cursor: pointer;\n        &:hover {\n          color: #538cc0;\n        }\n      }\n      .icon-remind{\n          font-size:15px;\n          color:#c9cdd1;\n          position: relative;\n          display: inline-block;\n          font-weight: bold;\n           .el-input{\n                width:100%;\n                height:100%;\n                position: absolute;\n                top:0px;\n                right:0px;\n                opacity:0;\n                cursor: pointer;\n              }\n              .el-input__inner{\n                padding:none;\n                height:0;\n                line-height: 0;\n                border:none;\n                // opacity:0;\n              }\n        }\n    }\n  }\n  label {\n    padding-top: 15px;\n    display: inline-block;\n  }\n  .el-textarea.is-disabled {\n    .el-textarea__inner {\n      color: #595f67;\n      border-color: #e2e5e9;\n      cursor: auto;\n      background: white;\n    }\n  }\n  .add-note-btn {\n    margin: 10px 0 0 10px;\n  }\n  .icon-circle {\n    display: inline-block;\n    border-radius: 50%;\n    width: 14px;\n    height: 14px;\n    background: #c5e4f1;\n    vertical-align: -2px;\n    margin: 0 5px 0 8px;\n    position: relative;\n    &:before {\n      width: 4px;\n      position: absolute;\n      content: '';\n      height: 9em;\n      background: #c5e4f1;\n      top: -1em;\n      left: 5px;\n    }\n  }\n  .more-note {\n    color: #595f67;\n    cursor: pointer;\n    &:hover {\n      color: #538cc0;\n    }\n    .icon-down {\n      margin-right: 10px;\n      color: #538cc0;\n    }\n    margin-bottom: 10px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// NoteCard.vue?11971039","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".line-echart{min-width:500px;height:100%;margin:0 auto}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/LineEchart.vue\"],\"names\":[],\"mappings\":\"AACA,aACE,gBAAiB,AACjB,YAAa,AACb,aAAe,CAChB\",\"file\":\"LineEchart.vue\",\"sourcesContent\":[\"\\n.line-echart {\\n  min-width: 500px;\\n  height: 100%;\\n  margin: 0 auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-6f15d216\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/LineEchart.vue\n// module id = 572\n// module chunks = 0 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".notes-box .notes{padding-top:20px}.notes-box .note-line{margin-bottom:20px;position:relative}.notes-box .note-line:last-of-type{overflow:hidden}.notes-box .note-time-line{float:left;width:170px;text-align:center;padding-top:35px}.notes-box .note-content{overflow:hidden}.notes-box .note-content .created-time{color:#929aa3;position:absolute;right:10px;bottom:10px}.notes-box .note-content .operations{margin-bottom:5px;text-align:right;font-size:12px;color:#c9cdd1}.notes-box .note-content .operations .icon-close{display:inline-block;-webkit-transform:scale(.8);transform:scale(.8)}.notes-box .note-content .operations .icon-batonx{margin-left:10px;cursor:pointer}.notes-box .note-content .operations .icon-batonx:hover{color:#538cc0}.notes-box .note-content .operations .icon-remind{font-size:15px;color:#c9cdd1;position:relative;display:inline-block;font-weight:700}.notes-box .note-content .operations .icon-remind .el-input{width:100%;height:100%;position:absolute;top:0;right:0;opacity:0;cursor:pointer}.notes-box .note-content .operations .icon-remind .el-input__inner{padding:none;height:0;line-height:0;border:none}.notes-box label{padding-top:15px;display:inline-block}.notes-box .el-textarea.is-disabled .el-textarea__inner{color:#595f67;border-color:#e2e5e9;cursor:auto;background:#fff}.notes-box .add-note-btn{margin:10px 0 0 10px}.notes-box .icon-circle{display:inline-block;border-radius:50%;width:14px;height:14px;background:#c5e4f1;vertical-align:-2px;margin:0 5px 0 8px;position:relative}.notes-box .icon-circle:before{width:4px;position:absolute;content:\\\"\\\";height:9em;background:#c5e4f1;top:-1em;left:5px}.notes-box .more-note{color:#595f67;cursor:pointer;margin-bottom:10px}.notes-box .more-note:hover{color:#538cc0}.notes-box .more-note .icon-down{margin-right:10px;color:#538cc0}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/components/NoteCard.vue\"],\"names\":[],\"mappings\":\"AACA,kBACE,gBAAkB,CACnB,AACD,sBACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,mCACI,eAAiB,CACpB,AACD,2BACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACnB,AACD,yBACE,eAAiB,CAClB,AACD,uCACI,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,WAAa,CAChB,AACD,qCACI,kBAAmB,AACnB,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAClB,AACD,iDACM,qBAAsB,AACtB,4BAA8B,AACtB,mBAAsB,CACnC,AACD,kDACM,iBAAkB,AAClB,cAAgB,CACrB,AACD,wDACQ,aAAe,CACtB,AACD,kDACM,eAAgB,AAChB,cAAe,AACf,kBAAmB,AACnB,qBAAsB,AACtB,eAAkB,CACvB,AACD,4DACQ,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,MAAS,AACT,QAAW,AACX,UAAW,AACX,cAAgB,CACvB,AACD,mEACQ,aAAc,AACd,SAAU,AACV,cAAe,AACf,WAAa,CACpB,AACD,iBACE,iBAAkB,AAClB,oBAAsB,CACvB,AACD,wDACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,eAAkB,CACnB,AACD,yBACE,oBAAsB,CACvB,AACD,wBACE,qBAAsB,AACtB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,mBAAoB,AACpB,oBAAqB,AACrB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,+BACI,UAAW,AACX,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,SAAU,AACV,QAAU,CACb,AACD,sBACE,cAAe,AACf,eAAgB,AAChB,kBAAoB,CACrB,AACD,4BACI,aAAe,CAClB,AACD,iCACI,kBAAmB,AACnB,aAAe,CAClB\",\"file\":\"NoteCard.vue\",\"sourcesContent\":[\"\\n.notes-box .notes {\\n  padding-top: 20px;\\n}\\n.notes-box .note-line {\\n  margin-bottom: 20px;\\n  position: relative;\\n}\\n.notes-box .note-line:last-of-type {\\n    overflow: hidden;\\n}\\n.notes-box .note-time-line {\\n  float: left;\\n  width: 170px;\\n  text-align: center;\\n  padding-top: 35px;\\n}\\n.notes-box .note-content {\\n  overflow: hidden;\\n}\\n.notes-box .note-content .created-time {\\n    color: #929aa3;\\n    position: absolute;\\n    right: 10px;\\n    bottom: 10px;\\n}\\n.notes-box .note-content .operations {\\n    margin-bottom: 5px;\\n    text-align: right;\\n    font-size: 12px;\\n    color: #c9cdd1;\\n}\\n.notes-box .note-content .operations .icon-close {\\n      display: inline-block;\\n      -webkit-transform: scale(0.8);\\n              transform: scale(0.8);\\n}\\n.notes-box .note-content .operations .icon-batonx {\\n      margin-left: 10px;\\n      cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-batonx:hover {\\n        color: #538cc0;\\n}\\n.notes-box .note-content .operations .icon-remind {\\n      font-size: 15px;\\n      color: #c9cdd1;\\n      position: relative;\\n      display: inline-block;\\n      font-weight: bold;\\n}\\n.notes-box .note-content .operations .icon-remind .el-input {\\n        width: 100%;\\n        height: 100%;\\n        position: absolute;\\n        top: 0px;\\n        right: 0px;\\n        opacity: 0;\\n        cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-remind .el-input__inner {\\n        padding: none;\\n        height: 0;\\n        line-height: 0;\\n        border: none;\\n}\\n.notes-box label {\\n  padding-top: 15px;\\n  display: inline-block;\\n}\\n.notes-box .el-textarea.is-disabled .el-textarea__inner {\\n  color: #595f67;\\n  border-color: #e2e5e9;\\n  cursor: auto;\\n  background: white;\\n}\\n.notes-box .add-note-btn {\\n  margin: 10px 0 0 10px;\\n}\\n.notes-box .icon-circle {\\n  display: inline-block;\\n  border-radius: 50%;\\n  width: 14px;\\n  height: 14px;\\n  background: #c5e4f1;\\n  vertical-align: -2px;\\n  margin: 0 5px 0 8px;\\n  position: relative;\\n}\\n.notes-box .icon-circle:before {\\n    width: 4px;\\n    position: absolute;\\n    content: '';\\n    height: 9em;\\n    background: #c5e4f1;\\n    top: -1em;\\n    left: 5px;\\n}\\n.notes-box .more-note {\\n  color: #595f67;\\n  cursor: pointer;\\n  margin-bottom: 10px;\\n}\\n.notes-box .more-note:hover {\\n    color: #538cc0;\\n}\\n.notes-box .more-note .icon-down {\\n    margin-right: 10px;\\n    color: #538cc0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-7ebbbb6a\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/NoteCard.vue\n// module id = 573\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 574\n// module chunks = 0 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 575\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 576\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 577\n// module chunks = 0 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 578\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 579\n// module chunks = 0 1","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 580\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 581\n// module chunks = 0 1","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 582\n// module chunks = 0 1","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 583\n// module chunks = 0 1","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 584\n// module chunks = 0 1","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 585\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 586\n// module chunks = 0 1","\n\n    require('./gridSimple');\n\n    require('./axisPointer/CartesianAxisPointer');\n\n    require('./axisPointer');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 587\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 588\n// module chunks = 0 1","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 589\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 590\n// module chunks = 0 1","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 591\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 592\n// module chunks = 0 1","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 593\n// module chunks = 0 1","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 594\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 595\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (dims.length === 1) {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else if (dims.length === 2) {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 596\n// module chunks = 0 1","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 597\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 598\n// module chunks = 0 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./LineEchart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"37dbef11\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./LineEchart.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./LineEchart.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-6f15d216\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/LineEchart.vue\n// module id = 602\n// module chunks = 0 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./NoteCard.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3e45642e\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./NoteCard.vue\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./NoteCard.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-7ebbbb6a\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/NoteCard.vue\n// module id = 603\n// module chunks = 0 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-6f15d216\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./LineEchart.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./LineEchart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-6f15d216\\\"}!../../node_modules/vue-loader/lib/template-loader?raw&engine=pug!../../node_modules/vue-loader/lib/selector?type=template&index=0!./LineEchart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/LineEchart.vue\n// module id = 607\n// module chunks = 0 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./NoteCard.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./NoteCard.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-7ebbbb6a\\\"}!../../node_modules/vue-loader/lib/template-loader?raw&engine=pug!../../node_modules/vue-loader/lib/selector?type=template&index=0!./NoteCard.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/NoteCard.vue\n// module id = 608\n// module chunks = 0 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lineEchart\",\n    staticClass: \"line-echart\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-6f15d216\"}!./~/vue-loader/lib/template-loader.js?raw&engine=pug!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/LineEchart.vue\n// module id = 611\n// module chunks = 0 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"notes-box\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 1\n    }\n  }, [_c('label', [_vm._v(\"备注：\")])]), _c('el-col', {\n    attrs: {\n      \"span\": _vm.addNoteFocus ? 21 : 23\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"rows\": 2,\n      \"placeholder\": \"点击添加备注\"\n    },\n    on: {\n      \"focus\": function($event) {\n        _vm.addNoteFocus = true\n      },\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.addNote($event)\n      }\n    },\n    model: {\n      value: (_vm.newNote),\n      callback: function($$v) {\n        _vm.newNote = $$v\n      },\n      expression: \"newNote\"\n    }\n  })], 1), (_vm.addNoteFocus) ? _c('el-col', {\n    attrs: {\n      \"span\": 2\n    }\n  }, [_c('el-button', {\n    staticClass: \"add-note-btn\",\n    attrs: {\n      \"size\": \"small\",\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.addNote\n    }\n  }, [_vm._v(\"添加\")])], 1) : _vm._e()], 1), _c('div', {\n    ref: \"notes\",\n    staticClass: \"notes\"\n  }, _vm._l((_vm.showNotes), function(note) {\n    return _c('div', {\n      staticClass: \"note-line\"\n    }, [_c('div', {\n      staticClass: \"note-time-line\"\n    }, [_vm._v(_vm._s(_vm._f(\"moment\")(note.createdAt, 'YYYY-MM-DD'))), _c('i', {\n      staticClass: \"icon-circle\"\n    }), _vm._v(_vm._s(_vm._f(\"moment\")(note.createdAt, 'HH:mm')))]), _c('div', {\n      staticClass: \"note-content\"\n    }, [_c('div', {\n      staticClass: \"operations\"\n    }, [_c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-edit\",\n      on: {\n        \"click\": function($event) {\n          _vm.editNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.editActive),\n        expression: \"note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-success\",\n      on: {\n        \"click\": function($event) {\n          _vm.saveNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.remindActive),\n        expression: \"note.remindActive\"\n      }],\n      staticClass: \"icon-batonx icon-remind\"\n    }, [_c('el-date-picker', {\n      attrs: {\n        \"type\": \"datetime\"\n      }\n    })], 1), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (note.editActive),\n        expression: \"note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-close\",\n      on: {\n        \"click\": function($event) {\n          _vm.resetNote(note)\n        }\n      }\n    }), _c('i', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"icon-batonx icon-close\",\n      on: {\n        \"click\": function($event) {\n          _vm.deleteNote(note)\n        }\n      }\n    })]), _c('div', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (!note.editActive),\n        expression: \"!note.editActive\"\n      }],\n      staticClass: \"created-time\"\n    }, [_vm._v(\"创建时间 \" + _vm._s(_vm._f(\"moment\")(note.create_at, 'YYYY-MM-DD HH:mm')))]), _c('el-input', {\n      attrs: {\n        \"type\": \"textarea\",\n        \"disabled\": !note.editActive,\n        \"rows\": 3,\n        \"id\": 'note_' + note.id\n      },\n      model: {\n        value: (note.textEdit),\n        callback: function($$v) {\n          note.textEdit = $$v\n        },\n        expression: \"note.textEdit\"\n      }\n    })], 1)])\n  })), _c('div', {\n    staticClass: \"more-note text-center\",\n    on: {\n      \"click\": _vm.moreNote\n    }\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.noteVisibleCount < _vm.notes.length),\n      expression: \"noteVisibleCount < notes.length\"\n    }]\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-down\"\n  }), _vm._v(\"显示更多备注信息\")]), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.noteVisibleCount >= _vm.notes.length),\n      expression: \"noteVisibleCount >= notes.length\"\n    }]\n  }, [_vm._v(\"没有更多了\")])])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-7ebbbb6a\"}!./~/vue-loader/lib/template-loader.js?raw&engine=pug!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/NoteCard.vue\n// module id = 612\n// module chunks = 0 1","<template lang=\"pug\">\n  .asset-detail\n    .box\n      .box-header\n        h3 {{demo.name}}\n        small 简称：{{demo.shortName}}\n        small 资产代码：YZ0413\n        .buttons\n          el-button(type=\"primary\", size=\"small\", @click=\"editAsset\")\n            i.icon-batonx.icon-edit\n            | 编辑\n          el-button(type=\"gray\", size=\"small\", @click=\"deleteAsset\")\n            i.icon-batonx.icon-delete\n            | 删除\n      .box-content\n        .box-section\n          el-row(:gutter=\"20\")\n            el-col(:span=\"8\")\n              table(v-if=\"demo.type === 0\")\n                tr\n                  th 利率：\n                  td.em 6.5%\n                tr\n                  th 起购金额：\n                  td ￥1000\n                tr\n                  th 发行平台：\n                  td 恒大金服\n                tr\n                  th 增信机构：\n                  td -\n              table(v-if=\"demo.type === 1\")\n                tr\n                  th 利率：\n                  td.em 6.5%\n                tr\n                  th 起购金额：\n                  td ￥1000\n                tr\n                  th 发行平台：\n                  td 恒大金服\n                tr\n                  th 增信机构：\n                  td -\n            el-col(:span=\"8\")\n              table(v-if=\"demo.type === 0\")\n                tr\n                  th 发行期限：\n                  td.em 30天\n                tr\n                  th 递增金额：\n                  td ￥100\n                tr\n                  th 产品类型：\n                  td 理财计划\n                tr\n                  th 增信措施：\n                  td 保险备用金\n              table(v-if=\"demo.type === 1\")\n                tr\n                  th 发行期限：\n                  td.em 30天\n                tr\n                  th 递增金额：\n                  td ￥100\n                tr\n                  th 产品类型：\n                  td 理财计划\n                tr\n                  th 增信措施：\n                  td 保险备用金\n            el-col(:span=\"8\")\n              table(v-if=\"demo.type === 0\")\n                tr\n                  th 风险等级：\n                  td 低风险\n                tr\n                  th 托管机构：\n                  td 平安银行\n              .td-button(v-if=\"demo.type === 0\")\n                el-button(@click=\"goRegPro\") 登记产品列表\n                el-button(@click=\"goClient\") 客户列表\n              table(v-if=\"demo.type === 1\")\n                tr\n                  th 风险等级：\n                  td 低风险\n                tr\n                  th 托管机构：\n                  td 平安银行\n              .td-button(v-if=\"demo.type === 1\")\n                el-button(@click=\"goRegPro\") 登记产品列表\n                el-button(@click=\"goClient\") 客户列表\n        .box-section\n          .attachments-box\n            h3\n              | 附件：\n              small *最多支持添加20个文件，每个文件不得超过20M\n              el-upload.upload-attachment(action='//jsonplaceholder.typicode.com/posts/', :file-list='demo.attachments')\n                el-button(size='mini', type='primary') 增加\n        .box-section\n          kt-note-card(:passed-notes=\"demo.notes\")\n    .box.box-normal\n      .box-header  待办事项\n      .box-content\n        .todo(v-if=\"demo.type === 0\")\n          table\n            tbody\n              tr.first-tr(v-for=\"type in producttype1\")\n                td(:class=\"[type.assetType === '资金'? 'first-td-amount' : 'first-td-asset ']\") {{type.assetType}}\n                td\n                  div(v-for=\"state in type.state\") {{state}}\n                td\n                  div(v-for=\"company in type.company\") {{company}}\n                td\n                  div(v-for=\"(account, index) in type.accounts\", :class=\"~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\") {{account | ktCurrency}}\n                  //- span.amount-color 200,184,258.00\n                td\n                  i.i.icon-batonx.icon-brackets(v-if=\"type.boole\")\n                td.amount-color {{type.Surplus}}\n                td\n                  div(v-for=\"stated in type.stated\", :class=\"stated | filterAmountColor\") {{stated}}\n                    i.icon-batonx.icon-shenpi(v-if=\"stated === '审批中'\")\n                td 最晚明日12：00执行\n                td(v-if=\"type.assetType === '资金'\")\n                  .y-operation\n                    a(@click=\"productDialog(type,be=true,id=0)\") 操作\n                  //- .n-operation\n                  //-   a(@click=\"productDatail\") 操作\n                td(v-else)\n                  .y-operation\n                    a(@click=\"assetDialog(type,be=true,id=0)\") 操作\n                  .n-operation\n                    a(@click=\"assetDialog(type,be=false,id=1)\") 操作\n              //- tr\n              //-   td.first-td-asset 资产\n              //-   td\n              //-     .asset-buy 申购广发货币基金\n              //-     .asset-sell 卖出15北京城投债\n              //-   td\n              //-     .asset-amount\n              //-       span ￥\n              //-       span.amount-color 245,742.00\n              //-     .asset-amount\n              //-       span ￥\n              //-       span.already 81,084,134.00\n              //-   td\n              //-     .already 已执行\n              //-     .not 未执行\n              //-   td\n              //-     .state 最晚明日12：00执行\n              //-     .state 最晚明日12：00执行\n              //-   td\n              //-     .y-operation\n              //-       a(@click=\"assetDatail\") 操作\n              //-     .n-operation\n              //-       a(@click=\"assetDatail\") 操作\n        .todo(v-if=\"demo.type === 1\")\n          table\n            tbody\n              tr.first-tr(v-for=\"type in producttype2\")\n                td(:class=\"[type.assetType === '资金'? 'first-td-amount' : 'first-td-asset ']\") {{type.assetType}}\n                td\n                  div(v-for=\"state in type.state\") {{state}}\n                td\n                  div(v-for=\"company in type.company\") {{company}}\n                td\n                  div(v-for=\"(account, index) in type.accounts\", :class=\"~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\") {{account | ktCurrency}}\n                  //- span.amount-color 200,184,258.00\n                td\n                  i.i.icon-batonx.icon-brackets(v-if=\"type.boole\")\n                td.amount-color {{type.Surplus | ktCurrency}}\n                td\n                  div(v-for=\"stated in type.stated\", :class=\"stated | filterAmountColor\") {{stated}}\n                    i.icon-batonx.icon-shenpi(v-if=\"stated === '审批中'\")\n                td 最晚明日12：00执行\n                td(v-if=\"type.assetType === '资金'\")\n                  .y-operation\n                    a(@click=\"productDialog(type,be=true,id=0)\") 操作\n                  .n-operation\n                    a(@click=\"productDialog(type,be=false,id=1)\") 操作\n                td(v-else)\n                  .y-operation\n                    a(@click=\"assetDialog(type,be=true,id=0)\") 操作\n                  .n-operation\n                    a(@click=\"assetDialog(type,be=false,id=1)\") 操作\n    .box.box-normal\n      .box-header 关键日期\n      .box-content\n        .crux-date(v-if=\"demo.type === 0\")\n          img(src=\"../../assets/images/cruxDate.png\")\n        .crux-date(v-if=\"demo.type === 1\")\n          img(src=\"../../assets/images/cruxDate2.png\")\n    .box.box-normal\n      .box-header 关键金额\n      .box-content(v-if=\"demo.type === 0\")\n        .box-section\n          .cruxamount\n            el-row\n              el-col(:span=\"8\")\n                dl\n                  dd 实际募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 124,500,000.00\n              el-col(:span=\"8\")\n                dl\n                  dd 计划募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 128,500,000.00\n              el-col(:span=\"8\")\n                dl\n                  dd 未募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 4,000,000.00\n        .box-section\n          .cruxamount-mes\n            el-row\n              el-col(:span=\"12\")\n                dl\n                  dd\n                    label 存续金额：\n                    span.subsist-f ￥\n                    span.subsist-c 245,742.00\n                  dt\n                    .part\n                    .principal-interest\n                      .principal\n                        label 本金：\n                        span ￥ 124,500,000.00\n                      .interest\n                        label 利息：\n                        span ￥ 251,905,0\n              el-col(:span=\"12\")\n                dl\n                  dd\n                    label 已兑付金额：\n                    span.subsist-f ￥\n                    span.subsist-c 0\n                  dt\n                    .part\n                    .principal-interest\n                      .principal\n                        label 本金：\n                        span ￥ 0\n                      .interest\n                        label 利息：\n                        span ￥ 0\n      .box-content(v-if=\"demo.type === 1\")\n        .box-section\n          .cruxamount\n            el-row\n              el-col(:span=\"8\")\n                dl\n                  dd 实际募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 224,500,000.00\n              el-col(:span=\"8\")\n                dl\n                  dd 计划募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 228,500,000.00\n              el-col(:span=\"8\")\n                dl\n                  dd 未募集金额：\n                  dt\n                    span.amount-f ￥\n                    span.amount-c 4,000,000.00\n        .box-section\n          .cruxamount-mes\n            el-row\n              el-col(:span=\"12\")\n                dl\n                  dd\n                    label 存续金额：\n                    span.subsist-f ￥\n                    span.subsist-c 124,751,905.00\n                  dt\n                    .part\n                    .principal-interest\n                      .principal\n                        label 本金：\n                        span ￥ 124,500,000.00\n                      .interest\n                        label 利息：\n                        span ￥ 251,905,0\n              el-col(:span=\"12\")\n                dl\n                  dd\n                    label 已兑付金额：\n                    span.subsist-f ￥\n                    span.subsist-c  99,750,095.00\n                  dt\n                    .part\n                    .principal-interest\n                      .principal\n                        label 本金：\n                        span ￥ 99,548,674.80\n                      .interest\n                        label 利息：\n                        span ￥ 201,420.152\n    .box.box-normal\n      .box-header 持有资产列表\n        .history-record\n          a(@click=\"historyDialog\") 历史交易记录\n      .box-content(v-if=\"demo.type === 0\")\n        .asset-list\n          table\n            thead\n              tr\n                th 名称\n                th 金额\n                th 比例\n                th 今日收益\n                th 累计收益\n            tbody\n              tr\n                td 创元开发建设投资企业融资项目\n                td ￥ 24,296,355.00\n                td 100%\n                td ￥ 1,336,299.52\n                td ￥ 1,336,299.52\n        el-dialog(title=\"历史交易记录\",v-model=\"historyVisible\")\n          el-table(:data=\"historyDatas\")\n            el-table-column(property=\"time\",label=\"时间\")\n            el-table-column(property=\"assetsName\",label=\"资产名称\")\n            el-table-column(property=\"cztype\",label=\"操作类型\")\n            el-table-column(label=\"变动金额(元)\")\n              template(scope='scope')\n                span(:class=\"scope.row.change > 0 ? 'positive' : 'negative'\") {{scope.row.change}}\n      .box-content(v-if=\"demo.type === 1\")\n        .asset-list-current\n          table\n            thead\n              tr\n                th\n                th 资产名称\n                th 金额\n                th 比例\n                th 今日收益\n                th 累计收益\n            tbody\n              tr\n                td.first-td(rowspan=\"2\") 流动性资产\n                td 现金\n                td ￥1,000,000.00\n                td  0.54%\n                td ￥30,000.00\n                td ￥30,000.00\n              tr.two-tr\n                td 鹏华添利宝货币基金\n                td ￥182,055,000.00\n                td  55.5%\n                td ￥61,258,800.00\n                td ￥61,258,800.00\n              tr\n                td.first-td(rowspan=\"2\") 其他资产\n                td 小定宝-财富-南京某公司借款\n                td ￥23,800,000.00\n                td  12.96%\n                td ￥14,280,000.00\n                td ￥14,280,000.00\n              tr\n                td 小定宝-财富-海航商业控股项目\n                td ￥102,098,000.00\n                td  31%\n                td ￥39,960,216.80\n                td ￥39,960,216.80\n        el-dialog(title=\"历史交易记录\",v-model=\"historyVisible\")\n          el-table(:data=\"historyDatas\")\n            el-table-column(property=\"time\",label=\"时间\")\n            el-table-column(property=\"assetsName\",label=\"资产名称\")\n            el-table-column(property=\"cztype\",label=\"操作类型\")\n            el-table-column(label=\"变动金额(元)\")\n              template(scope='scope')\n                span(:class=\"scope.row.change > 0 ? 'positive' : 'negative'\") {{scope.row.change}}\n    .box.box-normal\n      .box-header 费用列表\n        .extract-record\n          a(@click=\"extractDialog\") 提取记录\n      .box-content\n        .cost-list(v-if=\"demo.type === 0\")\n          table\n            thead\n              tr\n                th 收费主体\n                th 费用类型\n                th 计费方式\n                th 费率\n                th 计费天数\n                th 费用基数\n                th 支付频率\n                th 计费开始日期\n                th 已记提费用\n            tbody\n              tr(v-for=\"costList in costLists\")\n                td {{costList.charge}}\n                  span(:class=\"costList.profitType == '固定'? 'fixed':'float'\") {{costList.profitType}}\n                td {{costList.costtype}}\n                td {{costList.billingMode}}\n                td {{costList.rate}}\n                td {{costList.billingDates}}\n                td {{costList.costbase}}\n                td {{costList.payfrequency}}\n                td {{costList.startDate}}\n                td {{costList.already}}\n        .cost-list(v-if=\"demo.type === 1\")\n          table\n            thead\n              tr\n                th 收费主体\n                th 费用类型\n                th 计费方式\n                th 费率\n                th 计费天数\n                th 费用基数\n                th 支付频率\n                th 计费开始日期\n                th 已记提费用\n            tbody\n              tr(v-for=\"currentList in currentLists\")\n                td {{currentList.charge}}\n                  span(:class=\"currentList.profitType == '固定'? 'fixed':'float'\") {{currentList.profitType}}\n                td {{currentList.costtype}}\n                td {{currentList.billingMode}}\n                td {{currentList.rate}}\n                td {{currentList.billingDates}}\n                td {{currentList.costbase}}\n                td {{currentList.payfrequency}}\n                td {{currentList.startDate}}\n                td {{currentList.already}}\n        el-dialog(title=\"提取记录\",v-model=\"extractVisible\")\n          el-table(:data=\"extractDatas\")\n            el-table-column(property=\"time\",label=\"时间\")\n            el-table-column(property=\"charge\",label=\"收费主体\")\n            el-table-column(property=\"extract\",label=\"提取金额\")\n            //- el-table-column(property=\"wait\",label=\"待计提费用\")\n    .box.box-normal\n      .box-header 账户列表\n      .box-content\n        .account-list(v-if=\"demo.type === 0\")\n          el-row\n            el-col(:span=\"12\",v-for=\"accountList in accountLists\")\n              .account-table\n                .account-table-n\n                  table\n                    tr\n                      th 账户类型：\n                      td.account-type {{accountList.accountType}}\n                    tr\n                      th 账户名：\n                      td {{accountList.accountName}}\n                    tr\n                      th 账户：\n                      td.account-c {{accountList.account}}\n                    tr\n                      th 开户行：\n                      td {{accountList.openAccount}}\n        .account-list(v-if=\"demo.type === 1\")\n          el-row\n            el-col(:span=\"12\",v-for=\"accountList in accountLists\")\n              .account-table\n                .account-table-n\n                  table\n                    tr\n                      th 账户类型：\n                      td.account-type {{accountList.accountType}}\n                    tr\n                      th 账户名：\n                      td {{accountList.accountName}}\n                    tr\n                      th 账户：\n                      td.account-c {{accountList.account}}\n                    tr\n                      th 开户行：\n                      td {{accountList.openAccount}}\n      .box.box-normal\n        .box-header 审批流程管理\n        .box-content\n          .bpm\n            el-row\n              el-col(:span=\"8\")\n                dl\n                  dd 审批流程名称\n                  dt 资金清算审批流程B\n              el-col(:span=\"8\")\n                dl\n                  dd 流程详情\n                  dt  项目组长  →  项目经理  →  项目总监\n    kt-product-dialog(ref=\"productDialog\")\n    kt-asset-dialog(ref=\"assetDialog\")\n</template>\n\n<script>\nimport {\n  Message,\n  MessageBox\n} from 'element-ui'\nimport KtLineChart from '@/components/LineEchart.vue'\nimport KtNoteCard from '@/components/NoteCard.vue'\nimport KtProductDialog from '@/components/ProductDialog.vue'\nimport KtAssetDialog from '@/components/AssetDialog.vue'\nimport exMixin from '@/common/mixin.js'\nimport {\n  // concat,\n  // map,\n  merge,\n  remove,\n  uniqueId\n} from 'lodash'\nimport {\n  updateCrumbs\n} from '@/common/crossers.js'\n// import Vue from 'vue'\n\nexport default {\n  mixins: [exMixin],\n  components: {\n    KtLineChart,\n    KtNoteCard,\n    KtProductDialog,\n    KtAssetDialog\n  },\n  mounted: function() {\n    this.demo.name = this.filter.productName = this.demo.shortName = this.$route.params.id\n    this.demo.type = +this.$route.query.type || this.demo.type\n    updateCrumbs.$emit('update-crumbs', [{\n      id: 'assetName',\n      name: this.demo.name\n    }])\n    // setTimeout(() => {\n    //   this.demo.rateChartOpt = merge({}, this.demo.rateChartOpt, {\n    //     color: ['#f1b277'],\n    //     legend: {\n    //       data: ['收益率']\n    //     },\n    //     tooltip: {\n    //       formatter: (params, ticket, callback) => {\n    //         if (!params.length) return\n    //         return concat([`<table class=\"chart-tooltip\"><tr><th colspan=\"2\">${params[0].name}</th><tr>`],\n    //           map(params, v => {\n    //             return `<tr class=\"line\">\n    //                     <td class=\"left\"><i class=\"circle\" style=\"color:${v.color}\"></i>${v.seriesName}：</td>\n    //                     <td class=\"right\">${Vue.filter('ktPercent')(v.value, 2, 1)}</td>\n    //                   </tr>`\n    //           }), '</table>').join('')\n    //       }\n    //     },\n    //     xAxis: {\n    //       data: ['2017-01', '2017-02', '2017-03', '2017-04', '2017-05']\n    //     },\n    //     series: [{\n    //       name: '收益率',\n    //       type: 'line',\n    //       format: 'percent',\n    //       data: [0.21, 0.32, 0.41, 0.34, 0.25],\n    //       symbolSize: 5,\n    //       symbol: 'circle'\n    //     }]\n    //   })\n    // }, 100)\n  },\n\n  methods: {\n    goRegPro() {\n      this.$router.push({\n        name: 'RegisterProductList'\n      })\n    },\n    goClient() {\n      this.$router.push({\n        name: 'ClientList'\n      })\n    },\n    // closeMessage(file, fileList) {\n    //   MessageBox.confirm('确定要删除文件吗？', '提示', {\n    //     type: 'warning'\n    //   }).then(() => {})\n    //   console.log(file, fileList)\n    // },\n    extractDialog() {\n      this.extractVisible = true\n    },\n    historyDialog() {\n      this.historyVisible = true\n    },\n    productDialog(data, boole, index) {\n      let newData = merge(this.filter, data)\n      console.log(newData)\n      this.$refs.productDialog.showDialog(newData, boole, index)\n    },\n    assetDialog(data, boole, index) {\n      let newData = merge(this.filter, data)\n      this.$refs.assetDialog.showDialog(newData, boole, index)\n    },\n    editAsset() {\n      this.$router.push({\n        name: 'ProductEdit',\n        params: {\n          id: this.demo.name\n        }\n      })\n    },\n\n    deleteAsset() {\n      Message.info('测试账号不支持此功能！')\n    },\n\n    addNote() {\n      if (this.demo.notes.length >= 50) {\n        Message.warn('备注个数不得超过50个')\n        return\n      }\n\n      if (!this.demo.newNote) {\n        Message.error('备注不能为空!')\n        return\n      }\n\n      this.demo.notes.unshift({\n        id: uniqueId('new_note_'),\n        editActive: false,\n        text: this.demo.newNote,\n        createdAt: new Date()\n      })\n\n      this.demo.newNote = ''\n      this.addNoteFocus = false\n    },\n\n    saveNote(note) {\n      note.text = note.textEdit\n      note.editActive = false\n    },\n\n    moreNote() {\n      if (this.noteVisibleCount >= this.demo.notes.length) {\n        Message.info('没有更多了')\n        return\n      }\n      this.noteVisibleCount += this.noteMoreStep\n    },\n\n    editNote(note) {\n      note.editActive = true\n      this.$nextTick(() => {\n        const textarea = this.$refs.notes.querySelector(`#note_${note.id} textarea`)\n        textarea.focus()\n      })\n    },\n\n    resetNote(note) {\n      note.textEdit = note.text\n      note.editActive = false\n    },\n\n    deleteNote(note) {\n      MessageBox.confirm('此操作将永久删除改批注, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.demo.notes = remove(this.demo.notes, (v) => {\n          return note.id !== v.id\n        })\n      })\n    }\n  },\n\n  computed: {\n    showNotes() {\n      return this.demo.notes.slice(0, this.noteVisibleCount)\n    }\n  },\n\n  data() {\n    return {\n      filter: {\n        productName: ''\n      },\n      extractVisible: false,\n      historyVisible: false,\n      addNoteFocus: false,\n      noteVisibleCount: 2,\n      noteMoreStep: 5,\n      demo: {\n        name: '天津旭达资产管理项目',\n        shortName: '旭达资管',\n        type: 0, // 0 定期 1 活期\n        newNote: '',\n        rateChartOpt: {},\n        notes: [{\n          id: 1,\n          editActive: false,\n          remindActive: true,\n          textEdit: '2017年02月28日提息。',\n          text: '2017年02月28日提息。',\n          createdAt: new Date()\n        }, {\n          id: 2,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款已到账。',\n          text: '今日申购款已到账。',\n          createdAt: new Date()\n        }, {\n          id: 3,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款未到账，预计款项明日到账。',\n          text: '今日申购款未到账，预计款项明日到账。',\n          createdAt: new Date()\n        }, {\n          id: 4,\n          editActive: false,\n          remindActive: true,\n          textEdit: '今日申购款未到账，预计款项两日后到账。',\n          text: '今日申购款未到账，预计款项两日后到账。',\n          createdAt: new Date()\n        }],\n        attachments: [{\n          name: '资产合同'\n        }, {\n          name: '资产说明书'\n        }],\n        products: [{\n          name: '甜橙起航理财计划D2',\n          count: 1000,\n          amount: 4715000,\n          ratio: 0.14,\n          todayEarning: 30000,\n          totalEarning: 150000\n        }, {\n          name: '甜橙起航理财计划C2',\n          count: 300,\n          amount: 3905000,\n          ratio: 0.12,\n          todayEarning: 28000,\n          totalEarning: 168000\n        }],\n        historyDeals: [{\n          dealAt: new Date(),\n          name: '甜橙起航理财计划D2',\n          opType: '卖出',\n          amount: '100020'\n        }, {\n          dealAt: new Date(),\n          name: '甜橙起航理财计划C2',\n          opType: '买入',\n          amount: '180623'\n        }]\n      },\n      costLists: [{\n        charge: '中国银行',\n        costtype: '托管费',\n        profitType: '固定',\n        billingMode: '固定费用',\n        rate: '0.2%',\n        billingDates: '360',\n        costbase: '产品规模',\n        payfrequency: '每月',\n        startDate: '2016-8-8',\n        already: ' ￥ 546,28.93 '\n      }, {\n        charge: '民生银行',\n        costtype: ' 投资顾问费 ',\n        profitType: '浮动',\n        billingMode: ' 超额费用',\n        rate: '无',\n        billingDates: '无',\n        costbase: '无',\n        payfrequency: '每季',\n        startDate: '2016-8-8',\n        already: '￥ 4,324,324.33 '\n      }],\n      currentLists: [{\n        charge: '招商银行',\n        costtype: '托管费',\n        profitType: '浮动',\n        billingMode: '固定费用',\n        rate: '0.2%',\n        billingDates: '360',\n        costbase: '产品规模',\n        payfrequency: '每月',\n        startDate: ' 2016-8-8    12:00:00 AM  ',\n        already: '  35462893 '\n      }, {\n        charge: '京东金融',\n        costtype: ' 投资顾问费 ',\n        profitType: '固定',\n        billingMode: ' 超额费用',\n        rate: '无',\n        billingDates: '无',\n        costbase: '无',\n        payfrequency: '每季',\n        startDate: '2016-8-8    14:00:00 PM ',\n        already: '432432433'\n      }],\n      accountLists: [{\n        accountType: '募集账户',\n        accountName: '北京和丰永讯金融信息服务有限公司',\n        account: '1109 2037 8610 201',\n        openAccount: '招商银行股份有限公司北京亚运村支行'\n      }, {\n        accountType: '产品账户',\n        accountName: '广东金融高新区股权交易中心 ',\n        account: '2232 1937 8710 871',\n        openAccount: '招商银行股份有限公司广州番禹区支行'\n      }],\n      historyDatas: [{\n        time: '2017年01月10日',\n        assetsName: '创元开发建设投资企业融资项目',\n        cztype: '买入',\n        change: '24296355.00'\n      }, {\n        time: '2017年01月10日',\n        assetsName: '创元开发建设投资企业融资项目',\n        cztype: '买入',\n        change: '-24296355.00'\n      }],\n      extractDatas: [{\n        time: '2017年1月18日',\n        charge: '招商银行',\n        extract: '￥ 124,324.33',\n        wait: '￥ 102,894.22'\n      }, {\n        time: '2017年01月20日',\n        charge: '京东金融',\n        extract: '￥ 117,346.66 ',\n        wait: '￥ 185,974.45'\n      }],\n      producttype1: [{\n        assetType: '资金',\n        state: ['已更新'],\n        company: [],\n        accounts: [200184258],\n        Surplus: '',\n        boole: true,\n        stated: ['审批中']\n      }, {\n        assetType: '资产',\n        state: ['申购', '卖出'],\n        company: ['广发货币基金', '15北京城投债'],\n        accounts: [245742, 81084134],\n        Surplus: '',\n        stated: ['已执行', '未执行']\n      }],\n      producttype2: [{\n        assetType: '资金',\n        state: ['申购', '赎回'],\n        company: [],\n        accounts: [200184258, 16200234],\n        Surplus: 183984024,\n        boole: true,\n        stated: ['审批中']\n      }, {\n        assetType: '资产',\n        state: ['申购', '卖出'],\n        company: ['鹏华添利宝货币基金', '小定宝-财富-海航商业控股项目'],\n        accounts: [245742, 81084134],\n        Surplus: '',\n        stated: ['已执行', '未执行']\n      }]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.asset-detail {\n  .el-upload-list__item {\n    float: left;\n    width: auto;\n    margin-top: 10px;\n    font-size: 13px;\n    &:first-child {\n      margin-top: 10px;\n    }\n  }\n  .el-upload-list {\n    overflow: hidden;\n    margin-bottom: -15px;\n  }\n  .el-textarea textarea {\n    font-size: 13px;\n  }\n}\n\n.attachments-box {\n  font-size: 13px;\n  .el-upload-list__item {\n    float: left;\n    width: auto;\n  }\n  h3 {\n    font-size: 13px;\n    small {\n      color: #929aa3;\n    }\n  }\n}\n\n.notes-box {\n  .notes {\n    padding-top: 20px;\n  }\n  .note-line {\n    margin-bottom: 20px;\n    position: relative;\n    &:last-of-type {\n      overflow: hidden;\n    }\n  }\n  .note-time-line {\n    float: left;\n    width: 170px;\n    text-align: center;\n    padding-top: 35px;\n  }\n  .note-content {\n    overflow: hidden;\n    .created-time {\n      color: #929aa3;\n      position: absolute;\n      right: 10px;\n      bottom: 10px;\n    }\n    .operations {\n      margin-bottom: 5px;\n      text-align: right;\n      font-size: 12px;\n      color: #c9cdd1;\n      .icon-close {\n        display: inline-block;\n        transform: scale(.8);\n      }\n      .icon-batonx {\n        margin-left: 10px;\n        cursor: pointer;\n        &:hover {\n          color: #538cc0;\n        }\n      }\n    }\n  }\n  label {\n    padding-top: 15px;\n    display: inline-block;\n  }\n  .el-textarea.is-disabled {\n    .el-textarea__inner {\n      color: #595f67;\n      border-color: #e2e5e9;\n      cursor: auto;\n      background: white;\n    }\n  }\n  .add-note-btn {\n    margin: 10px 0 0 10px;\n  }\n  .icon-circle {\n    display: inline-block;\n    border-radius: 50%;\n    width: 14px;\n    height: 14px;\n    background: #c5e4f1;\n    vertical-align: -2px;\n    margin: 0 5px 0 8px;\n    position: relative;\n    &:before {\n      width: 4px;\n      position: absolute;\n      content: '';\n      height: 9em;\n      background: #c5e4f1;\n      top: -1em;\n      left: 5px;\n    }\n  }\n  .more-note {\n    color: #595f67;\n    cursor: pointer;\n    &:hover {\n      color: #538cc0;\n    }\n    .icon-down {\n      margin-right: 10px;\n      color: #538cc0;\n    }\n    margin-bottom: 10px;\n  }\n}\n\n.upload-attachment {\n  display: inline;\n  margin-left: 10px;\n}\n\n.asset-panel {\n  border-radius: 4px;\n  // border: 1px solid #e7eaed;\n  em {\n    color: #de3569;\n  }\n}\n\n.asset-panel-dashboard {\n  .el-row {\n    border-bottom: 1px solid #e7eaed;\n    &:last-child {\n      border-bottom: none;\n    }\n  }\n  .panel-cell {\n    padding: 35px;\n  }\n}\n\n.asset-panel-products {\n  .header {\n    background: #e2f1f8;\n    padding-left: 15px;\n    height: 40px;\n    line-height: 40px;\n    font-size: 13px;\n    color: #364f77;\n    .buttons {\n      float: right;\n      button {\n        font-size: 13px;\n        margin-right: 10px;\n      }\n    }\n  }\n  table {\n    width: 100%;\n    th,\n    td {\n      color: #929aa3;\n      font-weight: normal;\n      text-align: left;\n      padding: 15px;\n      border-bottom: 1px solid #e7eaed;\n    }\n    tbody tr:last-child {\n      th,\n      td {\n        border-bottom: 0;\n      }\n    }\n  }\n}\n\n.td-button {\n  padding: 5px 55px;\n  .el-button {\n    border: none;\n    background: #538cc0;\n    color: #fff;\n    &:hover,\n    &:focus {\n      color: #fff;\n      background: #538cc0;\n    }\n  }\n}\n\n.rate-chart {\n  padding-top: 20px;\n  border-radius: 4px;\n  // border: 1px solid #e7eaed;\n  width: 100%;\n  height: 350px;\n}\n\n.todo {\n  // padding:15px 0;\n  table {\n    // table-layout: fixed;\n    width: 100%;\n    .first-tr {\n      border-bottom: 1px solid #f3f6f8;\n    }\n    th,td{\n      text-align: center;\n    }\n    td {\n      padding: 25px 0;\n      &.first-td-amount {\n        padding-left: 15px;\n        color: #f55923;\n        font-weight: bold;\n      }\n      &.first-td-asset {\n        padding-left: 15px;\n        color: #1f98d9;\n        font-weight: bold;\n      }\n      .amount-color {\n        color: #de3569;\n      }\n      .gColor{\n        color:#82c5aa;\n      }\n      .y-operation {\n        padding: 2px 0;\n        a {\n          display: inline;\n          padding: 2px 5px;\n          background: #538cc0;\n          color: #fff;\n          border-radius: 3px;\n        }\n      }\n      .n-operation {\n        padding: 2px 0;\n        a {\n          display: inline;\n          padding: 2px 5px;\n          background: #f3f6f8;\n          border-radius: 3px;\n        }\n      }\n      .yzx {\n        color: #60b896;\n      }\n      .wzx {\n        color: #de3569;\n      }\n    }\n  }\n}\n\n.crux-date {\n  padding: 15px;\n  width:950px;\n  margin:0 auto;\n  img {\n    width:100%;\n    // height: 200px;\n  }\n}\n\n.cruxamount {\n  // padding:15px;\n  dl {\n    width: 200px;\n    margin: 0 auto;\n    dd,\n    dt {\n      padding: 5px;\n    }\n    dt {\n      font-size: 18px;\n      .amount-f {\n        color: #d3d4d6;\n      }\n      .amount-c {\n        color: #c0c9d4;\n      }\n    }\n  }\n}\n\n.cruxamount-mes {\n  dl {\n    width: 300px;\n    margin: 0 auto;\n    dd {\n      padding: 5px;\n      .subsist-f {\n        color: #c1c3c6;\n      }\n      .subsist-c {\n        margin-left: 5px;\n        color: #de3569;\n      }\n    }\n    dt {\n      margin-left: 30px;\n      padding: 5px;\n      // position: relative;\n      .part {\n        float: left;\n        position: relative;\n        // top:10px;\n        left: 10px;\n        // transform:translateY(-50%);\n        height: 50px;\n        width: 4px;\n        background: #c5e4f1;\n        &:before {\n          content: '';\n          position: absolute;\n          width: 25px;\n          height: 4px;\n          background: #c5e4f1;\n          top: 12px;\n        }\n        &:after {\n          content: '';\n          position: absolute;\n          width: 25px;\n          height: 4px;\n          background: #c5e4f1;\n          bottom: 0px;\n          left: 0px;\n        }\n      }\n      .principal-interest {\n        float: left;\n        margin-left: 40px;\n        .principal {\n          padding: 5px 0;\n        }\n        .interest {\n          padding: 5px 0;\n        }\n      }\n    }\n  }\n}\n\n.history-record {\n  float: right;\n  a {\n    color: #538cc0;\n    font-size: 12px;\n    font-weight: normal;\n  }\n}\n\n.asset-list {\n  padding: 15px;\n  table {\n    table-layout: fixed;\n    width: 100%;\n    th {\n      text-align: left;\n      font-weight: normal;\n      color: #9ba2aa;\n    }\n    td {\n      padding: 10px 0;\n    }\n  }\n}\n.asset-list-current{\n  table{\n    table-layout: fixed;\n    width:100%;\n    .first-tr{\n      border-top:1px solid #e7eaed;\n    }\n    .two-tr{\n      border-bottom:1px solid #e7eaed;\n    }\n    th{\n      text-align: left;\n      font-weight: normal;\n      color:#9ba2aa;\n      padding:10px 0;\n      &:not(:first-child){\n        border-bottom: 1px solid #e7eaed;\n      }\n    }\n    td{\n      padding:10px 0;\n      &.first-td{\n        padding-left:20px;\n        font-size:13px;\n        font-weight: bold;\n      }\n    }\n  }\n}\n.extract-record{\n  float:right;\n  a{\n    color: #538cc0;\n    font-size: 12px;\n    font-weight: normal;\n  }\n}\n.cost-list{\n  padding:15px;\n  table{\n    table-layout:fixed;\n    width:100%;\n    th{\n      text-align: left;\n      font-weight: normal;\n      color:#9ba2aa;\n    }\n    td{\n      padding:10px 0;\n      .fixed{\n        padding:0 3px;\n        color:#fff;\n        background: #acccd9;\n        border-radius: 2px;\n        margin-left:3px;\n      }\n      .float{\n        padding:0 3px;\n        color:#fff;\n        background: #eea7b9;\n        border-radius: 2px;\n        margin-left:3px;\n      }\n    }\n  }\n}\n.account-list{\n  .account-table{\n    padding:40px 30px;\n    .account-table-n{\n      border:1px solid #e7eaed;\n      border-radius: 4px;\n      padding:15px;\n        .account-type{\n          color:#595f67;\n          font-size:13px;\n          font-weight: bold;\n        }\n        .account-c{\n          color:#538cc0;\n        }\n    }\n  }\n}\n.bpm{\n  padding:15px;\n  dl{\n    width:260px;\n    margin:0 auto;\n    dd{\n      color:#abb1b8;\n    }\n    dt{\n      padding:10px 0;\n      color:#595f67;\n      font-size:14px;\n    }\n  }\n}\n.positive{\n  color:#de3569;\n}\n.negative{\n  color:#16a474;\n}\n.amount-color{\n  color:#de3569;\n}\n.icon-brackets{\n  font-size: 25px;\n  color: #d8dadd;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ProductDetail.vue?569fe18c","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".asset-detail .el-upload-list__item{float:left;width:auto;margin-top:10px;font-size:13px}.asset-detail .el-upload-list__item:first-child{margin-top:10px}.asset-detail .el-upload-list{overflow:hidden;margin-bottom:-15px}.asset-detail .el-textarea textarea,.attachments-box{font-size:13px}.attachments-box .el-upload-list__item{float:left;width:auto}.attachments-box h3{font-size:13px}.attachments-box h3 small{color:#929aa3}.notes-box .notes{padding-top:20px}.notes-box .note-line{margin-bottom:20px;position:relative}.notes-box .note-line:last-of-type{overflow:hidden}.notes-box .note-time-line{float:left;width:170px;text-align:center;padding-top:35px}.notes-box .note-content{overflow:hidden}.notes-box .note-content .created-time{color:#929aa3;position:absolute;right:10px;bottom:10px}.notes-box .note-content .operations{margin-bottom:5px;text-align:right;font-size:12px;color:#c9cdd1}.notes-box .note-content .operations .icon-close{display:inline-block;-webkit-transform:scale(.8);transform:scale(.8)}.notes-box .note-content .operations .icon-batonx{margin-left:10px;cursor:pointer}.notes-box .note-content .operations .icon-batonx:hover{color:#538cc0}.notes-box label{padding-top:15px;display:inline-block}.notes-box .el-textarea.is-disabled .el-textarea__inner{color:#595f67;border-color:#e2e5e9;cursor:auto;background:#fff}.notes-box .add-note-btn{margin:10px 0 0 10px}.notes-box .icon-circle{display:inline-block;border-radius:50%;width:14px;height:14px;background:#c5e4f1;vertical-align:-2px;margin:0 5px 0 8px;position:relative}.notes-box .icon-circle:before{width:4px;position:absolute;content:\\\"\\\";height:9em;background:#c5e4f1;top:-1em;left:5px}.notes-box .more-note{color:#595f67;cursor:pointer;margin-bottom:10px}.notes-box .more-note:hover{color:#538cc0}.notes-box .more-note .icon-down{margin-right:10px;color:#538cc0}.upload-attachment{display:inline;margin-left:10px}.asset-panel{border-radius:4px}.asset-panel em{color:#de3569}.asset-panel-dashboard .el-row{border-bottom:1px solid #e7eaed}.asset-panel-dashboard .el-row:last-child{border-bottom:none}.asset-panel-dashboard .panel-cell{padding:35px}.asset-panel-products .header{background:#e2f1f8;padding-left:15px;height:40px;line-height:40px;font-size:13px;color:#364f77}.asset-panel-products .header .buttons{float:right}.asset-panel-products .header .buttons button{font-size:13px;margin-right:10px}.asset-panel-products table{width:100%}.asset-panel-products table td,.asset-panel-products table th{color:#929aa3;font-weight:400;text-align:left;padding:15px;border-bottom:1px solid #e7eaed}.asset-panel-products table tbody tr:last-child td,.asset-panel-products table tbody tr:last-child th{border-bottom:0}.td-button{padding:5px 55px}.td-button .el-button{border:none}.td-button .el-button,.td-button .el-button:focus,.td-button .el-button:hover{background:#538cc0;color:#fff}.rate-chart{padding-top:20px;border-radius:4px;width:100%;height:350px}.todo table{width:100%}.todo table .first-tr{border-bottom:1px solid #f3f6f8}.todo table td,.todo table th{text-align:center}.todo table td{padding:25px 0}.todo table td.first-td-amount{padding-left:15px;color:#f55923;font-weight:700}.todo table td.first-td-asset{padding-left:15px;color:#1f98d9;font-weight:700}.todo table td .amount-color{color:#de3569}.todo table td .gColor{color:#82c5aa}.todo table td .y-operation{padding:2px 0}.todo table td .y-operation a{display:inline;padding:2px 5px;background:#538cc0;color:#fff;border-radius:3px}.todo table td .n-operation{padding:2px 0}.todo table td .n-operation a{display:inline;padding:2px 5px;background:#f3f6f8;border-radius:3px}.todo table td .yzx{color:#60b896}.todo table td .wzx{color:#de3569}.crux-date{padding:15px;width:950px;margin:0 auto}.crux-date img{width:100%}.cruxamount dl{width:200px;margin:0 auto}.cruxamount dl dd,.cruxamount dl dt{padding:5px}.cruxamount dl dt{font-size:18px}.cruxamount dl dt .amount-f{color:#d3d4d6}.cruxamount dl dt .amount-c{color:#c0c9d4}.cruxamount-mes dl{width:300px;margin:0 auto}.cruxamount-mes dl dd{padding:5px}.cruxamount-mes dl dd .subsist-f{color:#c1c3c6}.cruxamount-mes dl dd .subsist-c{margin-left:5px;color:#de3569}.cruxamount-mes dl dt{margin-left:30px;padding:5px}.cruxamount-mes dl dt .part{float:left;position:relative;left:10px;height:50px;width:4px;background:#c5e4f1}.cruxamount-mes dl dt .part:before{top:12px}.cruxamount-mes dl dt .part:after,.cruxamount-mes dl dt .part:before{content:\\\"\\\";position:absolute;width:25px;height:4px;background:#c5e4f1}.cruxamount-mes dl dt .part:after{bottom:0;left:0}.cruxamount-mes dl dt .principal-interest{float:left;margin-left:40px}.cruxamount-mes dl dt .principal-interest .interest,.cruxamount-mes dl dt .principal-interest .principal{padding:5px 0}.history-record{float:right}.history-record a{color:#538cc0;font-size:12px;font-weight:400}.asset-list{padding:15px}.asset-list table{table-layout:fixed;width:100%}.asset-list table th{text-align:left;font-weight:400;color:#9ba2aa}.asset-list table td{padding:10px 0}.asset-list-current table{table-layout:fixed;width:100%}.asset-list-current table .first-tr{border-top:1px solid #e7eaed}.asset-list-current table .two-tr{border-bottom:1px solid #e7eaed}.asset-list-current table th{text-align:left;font-weight:400;color:#9ba2aa;padding:10px 0}.asset-list-current table th:not(:first-child){border-bottom:1px solid #e7eaed}.asset-list-current table td{padding:10px 0}.asset-list-current table td.first-td{padding-left:20px;font-size:13px;font-weight:700}.extract-record{float:right}.extract-record a{color:#538cc0;font-size:12px;font-weight:400}.cost-list{padding:15px}.cost-list table{table-layout:fixed;width:100%}.cost-list table th{text-align:left;font-weight:400;color:#9ba2aa}.cost-list table td{padding:10px 0}.cost-list table td .fixed{background:#acccd9}.cost-list table td .fixed,.cost-list table td .float{padding:0 3px;color:#fff;border-radius:2px;margin-left:3px}.cost-list table td .float{background:#eea7b9}.account-list .account-table{padding:40px 30px}.account-list .account-table .account-table-n{border:1px solid #e7eaed;border-radius:4px;padding:15px}.account-list .account-table .account-table-n .account-type{color:#595f67;font-size:13px;font-weight:700}.account-list .account-table .account-table-n .account-c{color:#538cc0}.bpm{padding:15px}.bpm dl{width:260px;margin:0 auto}.bpm dl dd{color:#abb1b8}.bpm dl dt{padding:10px 0;color:#595f67;font-size:14px}.positive{color:#de3569}.negative{color:#16a474}.amount-color{color:#de3569}.icon-brackets{font-size:25px;color:#d8dadd}\", \"\", {\"version\":3,\"sources\":[\"/Users/chengzhiyuan/baton-x/kt-batonX/src/views/product_management/ProductDetail.vue\"],\"names\":[],\"mappings\":\"AACA,oCACE,WAAY,AACZ,WAAY,AACZ,gBAAiB,AACjB,cAAgB,CACjB,AACD,gDACI,eAAiB,CACpB,AACD,8BACE,gBAAiB,AACjB,mBAAqB,CACtB,AAID,qDACE,cAAgB,CACjB,AACD,uCACI,WAAY,AACZ,UAAY,CACf,AACD,oBACI,cAAgB,CACnB,AACD,0BACM,aAAe,CACpB,AACD,kBACE,gBAAkB,CACnB,AACD,sBACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,mCACI,eAAiB,CACpB,AACD,2BACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACnB,AACD,yBACE,eAAiB,CAClB,AACD,uCACI,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,WAAa,CAChB,AACD,qCACI,kBAAmB,AACnB,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAClB,AACD,iDACM,qBAAsB,AACtB,4BAA8B,AACtB,mBAAsB,CACnC,AACD,kDACM,iBAAkB,AAClB,cAAgB,CACrB,AACD,wDACQ,aAAe,CACtB,AACD,iBACE,iBAAkB,AAClB,oBAAsB,CACvB,AACD,wDACE,cAAe,AACf,qBAAsB,AACtB,YAAa,AACb,eAAkB,CACnB,AACD,yBACE,oBAAsB,CACvB,AACD,wBACE,qBAAsB,AACtB,kBAAmB,AACnB,WAAY,AACZ,YAAa,AACb,mBAAoB,AACpB,oBAAqB,AACrB,mBAAoB,AACpB,iBAAmB,CACpB,AACD,+BACI,UAAW,AACX,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAoB,AACpB,SAAU,AACV,QAAU,CACb,AACD,sBACE,cAAe,AACf,eAAgB,AAChB,kBAAoB,CACrB,AACD,4BACI,aAAe,CAClB,AACD,iCACI,kBAAmB,AACnB,aAAe,CAClB,AACD,mBACE,eAAgB,AAChB,gBAAkB,CACnB,AACD,aACE,iBAAmB,CACpB,AACD,gBACI,aAAe,CAClB,AACD,+BACE,+BAAiC,CAClC,AACD,0CACI,kBAAoB,CACvB,AACD,mCACE,YAAc,CACf,AACD,8BACE,mBAAoB,AACpB,kBAAmB,AACnB,YAAa,AACb,iBAAkB,AAClB,eAAgB,AAChB,aAAe,CAChB,AACD,uCACI,WAAa,CAChB,AACD,8CACM,eAAgB,AAChB,iBAAmB,CACxB,AACD,4BACE,UAAY,CACb,AACD,8DAEI,cAAe,AACf,gBAAoB,AACpB,gBAAiB,AACjB,aAAc,AACd,+BAAiC,CACpC,AACD,sGAEI,eAAiB,CACpB,AACD,WACE,gBAAkB,CACnB,AACD,sBACI,WAAa,CAGhB,AACD,8EAHI,mBAAoB,AACpB,UAAY,CAKf,AACD,YACE,iBAAkB,AAClB,kBAAmB,AACnB,WAAY,AACZ,YAAc,CACf,AACD,YACE,UAAY,CACb,AACD,sBACI,+BAAiC,CACpC,AACD,8BACI,iBAAmB,CACtB,AACD,eACI,cAAgB,CACnB,AACD,+BACM,kBAAmB,AACnB,cAAe,AACf,eAAkB,CACvB,AACD,8BACM,kBAAmB,AACnB,cAAe,AACf,eAAkB,CACvB,AACD,6BACM,aAAe,CACpB,AACD,uBACM,aAAe,CACpB,AACD,4BACM,aAAe,CACpB,AACD,8BACQ,eAAgB,AAChB,gBAAiB,AACjB,mBAAoB,AACpB,WAAY,AACZ,iBAAmB,CAC1B,AACD,4BACM,aAAe,CACpB,AACD,8BACQ,eAAgB,AAChB,gBAAiB,AACjB,mBAAoB,AACpB,iBAAmB,CAC1B,AACD,oBACM,aAAe,CACpB,AACD,oBACM,aAAe,CACpB,AACD,WACE,aAAc,AACd,YAAa,AACb,aAAe,CAChB,AACD,eACI,UAAY,CACf,AACD,eACE,YAAa,AACb,aAAe,CAChB,AACD,oCAEI,WAAa,CAChB,AACD,kBACI,cAAgB,CACnB,AACD,4BACM,aAAe,CACpB,AACD,4BACM,aAAe,CACpB,AACD,mBACE,YAAa,AACb,aAAe,CAChB,AACD,sBACI,WAAa,CAChB,AACD,iCACM,aAAe,CACpB,AACD,iCACM,gBAAiB,AACjB,aAAe,CACpB,AACD,sBACI,iBAAkB,AAClB,WAAa,CAChB,AACD,4BACM,WAAY,AACZ,kBAAmB,AACnB,UAAW,AACX,YAAa,AACb,UAAW,AACX,kBAAoB,CACzB,AACD,mCAMQ,QAAU,CACjB,AACD,qEAPQ,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,kBAAoB,CAW3B,AARD,kCAMQ,SAAY,AACZ,MAAU,CACjB,AACD,0CACM,WAAY,AACZ,gBAAkB,CACvB,AAID,yGACQ,aAAe,CACtB,AACD,gBACE,WAAa,CACd,AACD,kBACI,cAAe,AACf,eAAgB,AAChB,eAAoB,CACvB,AACD,YACE,YAAc,CACf,AACD,kBACI,mBAAoB,AACpB,UAAY,CACf,AACD,qBACM,gBAAiB,AACjB,gBAAoB,AACpB,aAAe,CACpB,AACD,qBACM,cAAgB,CACrB,AACD,0BACE,mBAAoB,AACpB,UAAY,CACb,AACD,oCACI,4BAA8B,CACjC,AACD,kCACI,+BAAiC,CACpC,AACD,6BACI,gBAAiB,AACjB,gBAAoB,AACpB,cAAe,AACf,cAAgB,CACnB,AACD,+CACM,+BAAiC,CACtC,AACD,6BACI,cAAgB,CACnB,AACD,sCACM,kBAAmB,AACnB,eAAgB,AAChB,eAAkB,CACvB,AACD,gBACE,WAAa,CACd,AACD,kBACI,cAAe,AACf,eAAgB,AAChB,eAAoB,CACvB,AACD,WACE,YAAc,CACf,AACD,iBACI,mBAAoB,AACpB,UAAY,CACf,AACD,oBACM,gBAAiB,AACjB,gBAAoB,AACpB,aAAe,CACpB,AACD,oBACM,cAAgB,CACrB,AACD,2BAGQ,kBAAoB,CAG3B,AACD,sDANQ,cAAe,AACf,WAAY,AAEZ,kBAAmB,AACnB,eAAiB,CAQxB,AAND,2BAGQ,kBAAoB,CAG3B,AACD,6BACE,iBAAmB,CACpB,AACD,8CACI,yBAA0B,AAC1B,kBAAmB,AACnB,YAAc,CACjB,AACD,4DACM,cAAe,AACf,eAAgB,AAChB,eAAkB,CACvB,AACD,yDACM,aAAe,CACpB,AACD,KACE,YAAc,CACf,AACD,QACI,YAAa,AACb,aAAe,CAClB,AACD,WACM,aAAe,CACpB,AACD,WACM,eAAgB,AAChB,cAAe,AACf,cAAgB,CACrB,AACD,UACE,aAAe,CAChB,AACD,UACE,aAAe,CAChB,AACD,cACE,aAAe,CAChB,AACD,eACE,eAAgB,AAChB,aAAe,CAChB\",\"file\":\"ProductDetail.vue\",\"sourcesContent\":[\"\\n.asset-detail .el-upload-list__item {\\n  float: left;\\n  width: auto;\\n  margin-top: 10px;\\n  font-size: 13px;\\n}\\n.asset-detail .el-upload-list__item:first-child {\\n    margin-top: 10px;\\n}\\n.asset-detail .el-upload-list {\\n  overflow: hidden;\\n  margin-bottom: -15px;\\n}\\n.asset-detail .el-textarea textarea {\\n  font-size: 13px;\\n}\\n.attachments-box {\\n  font-size: 13px;\\n}\\n.attachments-box .el-upload-list__item {\\n    float: left;\\n    width: auto;\\n}\\n.attachments-box h3 {\\n    font-size: 13px;\\n}\\n.attachments-box h3 small {\\n      color: #929aa3;\\n}\\n.notes-box .notes {\\n  padding-top: 20px;\\n}\\n.notes-box .note-line {\\n  margin-bottom: 20px;\\n  position: relative;\\n}\\n.notes-box .note-line:last-of-type {\\n    overflow: hidden;\\n}\\n.notes-box .note-time-line {\\n  float: left;\\n  width: 170px;\\n  text-align: center;\\n  padding-top: 35px;\\n}\\n.notes-box .note-content {\\n  overflow: hidden;\\n}\\n.notes-box .note-content .created-time {\\n    color: #929aa3;\\n    position: absolute;\\n    right: 10px;\\n    bottom: 10px;\\n}\\n.notes-box .note-content .operations {\\n    margin-bottom: 5px;\\n    text-align: right;\\n    font-size: 12px;\\n    color: #c9cdd1;\\n}\\n.notes-box .note-content .operations .icon-close {\\n      display: inline-block;\\n      -webkit-transform: scale(0.8);\\n              transform: scale(0.8);\\n}\\n.notes-box .note-content .operations .icon-batonx {\\n      margin-left: 10px;\\n      cursor: pointer;\\n}\\n.notes-box .note-content .operations .icon-batonx:hover {\\n        color: #538cc0;\\n}\\n.notes-box label {\\n  padding-top: 15px;\\n  display: inline-block;\\n}\\n.notes-box .el-textarea.is-disabled .el-textarea__inner {\\n  color: #595f67;\\n  border-color: #e2e5e9;\\n  cursor: auto;\\n  background: white;\\n}\\n.notes-box .add-note-btn {\\n  margin: 10px 0 0 10px;\\n}\\n.notes-box .icon-circle {\\n  display: inline-block;\\n  border-radius: 50%;\\n  width: 14px;\\n  height: 14px;\\n  background: #c5e4f1;\\n  vertical-align: -2px;\\n  margin: 0 5px 0 8px;\\n  position: relative;\\n}\\n.notes-box .icon-circle:before {\\n    width: 4px;\\n    position: absolute;\\n    content: '';\\n    height: 9em;\\n    background: #c5e4f1;\\n    top: -1em;\\n    left: 5px;\\n}\\n.notes-box .more-note {\\n  color: #595f67;\\n  cursor: pointer;\\n  margin-bottom: 10px;\\n}\\n.notes-box .more-note:hover {\\n    color: #538cc0;\\n}\\n.notes-box .more-note .icon-down {\\n    margin-right: 10px;\\n    color: #538cc0;\\n}\\n.upload-attachment {\\n  display: inline;\\n  margin-left: 10px;\\n}\\n.asset-panel {\\n  border-radius: 4px;\\n}\\n.asset-panel em {\\n    color: #de3569;\\n}\\n.asset-panel-dashboard .el-row {\\n  border-bottom: 1px solid #e7eaed;\\n}\\n.asset-panel-dashboard .el-row:last-child {\\n    border-bottom: none;\\n}\\n.asset-panel-dashboard .panel-cell {\\n  padding: 35px;\\n}\\n.asset-panel-products .header {\\n  background: #e2f1f8;\\n  padding-left: 15px;\\n  height: 40px;\\n  line-height: 40px;\\n  font-size: 13px;\\n  color: #364f77;\\n}\\n.asset-panel-products .header .buttons {\\n    float: right;\\n}\\n.asset-panel-products .header .buttons button {\\n      font-size: 13px;\\n      margin-right: 10px;\\n}\\n.asset-panel-products table {\\n  width: 100%;\\n}\\n.asset-panel-products table th,\\n  .asset-panel-products table td {\\n    color: #929aa3;\\n    font-weight: normal;\\n    text-align: left;\\n    padding: 15px;\\n    border-bottom: 1px solid #e7eaed;\\n}\\n.asset-panel-products table tbody tr:last-child th,\\n  .asset-panel-products table tbody tr:last-child td {\\n    border-bottom: 0;\\n}\\n.td-button {\\n  padding: 5px 55px;\\n}\\n.td-button .el-button {\\n    border: none;\\n    background: #538cc0;\\n    color: #fff;\\n}\\n.td-button .el-button:hover, .td-button .el-button:focus {\\n      color: #fff;\\n      background: #538cc0;\\n}\\n.rate-chart {\\n  padding-top: 20px;\\n  border-radius: 4px;\\n  width: 100%;\\n  height: 350px;\\n}\\n.todo table {\\n  width: 100%;\\n}\\n.todo table .first-tr {\\n    border-bottom: 1px solid #f3f6f8;\\n}\\n.todo table th, .todo table td {\\n    text-align: center;\\n}\\n.todo table td {\\n    padding: 25px 0;\\n}\\n.todo table td.first-td-amount {\\n      padding-left: 15px;\\n      color: #f55923;\\n      font-weight: bold;\\n}\\n.todo table td.first-td-asset {\\n      padding-left: 15px;\\n      color: #1f98d9;\\n      font-weight: bold;\\n}\\n.todo table td .amount-color {\\n      color: #de3569;\\n}\\n.todo table td .gColor {\\n      color: #82c5aa;\\n}\\n.todo table td .y-operation {\\n      padding: 2px 0;\\n}\\n.todo table td .y-operation a {\\n        display: inline;\\n        padding: 2px 5px;\\n        background: #538cc0;\\n        color: #fff;\\n        border-radius: 3px;\\n}\\n.todo table td .n-operation {\\n      padding: 2px 0;\\n}\\n.todo table td .n-operation a {\\n        display: inline;\\n        padding: 2px 5px;\\n        background: #f3f6f8;\\n        border-radius: 3px;\\n}\\n.todo table td .yzx {\\n      color: #60b896;\\n}\\n.todo table td .wzx {\\n      color: #de3569;\\n}\\n.crux-date {\\n  padding: 15px;\\n  width: 950px;\\n  margin: 0 auto;\\n}\\n.crux-date img {\\n    width: 100%;\\n}\\n.cruxamount dl {\\n  width: 200px;\\n  margin: 0 auto;\\n}\\n.cruxamount dl dd,\\n  .cruxamount dl dt {\\n    padding: 5px;\\n}\\n.cruxamount dl dt {\\n    font-size: 18px;\\n}\\n.cruxamount dl dt .amount-f {\\n      color: #d3d4d6;\\n}\\n.cruxamount dl dt .amount-c {\\n      color: #c0c9d4;\\n}\\n.cruxamount-mes dl {\\n  width: 300px;\\n  margin: 0 auto;\\n}\\n.cruxamount-mes dl dd {\\n    padding: 5px;\\n}\\n.cruxamount-mes dl dd .subsist-f {\\n      color: #c1c3c6;\\n}\\n.cruxamount-mes dl dd .subsist-c {\\n      margin-left: 5px;\\n      color: #de3569;\\n}\\n.cruxamount-mes dl dt {\\n    margin-left: 30px;\\n    padding: 5px;\\n}\\n.cruxamount-mes dl dt .part {\\n      float: left;\\n      position: relative;\\n      left: 10px;\\n      height: 50px;\\n      width: 4px;\\n      background: #c5e4f1;\\n}\\n.cruxamount-mes dl dt .part:before {\\n        content: '';\\n        position: absolute;\\n        width: 25px;\\n        height: 4px;\\n        background: #c5e4f1;\\n        top: 12px;\\n}\\n.cruxamount-mes dl dt .part:after {\\n        content: '';\\n        position: absolute;\\n        width: 25px;\\n        height: 4px;\\n        background: #c5e4f1;\\n        bottom: 0px;\\n        left: 0px;\\n}\\n.cruxamount-mes dl dt .principal-interest {\\n      float: left;\\n      margin-left: 40px;\\n}\\n.cruxamount-mes dl dt .principal-interest .principal {\\n        padding: 5px 0;\\n}\\n.cruxamount-mes dl dt .principal-interest .interest {\\n        padding: 5px 0;\\n}\\n.history-record {\\n  float: right;\\n}\\n.history-record a {\\n    color: #538cc0;\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\n.asset-list {\\n  padding: 15px;\\n}\\n.asset-list table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.asset-list table th {\\n      text-align: left;\\n      font-weight: normal;\\n      color: #9ba2aa;\\n}\\n.asset-list table td {\\n      padding: 10px 0;\\n}\\n.asset-list-current table {\\n  table-layout: fixed;\\n  width: 100%;\\n}\\n.asset-list-current table .first-tr {\\n    border-top: 1px solid #e7eaed;\\n}\\n.asset-list-current table .two-tr {\\n    border-bottom: 1px solid #e7eaed;\\n}\\n.asset-list-current table th {\\n    text-align: left;\\n    font-weight: normal;\\n    color: #9ba2aa;\\n    padding: 10px 0;\\n}\\n.asset-list-current table th:not(:first-child) {\\n      border-bottom: 1px solid #e7eaed;\\n}\\n.asset-list-current table td {\\n    padding: 10px 0;\\n}\\n.asset-list-current table td.first-td {\\n      padding-left: 20px;\\n      font-size: 13px;\\n      font-weight: bold;\\n}\\n.extract-record {\\n  float: right;\\n}\\n.extract-record a {\\n    color: #538cc0;\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\n.cost-list {\\n  padding: 15px;\\n}\\n.cost-list table {\\n    table-layout: fixed;\\n    width: 100%;\\n}\\n.cost-list table th {\\n      text-align: left;\\n      font-weight: normal;\\n      color: #9ba2aa;\\n}\\n.cost-list table td {\\n      padding: 10px 0;\\n}\\n.cost-list table td .fixed {\\n        padding: 0 3px;\\n        color: #fff;\\n        background: #acccd9;\\n        border-radius: 2px;\\n        margin-left: 3px;\\n}\\n.cost-list table td .float {\\n        padding: 0 3px;\\n        color: #fff;\\n        background: #eea7b9;\\n        border-radius: 2px;\\n        margin-left: 3px;\\n}\\n.account-list .account-table {\\n  padding: 40px 30px;\\n}\\n.account-list .account-table .account-table-n {\\n    border: 1px solid #e7eaed;\\n    border-radius: 4px;\\n    padding: 15px;\\n}\\n.account-list .account-table .account-table-n .account-type {\\n      color: #595f67;\\n      font-size: 13px;\\n      font-weight: bold;\\n}\\n.account-list .account-table .account-table-n .account-c {\\n      color: #538cc0;\\n}\\n.bpm {\\n  padding: 15px;\\n}\\n.bpm dl {\\n    width: 260px;\\n    margin: 0 auto;\\n}\\n.bpm dl dd {\\n      color: #abb1b8;\\n}\\n.bpm dl dt {\\n      padding: 10px 0;\\n      color: #595f67;\\n      font-size: 14px;\\n}\\n.positive {\\n  color: #de3569;\\n}\\n.negative {\\n  color: #16a474;\\n}\\n.amount-color {\\n  color: #de3569;\\n}\\n.icon-brackets {\\n  font-size: 25px;\\n  color: #d8dadd;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-76bf6b05\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/product_management/ProductDetail.vue\n// module id = 663\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDetail.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"069cd959\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDetail.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"autoprefixer\\\":false,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-rewriter.js?{\\\"id\\\":\\\"data-v-76bf6b05\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ProductDetail.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"autoprefixer\":false,\"sourceMap\":true}!./~/vue-loader/lib/style-rewriter.js?{\"id\":\"data-v-76bf6b05\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/product_management/ProductDetail.vue\n// module id = 709\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/cruxDate.33103af.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/cruxDate.png\n// module id = 719\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/img/cruxDate2.396dc25.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/cruxDate2.png\n// module id = 720\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-detail\"\n  }, [_c('div', {\n    staticClass: \"box\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_c('h3', [_vm._v(_vm._s(_vm.demo.name))]), _c('small', [_vm._v(\"简称：\" + _vm._s(_vm.demo.shortName))]), _c('small', [_vm._v(\"资产代码：YZ0413\")]), _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.editAsset\n    }\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-edit\"\n  }), _vm._v(\"编辑\")]), _c('el-button', {\n    attrs: {\n      \"type\": \"gray\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.deleteAsset\n    }\n  }, [_c('i', {\n    staticClass: \"icon-batonx icon-delete\"\n  }), _vm._v(\"删除\")])], 1)]), _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"6.5%\")])]), _c('tr', [_c('th', [_vm._v(\"起购金额：\")]), _c('td', [_vm._v(\"￥1000\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"恒大金服\")])]), _c('tr', [_c('th', [_vm._v(\"增信机构：\")]), _c('td', [_vm._v(\"-\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"利率：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"6.5%\")])]), _c('tr', [_c('th', [_vm._v(\"起购金额：\")]), _c('td', [_vm._v(\"￥1000\")])]), _c('tr', [_c('th', [_vm._v(\"发行平台：\")]), _c('td', [_vm._v(\"恒大金服\")])]), _c('tr', [_c('th', [_vm._v(\"增信机构：\")]), _c('td', [_vm._v(\"-\")])])]) : _vm._e()]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"发行期限：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"30天\")])]), _c('tr', [_c('th', [_vm._v(\"递增金额：\")]), _c('td', [_vm._v(\"￥100\")])]), _c('tr', [_c('th', [_vm._v(\"产品类型：\")]), _c('td', [_vm._v(\"理财计划\")])]), _c('tr', [_c('th', [_vm._v(\"增信措施：\")]), _c('td', [_vm._v(\"保险备用金\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"发行期限：\")]), _c('td', {\n    staticClass: \"em\"\n  }, [_vm._v(\"30天\")])]), _c('tr', [_c('th', [_vm._v(\"递增金额：\")]), _c('td', [_vm._v(\"￥100\")])]), _c('tr', [_c('th', [_vm._v(\"产品类型：\")]), _c('td', [_vm._v(\"理财计划\")])]), _c('tr', [_c('th', [_vm._v(\"增信措施：\")]), _c('td', [_vm._v(\"保险备用金\")])])]) : _vm._e()]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [(_vm.demo.type === 0) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"风险等级：\")]), _c('td', [_vm._v(\"低风险\")])]), _c('tr', [_c('th', [_vm._v(\"托管机构：\")]), _c('td', [_vm._v(\"平安银行\")])])]) : _vm._e(), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"td-button\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": _vm.goRegPro\n    }\n  }, [_vm._v(\"登记产品列表\")]), _c('el-button', {\n    on: {\n      \"click\": _vm.goClient\n    }\n  }, [_vm._v(\"客户列表\")])], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('table', [_c('tr', [_c('th', [_vm._v(\"风险等级：\")]), _c('td', [_vm._v(\"低风险\")])]), _c('tr', [_c('th', [_vm._v(\"托管机构：\")]), _c('td', [_vm._v(\"平安银行\")])])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"td-button\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": _vm.goRegPro\n    }\n  }, [_vm._v(\"登记产品列表\")]), _c('el-button', {\n    on: {\n      \"click\": _vm.goClient\n    }\n  }, [_vm._v(\"客户列表\")])], 1) : _vm._e()])], 1)], 1), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"attachments-box\"\n  }, [_c('h3', [_vm._v(\"附件：\"), _c('small', [_vm._v(\"*最多支持添加20个文件，每个文件不得超过20M\")]), _c('el-upload', {\n    staticClass: \"upload-attachment\",\n    attrs: {\n      \"action\": \"//jsonplaceholder.typicode.com/posts/\",\n      \"file-list\": _vm.demo.attachments\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"size\": \"mini\",\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(\"增加\")])], 1)], 1)])]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('kt-note-card', {\n    attrs: {\n      \"passed-notes\": _vm.demo.notes\n    }\n  })], 1)])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\" 待办事项\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"todo\"\n  }, [_c('table', [_c('tbody', _vm._l((_vm.producttype1), function(type) {\n    return _c('tr', {\n      staticClass: \"first-tr\"\n    }, [_c('td', {\n      class: [type.assetType === '资金' ? 'first-td-amount' : 'first-td-asset ']\n    }, [_vm._v(_vm._s(type.assetType))]), _c('td', _vm._l((type.state), function(state) {\n      return _c('div', [_vm._v(_vm._s(state))])\n    })), _c('td', _vm._l((type.company), function(company) {\n      return _c('div', [_vm._v(_vm._s(company))])\n    })), _c('td', _vm._l((type.accounts), function(account, index) {\n      return _c('div', {\n        class: ~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\n      }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(account)))])\n    })), _c('td', [(type.boole) ? _c('i', {\n      staticClass: \"i icon-batonx icon-brackets\"\n    }) : _vm._e()]), _c('td', {\n      staticClass: \"amount-color\"\n    }, [_vm._v(_vm._s(type.Surplus))]), _c('td', _vm._l((type.stated), function(stated) {\n      return _c('div', {\n        class: _vm._f(\"filterAmountColor\")(stated)\n      }, [_vm._v(_vm._s(stated)), (stated === '审批中') ? _c('i', {\n        staticClass: \"icon-batonx icon-shenpi\"\n      }) : _vm._e()])\n    })), _c('td', [_vm._v(\"最晚明日12：00执行\")]), (type.assetType === '资金') ? _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])])]) : _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])])])\n  }))])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"todo\"\n  }, [_c('table', [_c('tbody', _vm._l((_vm.producttype2), function(type) {\n    return _c('tr', {\n      staticClass: \"first-tr\"\n    }, [_c('td', {\n      class: [type.assetType === '资金' ? 'first-td-amount' : 'first-td-asset ']\n    }, [_vm._v(_vm._s(type.assetType))]), _c('td', _vm._l((type.state), function(state) {\n      return _c('div', [_vm._v(_vm._s(state))])\n    })), _c('td', _vm._l((type.company), function(company) {\n      return _c('div', [_vm._v(_vm._s(company))])\n    })), _c('td', _vm._l((type.accounts), function(account, index) {\n      return _c('div', {\n        class: ~'买入申购已更新'.indexOf(type.state[index]) ? 'amount-color ' : 'gColor'\n      }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(account)))])\n    })), _c('td', [(type.boole) ? _c('i', {\n      staticClass: \"i icon-batonx icon-brackets\"\n    }) : _vm._e()]), _c('td', {\n      staticClass: \"amount-color\"\n    }, [_vm._v(_vm._s(_vm._f(\"ktCurrency\")(type.Surplus)))]), _c('td', _vm._l((type.stated), function(stated) {\n      return _c('div', {\n        class: _vm._f(\"filterAmountColor\")(stated)\n      }, [_vm._v(_vm._s(stated)), (stated === '审批中') ? _c('i', {\n        staticClass: \"icon-batonx icon-shenpi\"\n      }) : _vm._e()])\n    })), _c('td', [_vm._v(\"最晚明日12：00执行\")]), (type.assetType === '资金') ? _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.productDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])]) : _c('td', [_c('div', {\n      staticClass: \"y-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = true, _vm.id = 0)\n        }\n      }\n    }, [_vm._v(\"操作\")])]), _c('div', {\n      staticClass: \"n-operation\"\n    }, [_c('a', {\n      on: {\n        \"click\": function($event) {\n          _vm.assetDialog(type, _vm.be = false, _vm.id = 1)\n        }\n      }\n    }, [_vm._v(\"操作\")])])])])\n  }))])]) : _vm._e()])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"关键日期\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"crux-date\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": require(\"../../assets/images/cruxDate.png\")\n    }\n  })]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"crux-date\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": require(\"../../assets/images/cruxDate2.png\")\n    }\n  })]) : _vm._e()])]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"关键金额\")]), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"实际募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"124,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"计划募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"128,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"未募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"4,000,000.00\")])])])])], 1)], 1)]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount-mes\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"存续金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"245,742.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 124,500,000.00\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 251,905,0\")])])])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"已兑付金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"0\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 0\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 0\")])])])])])])], 1)], 1)])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"实际募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"224,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"计划募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"228,500,000.00\")])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"未募集金额：\")]), _c('dt', [_c('span', {\n    staticClass: \"amount-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"amount-c\"\n  }, [_vm._v(\"4,000,000.00\")])])])])], 1)], 1)]), _c('div', {\n    staticClass: \"box-section\"\n  }, [_c('div', {\n    staticClass: \"cruxamount-mes\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"存续金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\"124,751,905.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 124,500,000.00\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 251,905,0\")])])])])])]), _c('el-col', {\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('dl', [_c('dd', [_c('label', [_vm._v(\"已兑付金额：\")]), _c('span', {\n    staticClass: \"subsist-f\"\n  }, [_vm._v(\"￥\")]), _c('span', {\n    staticClass: \"subsist-c\"\n  }, [_vm._v(\" 99,750,095.00\")])]), _c('dt', [_c('div', {\n    staticClass: \"part\"\n  }), _c('div', {\n    staticClass: \"principal-interest\"\n  }, [_c('div', {\n    staticClass: \"principal\"\n  }, [_c('label', [_vm._v(\"本金：\")]), _c('span', [_vm._v(\"￥ 99,548,674.80\")])]), _c('div', {\n    staticClass: \"interest\"\n  }, [_c('label', [_vm._v(\"利息：\")]), _c('span', [_vm._v(\"￥ 201,420.152\")])])])])])])], 1)], 1)])]) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"持有资产列表\"), _c('div', {\n    staticClass: \"history-record\"\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.historyDialog\n    }\n  }, [_vm._v(\"历史交易记录\")])])]), (_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_vm._m(0), _c('el-dialog', {\n    attrs: {\n      \"title\": \"历史交易记录\"\n    },\n    model: {\n      value: (_vm.historyVisible),\n      callback: function($$v) {\n        _vm.historyVisible = $$v\n      },\n      expression: \"historyVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.historyDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"assetsName\",\n      \"label\": \"资产名称\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"cztype\",\n      \"label\": \"操作类型\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"label\": \"变动金额(元)\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          class: scope.row.change > 0 ? 'positive' : 'negative'\n        }, [_vm._v(_vm._s(scope.row.change))])]\n      }]\n    ])\n  })], 1)], 1)], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"box-content\"\n  }, [_vm._m(1), _c('el-dialog', {\n    attrs: {\n      \"title\": \"历史交易记录\"\n    },\n    model: {\n      value: (_vm.historyVisible),\n      callback: function($$v) {\n        _vm.historyVisible = $$v\n      },\n      expression: \"historyVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.historyDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"assetsName\",\n      \"label\": \"资产名称\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"cztype\",\n      \"label\": \"操作类型\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"label\": \"变动金额(元)\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          class: scope.row.change > 0 ? 'positive' : 'negative'\n        }, [_vm._v(_vm._s(scope.row.change))])]\n      }]\n    ])\n  })], 1)], 1)], 1) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"费用列表\"), _c('div', {\n    staticClass: \"extract-record\"\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.extractDialog\n    }\n  }, [_vm._v(\"提取记录\")])])]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"cost-list\"\n  }, [_c('table', [_vm._m(2), _c('tbody', _vm._l((_vm.costLists), function(costList) {\n    return _c('tr', [_c('td', [_vm._v(_vm._s(costList.charge)), _c('span', {\n      class: costList.profitType == '固定' ? 'fixed' : 'float'\n    }, [_vm._v(_vm._s(costList.profitType))])]), _c('td', [_vm._v(_vm._s(costList.costtype))]), _c('td', [_vm._v(_vm._s(costList.billingMode))]), _c('td', [_vm._v(_vm._s(costList.rate))]), _c('td', [_vm._v(_vm._s(costList.billingDates))]), _c('td', [_vm._v(_vm._s(costList.costbase))]), _c('td', [_vm._v(_vm._s(costList.payfrequency))]), _c('td', [_vm._v(_vm._s(costList.startDate))]), _c('td', [_vm._v(_vm._s(costList.already))])])\n  }))])]) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"cost-list\"\n  }, [_c('table', [_vm._m(3), _c('tbody', _vm._l((_vm.currentLists), function(currentList) {\n    return _c('tr', [_c('td', [_vm._v(_vm._s(currentList.charge)), _c('span', {\n      class: currentList.profitType == '固定' ? 'fixed' : 'float'\n    }, [_vm._v(_vm._s(currentList.profitType))])]), _c('td', [_vm._v(_vm._s(currentList.costtype))]), _c('td', [_vm._v(_vm._s(currentList.billingMode))]), _c('td', [_vm._v(_vm._s(currentList.rate))]), _c('td', [_vm._v(_vm._s(currentList.billingDates))]), _c('td', [_vm._v(_vm._s(currentList.costbase))]), _c('td', [_vm._v(_vm._s(currentList.payfrequency))]), _c('td', [_vm._v(_vm._s(currentList.startDate))]), _c('td', [_vm._v(_vm._s(currentList.already))])])\n  }))])]) : _vm._e(), _c('el-dialog', {\n    attrs: {\n      \"title\": \"提取记录\"\n    },\n    model: {\n      value: (_vm.extractVisible),\n      callback: function($$v) {\n        _vm.extractVisible = $$v\n      },\n      expression: \"extractVisible\"\n    }\n  }, [_c('el-table', {\n    attrs: {\n      \"data\": _vm.extractDatas\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"property\": \"time\",\n      \"label\": \"时间\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"charge\",\n      \"label\": \"收费主体\"\n    }\n  }), _c('el-table-column', {\n    attrs: {\n      \"property\": \"extract\",\n      \"label\": \"提取金额\"\n    }\n  })], 1)], 1)], 1)]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"账户列表\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [(_vm.demo.type === 0) ? _c('div', {\n    staticClass: \"account-list\"\n  }, [_c('el-row', _vm._l((_vm.accountLists), function(accountList) {\n    return _c('el-col', {\n      attrs: {\n        \"span\": 12\n      }\n    }, [_c('div', {\n      staticClass: \"account-table\"\n    }, [_c('div', {\n      staticClass: \"account-table-n\"\n    }, [_c('table', [_c('tr', [_c('th', [_vm._v(\"账户类型：\")]), _c('td', {\n      staticClass: \"account-type\"\n    }, [_vm._v(_vm._s(accountList.accountType))])]), _c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(_vm._s(accountList.accountName))])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n      staticClass: \"account-c\"\n    }, [_vm._v(_vm._s(accountList.account))])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(_vm._s(accountList.openAccount))])])])])])])\n  }))], 1) : _vm._e(), (_vm.demo.type === 1) ? _c('div', {\n    staticClass: \"account-list\"\n  }, [_c('el-row', _vm._l((_vm.accountLists), function(accountList) {\n    return _c('el-col', {\n      attrs: {\n        \"span\": 12\n      }\n    }, [_c('div', {\n      staticClass: \"account-table\"\n    }, [_c('div', {\n      staticClass: \"account-table-n\"\n    }, [_c('table', [_c('tr', [_c('th', [_vm._v(\"账户类型：\")]), _c('td', {\n      staticClass: \"account-type\"\n    }, [_vm._v(_vm._s(accountList.accountType))])]), _c('tr', [_c('th', [_vm._v(\"账户名：\")]), _c('td', [_vm._v(_vm._s(accountList.accountName))])]), _c('tr', [_c('th', [_vm._v(\"账户：\")]), _c('td', {\n      staticClass: \"account-c\"\n    }, [_vm._v(_vm._s(accountList.account))])]), _c('tr', [_c('th', [_vm._v(\"开户行：\")]), _c('td', [_vm._v(_vm._s(accountList.openAccount))])])])])])])\n  }))], 1) : _vm._e()]), _c('div', {\n    staticClass: \"box box-normal\"\n  }, [_c('div', {\n    staticClass: \"box-header\"\n  }, [_vm._v(\"审批流程管理\")]), _c('div', {\n    staticClass: \"box-content\"\n  }, [_c('div', {\n    staticClass: \"bpm\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"审批流程名称\")]), _c('dt', [_vm._v(\"资金清算审批流程B\")])])]), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('dl', [_c('dd', [_vm._v(\"流程详情\")]), _c('dt', [_vm._v(\" 项目组长  →  项目经理  →  项目总监\")])])])], 1)], 1)])])]), _c('kt-product-dialog', {\n    ref: \"productDialog\"\n  }), _c('kt-asset-dialog', {\n    ref: \"assetDialog\"\n  })], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-list\"\n  }, [_c('table', [_c('thead', [_c('tr', [_c('th', [_vm._v(\"名称\")]), _c('th', [_vm._v(\"金额\")]), _c('th', [_vm._v(\"比例\")]), _c('th', [_vm._v(\"今日收益\")]), _c('th', [_vm._v(\"累计收益\")])])]), _c('tbody', [_c('tr', [_c('td', [_vm._v(\"创元开发建设投资企业融资项目\")]), _c('td', [_vm._v(\"￥ 24,296,355.00\")]), _c('td', [_vm._v(\"100%\")]), _c('td', [_vm._v(\"￥ 1,336,299.52\")]), _c('td', [_vm._v(\"￥ 1,336,299.52\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"asset-list-current\"\n  }, [_c('table', [_c('thead', [_c('tr', [_c('th'), _c('th', [_vm._v(\"资产名称\")]), _c('th', [_vm._v(\"金额\")]), _c('th', [_vm._v(\"比例\")]), _c('th', [_vm._v(\"今日收益\")]), _c('th', [_vm._v(\"累计收益\")])])]), _c('tbody', [_c('tr', [_c('td', {\n    staticClass: \"first-td\",\n    attrs: {\n      \"rowspan\": \"2\"\n    }\n  }, [_vm._v(\"流动性资产\")]), _c('td', [_vm._v(\"现金\")]), _c('td', [_vm._v(\"￥1,000,000.00\")]), _c('td', [_vm._v(\" 0.54%\")]), _c('td', [_vm._v(\"￥30,000.00\")]), _c('td', [_vm._v(\"￥30,000.00\")])]), _c('tr', {\n    staticClass: \"two-tr\"\n  }, [_c('td', [_vm._v(\"鹏华添利宝货币基金\")]), _c('td', [_vm._v(\"￥182,055,000.00\")]), _c('td', [_vm._v(\" 55.5%\")]), _c('td', [_vm._v(\"￥61,258,800.00\")]), _c('td', [_vm._v(\"￥61,258,800.00\")])]), _c('tr', [_c('td', {\n    staticClass: \"first-td\",\n    attrs: {\n      \"rowspan\": \"2\"\n    }\n  }, [_vm._v(\"其他资产\")]), _c('td', [_vm._v(\"小定宝-财富-南京某公司借款\")]), _c('td', [_vm._v(\"￥23,800,000.00\")]), _c('td', [_vm._v(\" 12.96%\")]), _c('td', [_vm._v(\"￥14,280,000.00\")]), _c('td', [_vm._v(\"￥14,280,000.00\")])]), _c('tr', [_c('td', [_vm._v(\"小定宝-财富-海航商业控股项目\")]), _c('td', [_vm._v(\"￥102,098,000.00\")]), _c('td', [_vm._v(\" 31%\")]), _c('td', [_vm._v(\"￥39,960,216.80\")]), _c('td', [_vm._v(\"￥39,960,216.80\")])])])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"收费主体\")]), _c('th', [_vm._v(\"费用类型\")]), _c('th', [_vm._v(\"计费方式\")]), _c('th', [_vm._v(\"费率\")]), _c('th', [_vm._v(\"计费天数\")]), _c('th', [_vm._v(\"费用基数\")]), _c('th', [_vm._v(\"支付频率\")]), _c('th', [_vm._v(\"计费开始日期\")]), _c('th', [_vm._v(\"已记提费用\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"收费主体\")]), _c('th', [_vm._v(\"费用类型\")]), _c('th', [_vm._v(\"计费方式\")]), _c('th', [_vm._v(\"费率\")]), _c('th', [_vm._v(\"计费天数\")]), _c('th', [_vm._v(\"费用基数\")]), _c('th', [_vm._v(\"支付频率\")]), _c('th', [_vm._v(\"计费开始日期\")]), _c('th', [_vm._v(\"已记提费用\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-76bf6b05\"}!./~/vue-loader/lib/template-loader.js?raw&engine=pug!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/product_management/ProductDetail.vue\n// module id = 749\n// module chunks = 0"],"sourceRoot":""}